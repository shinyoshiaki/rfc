ワークグループネットワーク・ワーキンググループインターネットドラフト：ドラフト・ムリロ・ウィープ02出版された：2023年3月29日意図されたステータス情報提供期限切れ：2023年9月30日著者たち
S.ムリーリョ
ミリキャスト
 
C.チェン
バイトダンス
WebRTC-HTTP Egressプロトコル（WHEP）
要旨
この文書では、WebRTCベースの視聴者がストリーミングサービスやコンテンツ配信ネットワーク（CDN）、WebRTC伝送ネットワーク（WTN）からコンテンツを視聴できるようにする、シンプルなHTTPベースのプロトコルについて説明します

本メモの位置づけ
本インターネットドラフトは、BCP78およびBCP79の規定に完全に準拠して提出される

Internet-Draftは、インターネット技術タスクフォース（IETF）の作業文書である。他のグループも作業文書をInternet-Draftとして配布することがあることに注意。現在のInternet-Draftのリストはhttps://datatracker.ietf.org/drafts/current/.ある。

インターネットドラフトは、最長6ヶ月間有効なドラフト文書であり、いつでも他の文書に更新、置き換え、または廃止される可能性があります。インターネット・ドラフトを参考資料として使用したり、「作業中以外の理由で引用したりすることは不適切である。

このインターネットドラフトの有効期限は2023年9月30日である

著作権について
Copyright (c) 2023 IETF Trust and the persons identified as the document authors.無断複写・転載を禁じます

本文書は、本文書の発行日において有効なBCP 78およびIETFトラストのIETF文書に 関する法的規定(https://trustee.ietf.org/license-info)に従うものとする。これらの文書には、この文書に関するあなたの権利と制限が記述されていますので、注意深く確認してください。この文書から抽出されたコードコンポーネントは、トラスト法的条項の第4.e項 に記述されているように、改訂BSDライセンスの文章を含めなければならず、また、 改訂BSDライセンスに記述されているように、無保証で提供されます

▲
目次
1.はじめに

2.用語

3.概要

4.プロトコル操作

4.1.ICEとNATのサポート

4.2.WebRTCの制約

4.3.ロードバランシングとリダイレクト

4.4.STUN/TURNサーバーの設定

4.5.認証と承認

4.6.プロトコルの拡張

4.6.1.サーバー送信イベント拡張機能

4.6.2.ビデオレイヤー選択エクステンション

5.セキュリティへの配慮

6.IANAに関する考察

6.1.WHEP URNサブネームスペースとwhepレジストリの登録

6.2.whepのURNサブネームスペース

6.2.1.仕様テンプレート

7.謝辞

8.参考文献

8.1.規範となる参考文献

8.2 参考文献

著者住所

1. はじめに
IETFのRTCWEBワーキンググループは、マルチメディアセッションのセットアップ、管理、および破棄を制御するために使用されるメカニズムであるJSEP ([RFC8829])を標準化した。また、セッション記述プロトコル(SDP)[RFC3264]を使用したオファー/アンサーモデルを使用してメディアフローをネゴシエートする方法や、有線で送信されるデータのフォーマット(メディアタイプ、コーデックパラメータ、暗号化など)も記述されている。WebRTCは意図的に、アプリケーションレベルでのシグナリングトランスポートプロトコルを指定していない。この柔軟性により、幅広いサービスの実装が可能になった。しかし、これらのサービスは通常、他のサービスとの相互運用性を必要としないスタンドアロンのサイロであり、それらと通信できるツールの存在を活用することもない

WebRTCは、SIP[RFC3261]やXMPP[RFC6120]などの標準的なシグナリングプ ロトコルと統合できるが、これらは放送/ストリーミングサービスで使用す るようには設計されておらず、その業界で採用される兆しもない。RTPベースのRTSP[RFC7826]は、SDPのオファー/アンサーモデル[RFC3264]と互換性がない

WebRTCを使ってストリーミング・サービスからメディアを消費するための標準プロトコルがないことが問題になる場面は多い

WebRTCサービスと製品間の相互運用性
簡単に統合できるプレーヤーソフトを再利用する
Dynamic Adaptive Streaming over HTTP (DASH)との統合により、WebRTC経由でライブストリームを提供しながら、DASH経由でタイムシフトバージョンを提供することができます
カスタムJavaScriptの実行をサポートしていないデバイス（テレビなど）でWebRTCストリームを再生する
この文書では、WebRTC HTTP Ingest Protocol (WHIP)[I-D.draft-ietf-wish-whip]のインジェストを模倣し、WebRTC を使用してストリーミングサービスからメディアを消費するために使用できるシンプルな HTTP ベースのプロトコルを規定します

2. 用語解説
本文書のキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、および「OPTIONAL」は、ここに示すように、すべて大文字で表示される場合、およびその場合に限り、BCP14[RFC2119] [RFC8174]の記述に従って解釈されるものとする

WHEPプレーヤー：リモートメディアサーバーからメディアを受信してデコードすることで、WHEPプロトコルのクライアントとして動作するWebRTCメディアプレーヤー
WHEPエンドポイント：最初のWHEPリクエストを受信するEgressサーバー
WHEPエンドポイントURL：WHEPリソースを作成するWHEPエンドポイントのURL
メディアサーバー：メディアサーバー：WHEPプレーヤーとのメディアセッションを確立し、メディアを配信するWebRTCメディアサーバーまたはコンシューマー
WHEPリソース：WHEPリソース：進行中のegressセッションに対してWHEPエンドポイントが割り当てたリソースで、WHEPプレーヤーがセッションの変更（例えばICE操作や終了）のリクエストを送ることができる
WHEPリソースURL：WHEPエンドポイントによって特定のメディアセッションに割り当てられたURLで、セッションの終了やICEの再起動などの操作を実行するために使用できる
3. 概要
WebRTC-HTTP Egress Protocol（WHEP）は、HTTP POSTリクエストを使用してシングルショットSDPオファー/アンサーを実行するため、WHEP Playerとストリーミングサービスエンドポイント（メディアサーバー）の間でICE/DTLSセッションを確立できます

ICE/DTLSセッションがセットアップされると、メディアはMedia ServerからWHEP Playerに一方向に流れる。複雑さを軽減するために、SDPの再ネゴシエーションはサポートされ ていないため、HTTP経由の最初のSDPオファー/アンサーが完了すると、 「m=」セクションを追加することはできない


 +-------------+    +---------------+ +--------------+ +---------------+
 | WHEP Player |    | WHEP Endpoint | | Media Server | | WHEP Resource |
 +--+----------+    +---------+-----+ +------+-------+ +--------|------+
    |                         |              |                  |
    |                         |              |                  |
    |HTTP POST (SDP Offer)    |              |                  |
    +------------------------>+              |                  |
    |201 Created (SDP answer) |              |                  |
    +<------------------------+              |                  |
    |          ICE REQUEST                   |                  |
    +--------------------------------------->+                  |
    |          ICE RESPONSE                  |                  |
    |<---------------------------------------+                  |
    |          DTLS SETUP                    |                  |
    |<======================================>|                  |
    |          RTP/RTCP FLOW                 |                  |
    +<-------------------------------------->+                  |
    | HTTP DELETE                                               |
    +---------------------------------------------------------->+
    | 200 OK                                                    |
    <-----------------------------------------------------------x

図1：WHEPセッションのセットアップとティアダウン

4. プロトコル操作
ストリーミングセッションをセットアップするために、WHEP PlayerはJSEPルールに従ってSDPオファーを生成し、設定されたWHEPエンドポイントURLへのHTTP POSTリクエストを実行します

HTTP POSTリクエストのコンテンツタイプは「application/sdp」であり、ボディ としてSDPオファーが含まれる。WHEPエンドポイントはSDPアンサーを生成し、コンテンツタイプが 「application/sdp」、SDPアンサーがボディ、および新しく作成されたリソースを指 すLocationヘッダーフィールドを含む「201 Created」応答を返す

SDPオファーは「recvonly」属性を使用するべきであり[SHOULD]、SDPアンサーは 「sendonly」属性を使用しなければならない[MUST]

POST /whep/endpoint HTTP/1.1
Host: whep.example.com
Content-Type: application/sdp
Content-Length: 1326

v=0
o=- 5228595038118931041 2 IN IP4 127.0.0.1
s=-
t=0 0
a=group:BUNDLE 0 1
a=extmap-allow-mixed
a=msid-semantic: WMS
m=audio 9 UDP/TLS/RTP/SAVPF 111
c=IN IP4 0.0.0.0
a=rtcp:9 IN IP4 0.0.0.0
a=ice-ufrag:zjkk
a=ice-pwd:bP+XJMM09aR8AiX1jdukzR6Y
a=ice-options:trickle
a=fingerprint:sha-256 DA:7B:57:DC:28:CE:04:4F:31:79:85:C4:31:67:EB:27:58:29:ED:77:2A:0D:24:AE:ED:AD:30:BC:BD:F1:9C:02
a=setup:actpass
a=mid:0
a=bundle-only
a=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid
a=recvonly
a=rtcp-mux
a=rtpmap:111 opus/48000/2
a=fmtp:111 minptime=10;useinbandfec=1
m=video 9 UDP/TLS/RTP/SAVPF 96 97
c=IN IP4 0.0.0.0
a=rtcp:9 IN IP4 0.0.0.0
a=ice-ufrag:zjkk
a=ice-pwd:bP+XJMM09aR8AiX1jdukzR6Y
a=ice-options:trickle
a=fingerprint:sha-256 DA:7B:57:DC:28:CE:04:4F:31:79:85:C4:31:67:EB:27:58:29:ED:77:2A:0D:24:AE:ED:AD:30:BC:BD:F1:9C:02
a=setup:actpass
a=mid:1
a=bundle-only
a=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid
a=extmap:10 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id
a=extmap:11 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id
a=recvonly
a=rtcp-mux
a=rtcp-rsize
a=rtpmap:96 VP8/90000
a=rtcp-fb:96 ccm fir
a=rtcp-fb:96 nack
a=rtcp-fb:96 nack pli
a=rtpmap:97 rtx/90000
a=fmtp:97 apt=96

HTTP/1.1 201 Created
ETag: "xyzzy"
Content-Type: application/sdp
Content-Length: 1400
Location: https://whep.example.org/resource/id

v=0
o=- 1657793490019 1 IN IP4 127.0.0.1
s=-
t=0 0
a=group:BUNDLE 0 1
a=extmap-allow-mixed
a=ice-lite
a=msid-semantic: WMS *
m=audio 9 UDP/TLS/RTP/SAVPF 111
c=IN IP4 0.0.0.0
a=rtcp:9 IN IP4 0.0.0.0
a=ice-ufrag:526be20a538ee422
a=ice-pwd:2e13dde17c1cb009202f627fab90cbec358d766d049c9697
a=fingerprint:sha-256 F7:EB:F3:3E:AC:D2:EA:A7:C1:EC:79:D9:B3:8A:35:DA:70:86:4F:46:D9:2D:CC:D0:BC:81:9F:67:EF:34:2E:BD
a=candidate:1 1 UDP 2130706431 198.51.100.1 39132 typ host
a=setup:passive
a=mid:0
a=bundle-only
a=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid
a=sendonly
a=rtcp-mux
a=rtcp-rsize
a=rtpmap:111 opus/48000/2
a=fmtp:111 minptime=10;useinbandfec=1
a=msid:- d46fb922-d52a-4e9c-aa87-444eadc1521b
m=video 9 UDP/TLS/RTP/SAVPF 96 97
c=IN IP4 0.0.0.0
a=rtcp:9 IN IP4 0.0.0.0
a=ice-ufrag:526be20a538ee422
a=ice-pwd:2e13dde17c1cb009202f627fab90cbec358d766d049c9697
a=fingerprint:sha-256 F7:EB:F3:3E:AC:D2:EA:A7:C1:EC:79:D9:B3:8A:35:DA:70:86:4F:46:D9:2D:CC:D0:BC:81:9F:67:EF:34:2E:BD
a=candidate:1 1 UDP 2130706431 198.51.100.1 39132 typ host
a=setup:passive
a=mid:1
a=bundle-only
a=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid
a=extmap:10 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id
a=extmap:11 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id
a=sendonly
a=rtcp-mux
a=rtcp-rsize
a=rtpmap:96 VP8/90000
a=rtcp-fb:96 ccm fir
a=rtcp-fb:96 nack
a=rtcp-fb:96 nack pli
a=rtpmap:97 rtx/90000
a=fmtp:97 apt=96
a=msid:- d46fb922-d52a-4e9c-aa87-444eadc1521b

図2:SDP O/Aを実行するHTTP POSTとPATCHの例

WHEPリソースは、WHEPプレーヤーがストリームの視聴を開始することを許可するために、ライブパブリッシングが起こっていることを要求する可能性がある。 その場合、WHEPリソースはWHEPクライアントが発行したPOSTリクエストに対して、新しいリクエストを送るまでの秒数を示すRetry-Afterヘッダーを持つ「409 Conflict」応答を返さなければならない[SHALL]。 WHEPプレイヤーは、「409 Conflict」応答中のRetry-Afterヘッダー値の初期値で、指数バックオフ周期で定期的にWHEPリソースへの接続を試みてもよい

セッションがセットアップされると、ICE consent freshness[RFC7675]を使用して、突然の切断とセッション終了のためのDTLS teardownをどちらかの側で検知しなければならない(SHALL)。

セッションを明示的に終了するには、WHEP プレーヤーは最初の HTTP POST の Location ヘッダーフィールドで返されたリソース URL に対して HTTP DELETE リクエストを実行しなければなりません（MUST）。HTTP DELETEリクエストを受信すると、WHEPリソースは削除され、メディアサーバー上のリソースが解放され、ICEとDTLSセッションが終了します

セッションを終了するメディアサーバーは、同意の即時失効のために[RFC7675]セクション5.2の手順に従わなければならない[MUST]

WHEPエンドポイントは、このプロトコル仕様の将来のバージョンでの使用を確保するために、エンドポイントURLのHTTP GET、HEAD、PUTリクエストに対して "405 Method Not Allowed "レスポンスを返さなければならない(MUST)

WHEPエンドポイントは、[FETCH]で定義されているように、Cross-Origin Resource Sharing (CORS)のためのOPTIONSリクエストをサポートしなければならず[MUST]、[W3C.REC-ldp-20150226]に従って受信したOPTIONSリクエストに対する "200 OK "応答に、mime type値が "application/sdp "の "Accept-Post "ヘッダーを含めるべきである[SHOULD]

WHEPリソースは、このプロトコル仕様の将来のバージョンでの使用を確保するために、リソースURLのHTTP GET、HEAD、POST、PUTリクエストに対して "405 Method Not Allowed "を返さなければならない(MUST)

4.1. ICEとNATのサポート
WHEPプレーヤーが提供するSDPは、ICE候補の完全なリストを含む完全なICE収集 が完了した後に送信してもよい[MAY]し、または[RFC8863]に従ってローカル候補 (または空の候補リスト)のみを含んでもよい[MAY]

プロトコルを簡略化するために、SDPアンサーが送信されると、メディア サーバーのICE候補から収集したトリクル候補を交換するサポートはない。WHEPエンドポイントは、クライアントリクエストに応答する前に、メディア サーバーのすべてのICE候補を収集しなければならず[SHALL]、SDPアンサーにはメ ディアサーバーのICE候補の完全なリストを含めなければならない[SHALL]。メディアサーバーはICE liteを使用してもよい[MAY]が、WHEPプレーヤー は完全なICEを実装しなければならない[MUST]

トリクルICEとICEリスタートのサポートは、WHEPリソースのオプションです

WHEPリソースがTrickle ICEまたはICEリスタートをサポートする場合、WHEPプレーヤーは[RFC5789]セクション3.1、WHEPリソースを作成するPOSTリクエストの "201 Created "に "application/trickle-ice-sdpfrag "のmime type値を持つ "Accept-Patch "ヘッダーを含めなければならない[MUST]。

WHEPリソースがトリクルICEまたはICEリスタートのどちらかをサポートしているが、両方はサポートしていない場合、サポートしていないHTTP PATCHリクエストに対して "405 Not Implemented "応答を返さなければならない

WHEPリソースが何らかの目的でPATCHメソッドをサポートしていない場合、[RFC9110]セクション6.6.2説明されているように、"501 Not Implemented "応答を返さなければならない(MUST)。

WHEPプレーヤーによって送信されたHTTP PATCHリクエストはWHEPリソースによって順番外に受信される可能性があるので、WHEPリソースは[RFC9110]セクション2.3に従ってICEセッションを識別する一意の強力なエンティティタグを生成しなければならない[MUST]。
最初のICEセッションを識別するentity-tagの初期値は、WHEPエンドポイントへの最初のPOSTリクエストに対する「201 Created」応答のETagヘッダーフィールドで返されなければならない[MUST]。
また、ICEの再起動をトリガーするPATCHリクエストの "200 OK "でも返されなければならない[MUST]。
元の "201 Created "レスポンスにETagを含めることは、WHEPリソースがICEの再起動をサポートしている場合にのみ必須で、そうでない場合はオプションであることに注意すること

トリクルICEを実行するためにPATCHリクエストを送信するWHEPプレーヤーは、[RFC9110]セクション3.1に従って、最新の既知のentity-tagを持つ「If-Match」ヘッダーフィールドを含めなければならない[MUST]。
PATCHリクエストがWHEPリソースによって受信されたとき、WHEPリソースは[RFC9110]セクション3.1に従って、示されたentity-tag値をリソースの現在のentity-tagと比較しなければならず[MUST]、一致しない場合は「412 Precondition Failed」応答を返さなければならない

WHEPプレーヤーは、セッションを終了するためにDELETEリクエストを開始 するときなど、特定のICEセッションのマッチングが要求されないときに、 エンティティタグ検証を使用すべきではない[SHOULD NOT]

新しい ICE 候補を含む PATCH リクエストを受け取るが、ICE の再起動を実行しない WHEP リソースは、ボディなしの "204 No Content" 応答を返さなければならない(MUST)。
メディアサーバーが候補トランスポートをサポートしないか、接続アドレスを解決できない場合、メディアサーバーは "204 No Content "応答でHTTPリクエストを受け入れ、候補を静かに破棄しなければならない(MUST)

PATCH /resource/id HTTP/1.1
Host: whep.example.com
If-Match: "38sdf4fdsf54:EsAw"
Content-Type: application/trickle-ice-sdpfrag
Content-Length: 548

a=ice-ufrag:EsAw
a=ice-pwd:P2uYro0UCOQ4zxjKXaWCBui1
m=audio RTP/AVP 0
a=mid:0
a=candidate:1387637174 1 udp 2122260223 192.0.2.1 61764 typ host generation 0 ufrag EsAw network-id 1
a=candidate:3471623853 1 udp 2122194687 198.51.100.1 61765 typ host generation 0 ufrag EsAw network-id 2
a=candidate:473322822 1 tcp 1518280447 192.0.2.1 9 typ host tcptype active generation 0 ufrag EsAw network-id 1
a=candidate:2154773085 1 tcp 1518214911 198.51.100.2 9 typ host tcptype active generation 0 ufrag EsAw network-id 2
a=end-of-candidates

HTTP/1.1 204 No Content

図3：トリクルICEのリクエスト

ICEのリスタートを実行するためにPATCHリクエストを送信するWHEP Playerは、[RFC9110]セクション3.1、フィールド値「*」を持つ「If-Match」ヘッダーフィールドを含まなければならない[MUST]。

HTTP PATCHリクエストがICEの再起動につながる場合、WHEPリソースは新しいICEユーザー名とパスワード、オプションとしてWHIPクライアントの新しいICE候補を含む "application/trickle-ice-sdpfrag "ボディを持つ "200 OK "を返さなければならない（SHALL）。
また、ICEの再起動に成功した場合の "200 OK "応答は、ETag応答ヘッダーフィールドに新しいICEセッションに対応する新しいエンティティタグを含まなければならない（MUST）

ICE リクエストが WHEP リソースによって満たされない場合、リソースは適切な HTTP エラーコードを返さなければならず (MUST)、セッションを直ちに終了してはならない (MUST NOT)。
WHEPプレーヤーは、新しいICEリスタートを再試行してもよいし、代わりにHTTP DELETEリクエストを発行してセッションを終了してもよい[MAY]。どちらの場合でも、[RFC7675]セクション5.1ICEの再起動に失敗した結果、ICEの同意が期限切れになった場合、セッションは終了しなければならない[MUST]。

PATCH /resource/id HTTP/1.1
Host: whep.example.com
If-Match: "*"
Content-Type: application/trickle-ice-sdpfrag
Content-Length: 54

a=ice-ufrag:ysXw
a=ice-pwd:vw5LmwG4y/e6dPP/zAP9Gp5k

HTTP/1.1 200 OK
ETag: "289b31b754eaa438:ysXw"
Content-Type: application/trickle-ice-sdpfrag
Content-Length: 102

a=ice-lite
a=ice-ufrag:289b31b754eaa438
a=ice-pwd:0b66f472495ef0ccac7bda653ab6be49ea13114472a5d10a

図4：ICEの再起動要求

新しいICE候補を送信するために、WHEP PlayerはICEセッションに関連付けられたエンティティタグを知る必要があるので、WHEP Playerは最初のPOSTリクエストに対するHTTPレスポンスまたは新しいエンティティタグ値を含むPATCHリクエストを受信する前に、収集されたすべての候補をバッファリングしなければならない(MUST)。エンティティタグの値を知ったら、WHEP PlayerはこれまでにバッファリングしたすべてのICE候補を含む単一の集約されたHTTP PATCHリクエストを送信するべきである(SHOULD)。

このシナリオを緩和するために、クライアントがICEのリスタートを実行するとき、クライアントは以前のiceユーザー名とパスワードのフラグメントを破棄し、保留中のHTTP PATCHリクエストから受け取ったそれ以降のHTTP PATCHレスポンスを無視しなければならない[MUST]。WHEPプレイヤーは、最後に送信されたリクエストに対するレスポンスで受け取ったICE情報のみを適用しなければならない[MUST]。クライアントとサーバーのICE情報の間に不一致がある場合(アウトオブオーダーのリクエストのため)、STUNリクエストは無効なICE情報を含み、サーバーによって拒否されます。この状況がWHEPプレーヤーによって検出されたとき、WHEPプレーヤーはサーバーに新しいICEリスタートリクエストを送るべきである（SHOULD）

4.2. WebRTCの制約
ストリーミングサービスからのメディア消費の特定のケースでは、WebRTC-gateway文書[I-D.draft-ietf-rtcweb-gateways]に詳述されているように、WebRTCコンプライアンス負担を簡素化するサーバー側についていくつかの仮定を行うことができます

プレーヤーとメディアサーバーの両方でWHEPを実装する複雑さを軽減するために、WHEPはWebRTCの使用に関して以下の制限を課して

WHEP PlayerとWHEP Endpointの両方は、SDPバンドル[RFC9143]を使用しなければならない[SHALL]。各「m=」セクションは、1つのBUNDLEグループの一部でなければならない [MUST]。したがって、WHEPプレーヤーがSDPオファーを送信するときは、バンドルさ れた各「m=」セクションに「bundle-only」属性を含めなければならない [MUST]。WHEPプレーヤーとメディアサーバーは、[RFC9143]セクション9に従って、 BUNDLEグループに関連付けられた多重化メディアをサポートしなければ ならない[MUST]。さらに、[RFC9143]に従い、WHEPプレーヤーとメディアサーバーはすべてのバンドルメディアに対してRTP/RTCP多重化を使用する。WHEPプレーヤーとメディアサーバーは、[RFC8858]に従い、各バンドルされた「m=」セクションに「rtcp-mux-only」属性を含めるべきである（SHOULD）

トリクル ICE および ICE 再起動サポートは、4.1節で説明されているように、WHEP プレーヤーとメディアサーバーの両方でオプションです。

4.3. ロードバランシングとリダイレクト
WHEPエンドポイントとメディアサーバーは同じサーバー上に同居していないかもしれないので、異なるメディアサーバーへの着信リクエストのロードバランスをとることが可能である。WHEPプレイヤーは[RFC9110]セクション6.4.7に記述されているように、"307 Temporary Redirect "応答を介してHTTPリダイレクトをサポートしなければならない[SHALL]。WHEPリソースURLは最終的なものでなければならず(MUST)、リダイレクトはそれに送られるPATCHとDELETEリクエストに対してサポートされる必要はない

高負荷の場合、WHEPエンドポイントは、サーバーが一時的な過負荷や予定され たメンテナンスのために現在リクエストを処理できないことを示す「503 Service Unavailable」応答を返してもよい[MAY]。WHEPエンドポイントは、ユーザーエージェントがフォローアップリクエスト をする前に待つべき最小時間を示すRetry-Afterヘッダーフィールドを 送ってもよい

4.4. STUN/TURNサーバーの設定
WHEPエンドポイントは、WHEPエンドポイントURLへのHTTP POSTリクエストに対する "201 Created "レスポンスで、クライアントが使用可能なSTUN/TURNサーバー設定URLと認証情報を返してもよい(MAY)

各STUN/TURNサーバーは、[I-D.draft-ietf-wish-whip]で規定されているように、 "ice-server "の "rel "属性値を持つ "Link "ヘッダーフィールド[RFC8288]を使用して返される

また、WHEPエンドポイントによって提供される値を上書きして、WHEPプレーヤー上の放送サービスまたは外部TURNプロバイダのいずれかによって提供される長期的な認証情報でSTUN/TURNサーバーのURLを設定することも可能かもしれません

4.5. 認証と認可
WHEP エンドポイントとリソースは、[RFC6750]セクション 2.1 で規定されているように、Bearer トークンを持つ HTTP Authorization ヘッダーフィールドを使用して HTTP リクエストが認証されることを要求してもよい[MAY]。WHEP プレーヤーはこの認証と承認の仕組みを実装し、CORS のためのプリフライト OPTIONS リクエストを除く、WHEP エンドポイントまたはリソースのいずれかに送られるすべての HTTP リクエストで HTTP Authorization ヘッダーフィールドを送信しなければなりません (MUST)

ベアラートークンの性質、構文、セマンティクス、およびそれをクライアントに配布 する方法は、本文書の範囲外である。使用できるトークンの種類の例としては、[RFC6750]および[RFC8725]に従っ たJWTトークンや、データベースに格納された共有秘密があるが、これらに 限定されない

WHEPエンドポイントとリソースは、代わりにWHEPエンドポイントまたはリソースのURL内に認証トークンをエンコードすることによって、認証と認可を実行することができます。WHEPプレーヤーがベアラートークンを使用するように設定されていない場合、HTTP Authorizationヘッダーフィールドはいかなるリクエストでも送信されてはなりません

4.6. プロトコルの拡張
WHEPプロトコルのために定義される将来の拡張をサポートするために、新しい拡張を登録し、発表するための共通の手順が定義されています

WHEPサーバーがサポートするプロトコル拡張は、WHEPエンドポイントに送られた最初のHTTP POSTリクエストに対する "201 Created "レスポンスでWHEPプレーヤーにアドバタイズされなければならない(MUST)。
WHEPエンドポイントは各拡張に対して、拡張の "rel "タイプ属性と、その拡張に関連するリクエストを受信するために利用可能になるHTTPリソースのURIを持つ1つの "Link "ヘッダーフィールドを返さなければならない

プロトコル拡張はWHEPプレーヤとWHEPエンドポイントとリソースの両方にとってオプションである。
WHEPプレーヤーは未知の "rel "属性値を持ついかなるLink属性も無視しなければならず（MUST）、WHEPエンドポイントとリソースはいかなる拡張の使用も要求してはならない（MUST NOT）

各プロトコル拡張は、プレフィックスで始まる一意の "rel "属性値をIANAに登録しなければならない（MUST）：「urn:ietf:params:whep:ext "で始まる一意のrel属性値をIANAに登録しなければならない。

WHEP仕様の最初のバージョンでは、2つのオプション拡張が定義されています：Server Sent EventsとVideo Layer Selectionです

4.6.1. Server Sent Events エクステンション
このオプションの拡張は、https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events で規定されている WHATWG server sent events protocol を使用したサーバーからクライアントへの通信のサポートを提供する。WHEP リソースがサポートする場合、"urn:ietf:params:whep:ext:sse" の "rel" 属性を持つ "Link" ヘッダーフィールドが、Server Sent Events REST API エントリーポイントの URL と共に、最初の HTTP "201 Created" 応答で返されなければならない[MUST]。Link ヘッダーはまた、サポートされるイベントタイプのコマ区切りリスト を持つ events 属性を含んでもよい[MAY]

HTTP/1.1 201 Created
Content-Type: application/sdp
Location: https://whep.example.org/resource/213786HF
Link: <https://whep.ietf.org/resource/213786HF/sse>;
      rel="urn:ietf:params:whep:ext:core:server-sent-events"
      events="active,inactive,layers,viewercount"

図5：Server Sent Events 拡張を含む HTTP 201 レスポンスの例

拡張がWHEPプレーヤーによってもサポートされている場合、WHATWG server sent eventsプロトコルを使用してサーバーからクライアントへのイベントストリームを作成するために、Server Sent Events REST APIエントリーポイントにPOSTリクエストを送ってもよい[MAY]。POSTリクエストは、サーバーからクライアントへの通信チャネルを使用してサーバーによって送信される可能性がある、"events "属性上のWHEPリソースによって発表されたイベントリストのサブセットを示すJSON配列を持つ "application/json "ボディを含んでもよい[MAY]。WHEP Endpoint は、新しく生成されたサーバーからクライアントへのイベントストリームを指し示す Location ヘッダーフィールドを持つ「201 Created」応答を返す

POST /resource/213786HF/sse HTTP/1.1
Host: whep.example.com
Content-Type: application/json

["active","inactive","layers","viewercount"]

HTTP/1.1 201 Created
Location: https://whep.example.org/resource/213786HF/sse/event-stream

図6：サーバーからクライアントへのイベント・ストリームを作成するHTTP POSTリクエスト

サーバーとクライアントの通信チャネルが作成されると、WHEPプレーヤーはWHATWGサーバー送信イベントプロトコルで規定されているように、ロケーションヘッダで返されるUrlを使用してロングプルを実行することができます

イベントが生成されるとき、WHEPリソースは、イベントストリームが作成されたときにWHEPプレーヤーによって提供されたリストにタイプがあるかどうかを各イベントストリームについてチェックしなければならず(MUST)、もしそうなら、アクティブな長いプルリクエストが利用可能なときに配信するためにそれをenqueしなければならない

この仕様でサポートされるイベントタイプは以下の通りである

active: このリソースに対して現在進行中のアクティブな発行があることを示す
inactive：このリソースに対して現在進行中のアクティブな出版がないことを示す
layers: このリソースで公開されているビデオレイヤーに関する情報を提供する
viewercount: このリソースに現在接続している視聴者の数を提供する
WHEP リソースは、WHATWG サーバーが送信したイベントメッセージの "event" フィールドのイベントタイプと、"data" フィールドの JSON シリアライズ文字列を示さなければならない。WHEP Player での処理を簡単にするために、WHEP リソースはイベントデータを単一の "data" 行でエンコードしなければならない（MUST）

event: viewercount data：{"viewercount":3}
図7：イベント例
WHEP Playerは、生成されたリクエストのlocationヘッダーで返されたUrlにHTTP DELETEリクエストを送ることで、いつでもイベントストリームを破棄してもよい[MAY]。WHEPリソースは、イベントストリームに対して更なる長いプルリクエストを受信した場合、保留中のキューに入れられたイベントをすべて削除し、「404 Not found」を返さなければならない(MUST)

WHEPリソースに関連付けられたすべてのイベントストリームは、WHEPリソースが終了したときに破棄されなければならない（MUST）

4.6.1.1. アクティブ・イベント
このイベントは、WHEPリソースのアクティブなパブリケーションが、リソースが作成された再生の開始時、または再生セッション中の後のいずれかで、WHEPリソースによって送信されます

event name: "active"
イベントデータ：JSONオブジェクト（未定
4.6.1.2. アクティブでないイベント
このイベントは、アクティブなパブリケーションが利用できなくなったときにWHEPリソースによって送られる。リソースが作成されたときにアクティブなパブリケーションがない場合、WHEPリソースは最初の "inactive "イベントを送信してはならない(MUST)

event name: "active"
イベントデータ：JSONオブジェクト（未定
4.6.1.3. レイヤーイベント
このイベントはWHEPリソースによって送信され、{TBD}章で定義されたレイヤー選択拡張と組み合わせて使用可能なビデオレイヤーまたはレンディションに関する情報をWHEPプレイヤーに提供します

event name: "layers"
イベントデータ：JSON
WHEPリソースは、定期的に、またはレイヤー情報が変更されたときだけ、イベントを送ってもよい[MAY]

イベントデータJSONオブジェクトには、SDPの「m-line」順でインデックス付けされた、各「m-line」で使用可能なビデオレイヤー情報が含まれる

JSONオブジェクト・エントリーの各値は、以下の持つJSONオブジェクトとなる。

active: (Array<Object>) アクティブなサイマルキャストレイヤーの情報を含む
inactive：（Array<Object>）非アクティブなサイマルキャストレイヤーの情報を含む
layers: (Array<Object>) アクティブなサイマルキャスト、空間レイヤー、時間レイヤーの情報を含む
各 "アクティブ "なJSONオブジェクトには、以下の情報が含まれている

id: (文字列)サイマルキャストエンコーディングの値。
simulcastIdx：（番号）符号化レイヤーのサイマルキャスト順
ビットレート：（番号）符号化レイヤーの空間レイヤーID
width: （数値）エンコーディングレイヤーの現在のビデオ幅
heigth: （数値）エンコーディングレイヤーの現在のビデオの高さ
それぞれの "inactive "JSONには以下の情報が含まれている

id: （文字列）レイヤーのサイマルキャストエンコーディングを表す
simulcastIdx：（番号）符号化レイヤーのサイマルキャスト順
width: （数値）現在のビデオ幅。
heigth: （数値）エンコーディングレイヤーの現在のビデオの高さ
各 "レイヤー "のJSONは以下の情報を含む

encodingId：(文字列）サイマルキャストエンコーディングを表す。
simulcastIdx：（番号）符号化レイヤーのサイマルキャスト順
spatialLayerId：(数値）エンコーディングレイヤーの空間レイヤーID
temporalLayerId：(数値）エンコーディングレイヤーのテンポラルレイヤーID
ビットレート：（番号）符号化レイヤーの空間レイヤーID
width: （数値）エンコーディングレイヤーの現在のビデオ幅
heigth: （数値）エンコーディングレイヤーの現在のビデオの高さ
layer "オブジェクトはencodingId、spatialLayerId、temporalLayerId属性のうち少なくとも一つを含まなければならない（MUST。

{
  "0": {
    "active": [
      {
        "id": "1", "simulcastIdx": 1, "bitrate": 538288, width: 640, height: 360
      },
      {
        "id": "0", "simulcastIdx": 0, "bitrate": 111600, width: 320, height: 180
      }
    ],
    "inactive": [
      {
        "id": "2", "simulcastIdx": 2
      },
    ],
    "layers": [
      { "encodingId": "1", "simulcastIdx": 1, "spatialLayerId": 0, "temporalLayerId": 1, "bitrate": 557112, width: 640, height: 360 },
      { "encodingId": "1", "simulcastIdx": 1, "spatialLayerId": 0, "temporalLayerId": 0, "bitrate": 343592, width: 640, height: 360 },
      { "encodingId": "0", "simulcastIdx": 0, "spatialLayerId": 0, "temporalLayerId": 1, "bitrate": 116352, width: 320, height: 180 },
      { "encodingId": "0", "simulcastIdx": 0, "spatialLayerId": 0, "temporalLayerId": 0, "bitrate": 67464 , width: 320, height: 180 }
    ]
  }
}


図8：イベント例

4.6.1.4. ビューカウントイベント
このイベントはWHEPリソースによって送信され、このリソースに現在接続されている視聴者数の情報をWHIPプレーヤーに提供します

イベント名："viewercount
イベントデータ：イベントデータ：WHIPリソースを見ている視聴者の数を示すNumber値を持つ "viewercount "属性を含むJSONオブジェクト
WHEPリソースが提供する視聴者数は、イベントストリームとメディアサーバーの両方に過負荷をかけないように、リアルタイムではなく定期的に更新され、概算であってもよい[MAY]

4.6.2. ビデオレイヤ選択エクステンション
Layer Selection 拡張は、WHEP プレーヤーがネゴシエートされたビデオ MediaStreamTrack を通して配信されるビデオレイヤーまたはレンディションを制御することを可能にする。
WHEP リソースでサポートされている場合、"urn:ietf:params:whep:ext:layer" の "rel" 属性を持つ "Link" ヘッダーフィールドが、最初の HTTP "201 Created" 応答で、ビデオレイヤー選択 REST API エントリポイントの URL と共に返されなければならない（MUST）。
この拡張がWHEPリソースによってサポートされる場合、Server Sent Events拡張もサポートされなければならず（MUST）、"layers "イベントも同様にアドバタイズされなければならない（MUST）

HTTP/1.1 201 Created
Content-Type: application/sdp
Location: https://whep.example.org/resource/213786HF
Link: <https://whep.ietf.org/resource/213786HF/layer>;
      rel="urn:ietf:params:whep:ext:core:layer"
Link: <https://whep.ietf.org/resource/213786HF/layer>;
      rel="urn:ietf:params:whep:ext:core:server-sent-events"
      events="layers"

図9：Video Layer Selection 拡張機能を含む HTTP 201 レスポンスの例

サイマルキャストまたはスケーラブルビデオコーデックがメディアサーバーによってサポートされ、WHEPリソースへのアクティブなパブリケーションで使用される場合、デフォルトでは、メディアサーバーはWHEPプレーヤーに送信される利用可能なビデオレイヤの1つを選択します（帯域幅の推定またはその他のビジネスロジックに基づいて）。
しかし、WHEP Player（またはストリームを視聴する人）は、（帯域幅を維持するため、またはUIに最適に適合するために）別のものを受信することを決定する場合があります。この場合、WHEP プレーヤは、受信を希望するビデオレイヤの情報を示す JSON オブジェクトを含む "application/json" ボディを含む HTTP POST リクエストを、Video Layer Selection API エントリポイントに送信してもよい（MAY）。WHEPエンドポイントは、新しいビデオレイヤーへの切り替えが実行できる場合は「200 OK」を返し、そうでない場合は適切なHTTPエラー応答を返します

レイヤー選択を行うためのPOSTリクエストでJSONオブジェクトに送信できる情報は以下の通りである

mediaId：(文字列) レイヤー選択を適用する m 行インデックス（デフォルト：最初のビデオ m 行
encodingId：(文字列) トラックのサイマルキャスト・エンコーディングを表す。
spatialLayerId：(数値)送信ストリームに送る空間レイヤーID（デフォルト：利用可能な最大レイヤー
temporalLayerId：(番号)送信ストリームに送信する一時的なレイヤーID（デフォルト：利用可能な最大レイヤー
maxSpatialLayerId：(数値)最大空間レイヤーID (デフォルト：無制限)
maxTemporalLayerId：(数値) 最大テンポラルレイヤーID (デフォルト: 無制限)
使用可能なエンコーディング、空間的または時間的なレイヤーに関する情報は、Server Sent Events拡張を使用してWHEPリソースによって送信された "layers "イベントから取得される必要があります

POST /resource/213786HF/layer HTTP/1.1
Host: whep.example.com
Content-Type: application/sjon

{mediaId:"0", "encodingId": "hd"}

HTTP/1.1 200 OK

WHEPプレーヤーがメディアサーバーによって実行されたデフォルトの選択に戻りたい場合は、代わりに空のJSONオブジェクトを送信する必要があります

POST /resource/213786HF/layer HTTP/1.1
Host: whep.example.com
Content-Type: application/sjon

{}

HTTP/1.1 200 OK

5. セキュリティ
WebRTCのセキュリティモデルを維持するために、HTTPSを使用しなければならない（SHALL）

6. IANAに関する考察
この仕様は、WHEPプロトコル拡張のためのURNサブネームスペースのレジストリを追加する

6.1. WHEP URN サブネームスペースと whep レジストリの登録
IANAは、「IETF URN Sub-namespace for Registered Protocol Parameter Identifiers」レジストリにエントリを追加し、[RFC3553]に従ってRegistered Parameter Identifierのサブネームスペースを作成した：「urn:ietf:params:whep "である

このサブ名前空間を管理するために、IANAは「urn:ietf:params:whep」名前空間内のエントリを管理するために使用される「System for Cross-domain Identity Management (WHEP) Schema URIs」レジストリを作成した。 レジストリの説明は以下の通り

レジストリ名：
仕様：この文書（RFC TBD¶。
リポジトリ：セクション6.参照
インデックス値：セクション6.参照

6.2. whepのURNサブネームスペース
whepエンドポイントは、セクション4.6で定義されているように、Linkヘッダーの「rel」属性上でサポートされているwhepプロトコル拡張を識別するためにURIを利用する。このセクションでは、whep仕様と将来の拡張で使用するためのIETF URNサブネームスペースを作成し登録する

6.2.1. 仕様テンプレート
名前空間ID

  ネームスペースID "whep" が割り当てられました。
登録情報

  バージョン: 1 Date：未定
名前空間の宣言された登録者

  インターネット技術タスクフォース。
指定された連絡先

   指定された専門家が、whep公開メーリングリスト "wish@ietf.org "を監視する。
構文構造の宣言

  whep "名前空間IDを使用するすべてのURNの名前空間固有文字列(NSS)は、 以下の構造を持たなければならない: urn:ietf:params:whep:{type}:{name}:{other} キーワードは以下の意味を持つ：type エンティティタイプ。この仕様では "ext "タイプのみを定義する。 - name: URN構文要件({{RFC8141}}参照)に準拠し、whepプロトコル拡張の主要な名前空間を定義 する、必須のUS-ASCII文字列。値は業界名または組織名でもよい[MAY]：その他: URN構文要件({{RFC8141}}参照)に準拠し、whepプロトコル拡張を一意に識別 するために必要なサブ名前空間(コロンで区切られた名前空間でさらに 区切ってもよい[MAY])を定義する任意のUS-ASCII文字列。
関連付属書類

  なし
識別子の一意性の考慮

  指定された連絡担当者は、一意性の確認と実施に責任を負うものとする。
識別子の永続考察

  いったん名前が割り当てられたら、別の目的のために再割り当てしてはならない[MUST NOT]。 サブ名前空間内の値の割り当てに提供される規則は、値の意味が変化しないように構築されなければならない[MUST]。 この登録メカニズムは、時間とともに意味が変化する可能性のある値の名前付けには適していない。
識別子の割り当て

  ext "型の名前空間（例えば "urn:ietf:params:whep:ext"）は、IETFが承認したwhep仕様のために予約されている。
識別子解決の

  指定なし。
レキシカル・イコライバルのルール

  特に考慮すべき点はない。{{RFC8141}}で規定されている字句の等価性に関する規則が適用される。
URN構文への適合性

  特別な配慮はない。
検証

  指定なし。
範囲

  グローバルだ。
7. 謝辞
8. 参考文献
8.1. 規範となる参考文献
[FETCH]
WHATWG,"Fetch - Living Standard",n.d.,<https://fetch.spec.whatwg.org>.
[RFC2119]。
Bradner, S.,"Key words for use in RFC to Indicate Requirement Levels",BCP 14,RFC 2119,DOI 10.17487/RFC2119,March 1997,<https://www.rfc-editor.org/rfc/rfc2119>.
[RFC3264]。
Rosenberg, J.andH. Schulzrinne,"An Offer/Answer Model with Session Description Protocol (SDP)",RFC 3264,DOI 10.17487/RFC3264,June 2002,<https://www.rfc-editor.org/rfc/rfc3264>.
[RFC3553]。
Mealling, M.,Masinter, L.,Hardie, T., andG. Klyne,"An IETF URN Sub-namespace for Registered Protocol Parameters",BCP 73,RFC 3553,DOI 10.17487/RFC3553,June 2003,<https://www.rfc-editor.org/rfc/rfc3553>.
[RFC5789]。
Dusseault, L.andJ. Snell,"PATCH Method for HTTP",RFC 5789,DOI 10.17487/RFC5789,March 2010,<https://www.rfc-editor.org/rfc/rfc5789>.
[RFC6750]。
Jones, M.andD. Hardt,"The OAuth 2.0 Authorisation Framework：Bearer Token Usage",RFC 6750,DOI 10.17487/RFC6750,October 2012,<https://www.rfc-editor.org/rfc/rfc6750>.
[RFC7675]。
Perumal, M.,Wing, D.,Ravindranath, R.,Reddy, T., andM. Thomson,"Session Traversal Utilities for NAT (STUN) Usage for Consent Freshness",RFC 7675,DOI 10.17487/RFC7675,October 2015,<https://www.rfc-editor.org/rfc/rfc7675>.
[RFC8174]。
Leiba, B.,"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words",BCP 14,RFC 8174,DOI 10.17487/RFC8174,May 2017,<https://www.rfc-editor.org/rfc/rfc8174>.
[RFC8288]。
Nottingham, M.,"Web Linking",RFC 8288,DOI 10.17487/RFC8288,October 2017,<https://www.rfc-editor.org/rfc/rfc8288>.
[RFC8725]。
Sheffer, Y.,Hardt, D., andM. Jones,"JSON Web Token Best Current Practices",BCP 225,RFC 8725,DOI 10.17487/RFC8725,February 2020,<https://www.rfc-editor.org/rfc/rfc8725>.
[RFC8829]。
Uberti, J.,Jennings, C., andE. Rescorla, Ed.,"JavaScript Session Establishment Protocol (JSEP)",RFC 8829,DOI 10.17487/RFC8829,January 2021,<https://www.rfc-editor.org/rfc/rfc8829>.
[RFC8858]。
Holmberg, C.,"Indicating Exclusive Support of RTP and RTP Control Protocol (RTCP) Multiplexing Using Session Description Protocol (SDP)",RFC 8858,DOI 10.17487/RFC8858,January 2021,<https://www.rfc-editor.org/rfc/rfc8858>.
[RFC8863]。
Holmberg, C.andJ. Uberti,"Interactive Connectivity Establishment Patiently Awaiting Connectivity (ICE PAC)",RFC 8863,DOI 10.17487/RFC8863,January 2021,<https://www.rfc-editor.org/rfc/rfc8863>.
[RFC9110]。
Fielding, R., Ed.,Nottingham, M., Ed., andJ. Reschke, Ed.,"HTTP Semantics",STD 97,RFC 9110,DOI 10.17487/RFC9110,June 2022,<https://www.rfc-editor.org/rfc/rfc9110>.
[RFC9143]。
Holmberg, C.,Alvestrand, H., andC. Jennings,"Negotiating Media Multiplexing Using Session Description Protocol (SDP)",RFC 9143,DOI 10.17487/RFC9143,February 2022,<https://www.rfc-editor.org/rfc/rfc9143>.
[W3C.REC-ldp-20150226]
Malhotra, A., Ed.,Arwe, J., Ed., andS. Speicher, Ed.,"Linked Data Platform 1.0",W3C REC-ldp-20150226,W3C REC-ldp-20150226,26 February 2015,<https://www.w3.org/TR/2015/REC-ldp-20150226/>.
8.2. 参考文献
[I-D.draft-ietf-rtcweb-gateways]。
Alvestrand, H. T. andU. Rauschenbach,"WebRTC Gateways",Work in Progress , Internet-Draft, draft-ietf-rtcweb-gateways-02,21 January 2016,<https://datatracker.ietf.org/doc/html/draft-ietf-rtcweb-gateways-02>.
[I-D.draft-ietf-wish-whip]。
Murillo, S. G. andA. Gouaillard,"WebRTC-HTTP ingestion protocol (WHIP)",Work in Progress , Internet-Draft, draft-ietf-wish-whip-07,13 March 2023,<https://datatracker.ietf.org/doc/html/draft-ietf-wish-whip-07>.
[RFC3261]。
Rosenberg, J.,Schulzrinne, H.,Camarillo, G.,Johnston, A.,Peterson, J.,Sparks, R.,Handley, M., andE. Schooler,"SIP：Session Initiation Protocol",RFC 3261,DOI 10.17487/RFC3261,June 2002,<https://www.rfc-editor.org/rfc/rfc3261>.
[RFC6120]。
Saint-Andre, P.,"Extensible Messaging and Presence Protocol (XMPP)：Core",RFC 6120,DOI 10.17487/RFC6120,March 2011,<https://www.rfc-editor.org/rfc/rfc6120>.
[RFC7826]。
Schulzrinne, H.,Rao, A.,Lanphier, R.,Westerlund, M., andM. Stiemerling, Ed.,"Real-Time Streaming Protocol Version 2.0",RFC 7826,DOI 10.17487/RFC7826,December 2016,<https://www.rfc-editor.org/rfc/rfc7826>.
[RFC8141]。
Saint-Andre, P.andJ. Klensin,"Uniform Resource Names (URNs)",RFC 8141,DOI 10.17487/RFC8141,April 2017,<https://www.rfc-editor.org/rfc/rfc8141>.
著者住所
セルヒオ・ガルシア・ムリージョ
ミリキャスト
Eメール：sergio.garcia.murillo@cosmosoftware.io
チェン・チェン
バイトダンス
Eメール：webrtc@bytedance.com