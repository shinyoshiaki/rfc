ISSN：2070-1721 E. Rescorla RTFM、Inc. 2011年1月 

ストリーム制御伝送プロトコル（SCTP）のデータグラムトランスポート層セキュリティ（DTLS） 

概要 

このドキュメントでは、Stream Control Transmission Protocol（SCTP）を介したDatagram Transport Layer Security（DTLS）プロトコルの使用法について説明します.  

DTLS over SCTPは、SCTPをトランスポートプロトコルとして使用するアプリケーションに通信プライバシーを提供し、クライアント/サーバーアプリケーションが盗聴を防ぎ、改ざんまたはメッセージの偽造を検出するように設計された方法で通信できるようにします.  

DTLS over SCTPを使用するアプリケーションは、SCTPおよびその拡張機能によって提供されるほぼすべてのトランスポート機能を使用できます.  

このドキュメントは、Internet Engineering Task Force（IETF）の製品です. IETFコミュニティのコンセンサスを表しています. これは公開レビューを受けており、Internet Engineering Steering Group（IESG）による公開が承認されています. インターネット標準の詳細については、RFC 5741のセクション2を参照してください. 

このドキュメントの現在のステータス、エラッタ、およびフィードバックに関する情報は、http：//www.rfc-editor.org/info/rfc6083で入手できます.  

著作権表示 

Copyright（c）2011 IETF Trustおよび文書作成者として特定された人物. 全著作権所有. 

この文書は、この文書の発行日に有効なBCP 78とIETF文書に関するIETFトラストの法的条項（http://trustee.ietf.org/license-info）の対象となります. これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているので、注意深く確認してください. このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseテキストを含める必要があり、Simplified BSD Licenseに記載されている保証なしで提供されます. 

1.はじめに 

1.1. 概要

このドキュメントは、[RFC4960]で定義されたStream Control Transmission Protocol（SCTP）上の[RFC4347]で定義されたDatagram Transport Layer Security（DTLS）プロトコルの使用法を説明します.  

DTLS over SCTPは、SCTPをトランスポートプロトコルとして使用するアプリケーションに通信プライバシーを提供し、クライアント/サーバーアプリケーションが盗聴を防ぎ、改ざんまたはメッセージの偽造を検出するように設計された方法で通信できるようにします.  

DTLS over SCTPを使用するアプリケーションは、SCTPおよびその拡張機能によって提供されるほぼすべてのトランスポート機能を使用できます.  

DTLSの派生元であるTLSは、信頼性の高いシーケンス配信を提供するバイトストリーム指向のトランスポートプロトコル上で実行されるように設計されています. したがって、TLSは現在、[RFC0793]で定義されているように、主に伝送制御プロトコル（TCP）の上で使用されています. 



[RFC3436]で説明されているTLS over SCTPには、いくつかの重大な制限があります.  

o SCTPユーザーメッセージの順不同配信はサポートしていません.  

o [RFC3758]で定義されている部分的な信頼性はサポートしていません.  

o双方向の同数のストリームの使用のみをサポートします.  

o双方向ストリームごとにTLS接続を使用します. 大量のストリームが使用される場合、大量のリソースとメッセージ交換が必要になります.  

本書で説明するDTP over SCTPは、TLS over SCTPのこれらの制限を克服します. 特に、DTLS / SCTPは以下をサポートします. 

oメッセージ境界の保存.  

多数の単方向および双方向ストリーム.  

o SCTPユーザーメッセージの順序付きおよび順序なし配信.  

o [RFC3758]で定義されている部分的な信頼性拡張.  

o [RFC5061]で定義されている動的アドレス再構成拡張.  

ただし、次の制限が引き続き適用されます.  

oユーザーメッセージの最大サイズは2 ^ 14バイトです. これはDTLSの制限です.  

o DTLSユーザーがSCTP-AUTHキー管理を実行できないのは、これがDTLSレイヤーによって行われるためです.  

このドキュメントで説明されている方法では、SCTP実装が[RFC4960]で定義されているSCTPユーザーメッセージの断片化と[RFC4895]で定義されているSCTP認証拡張のオプション機能をサポートする必要があります.  

1.2. 用語

このドキュメントでは次の用語を使用します.  

Association：SCTPアソシエーション.  

ストリーム：SCTPアソシエーションの単方向ストリーム. ストリーム識別子によって一意に識別されます. 1.3. 略語

DTLS：データグラムトランスポートレイヤーセキュリティ 

MTU：最大伝送ユニット 

PPID：ペイロードプロトコル識別子 

SCTP：ストリーム制御伝送プロトコル 

TCP：伝送制御プロトコル 

TLS：トランスポート層セキュリティ 

2.コンベンション 

このドキュメントのキーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「MAY」、および「OPTIONAL」は[RFC2119]で説明されているように解釈されます.  

3. DTLSの考慮事項 

3.1. DTLSのバージョン

このドキュメントは[RFC4347]に基づいており、このドキュメントで説明されているDTLS / SCTPはDTLSの将来のバージョンで動作することが期待されています.  

3.2. メッセージサイズ

DTLSは、DTLSユーザーメッセージサイズを現在のパスMTUからヘッダーサイズを引いたものに制限します. SCTPで実行するために、DTLSパスMTUは2 ^ 14であると見なされなければなりません. 

3.3. リプレイ検出

DTLSのリプレイ検出により、DTLSレイヤーがメッセージをドロップする場合があります. DTLS / SCTPは、アプリケーションから要求された場合に信頼できるサービスを提供するため、リプレイ検出は使用できません. したがって、DTLSのリプレイ検出を使用しないでください. 

3.4. パスMTUディスカバリー

SCTPは、ユーザーメッセージのパスMTU検出と断片化/再構成を提供します. セクション3.2によると、DTLSは最大サイズのメッセージを送信できます. したがって、DTLSのパスMTUディスカバリーを使用しないでください. 

3.5. メッセージの再送信

SCTPは、それを必要とするDTLSメッセージに信頼性の高い順序どおりのトランスポートサービスを提供します. セクション4.4を参照してください. したがって、再送信のためのDTLS手順を使用してはなりません. 

4. SCTPに関する考慮事項 

4.1. DTLSレコードのマッピング

サポートされているSCTPユーザーメッセージの最大長は、少なくとも2 ^ 14 + 2048 + 13 = 18445バイトでなければなりません（2 ^ 14 + 2048はDTLSCiphertext.fragmentの最大長であり、13はDTLSレコードヘッダーのサイズです）. 特に、SCTP実装はユーザーメッセージの断片化をサポートしなければなりません. 

すべてのSCTPユーザーメッセージは、正確に1つのDTLSレコードで構成する必要があります.  

4.2. DTLS接続処理

各DTLS接続は、同じSCTPアソシエーション内で確立および終了する必要があります. DTLS接続は、複数のSCTPアソシエーションにまたがってはいけません. 

4.3.  Payload Protocol Identifier Usage ペイロードプロトコル識別子の使用

DTLS over SCTPを使用するアプリケーションプロトコルは、別個のペイロードプロトコル識別子（PPID）を登録および使用する必要があり（SHID）、SCTPを介して直接実行するために登録したPPIDを再利用すべきではありません.  

アプリケーションがDTLSが使用されているかどうかを判断できる限り、同じPPIDを使用しても害はありません. ただし、たとえばプロトコルアナライザーの場合、別のPPIDを使用するとはるかに簡単になります. 

これは、特に、DTLS用の特定のPPIDがないことを意味します.  

4.4. ストリームの使用

ChangeCipherSpec、Alert、またはHandshakeプロトコルのすべてのDTLSメッセージは、無制限の信頼性と順序付き配信機能を使用してストリーム0で転送する必要があります.  

ApplicationDataプロトコルのDTLSメッセージは、ストリーム0以外の複数のストリームを使用する必要があります. 行頭ブロッキングの最小化を気にしない場合、すべてにストリーム0を使用できます. 

4.5. チャンク処理

[RFC4895]で説明されているように、SCTPのデータチャンクを認証された方法で送信する必要があります. 他のチャンクは認証された方法で送信される場合があります. これにより、攻撃者はメッセージが送信されるストリームを変更したり、メッセージの順序付き/順序なし配信に影響を与えたりすることができなくなります. 

[RFC3758]で定義されているPR-SCTPが使用される場合、[RFC4895]で説明されているように、FORWARD-TSNチャンクも認証された方法で送信する必要があります. これにより、攻撃者がメッセージをドロップし、偽造されたFORWARD-TSN、SACK、SHUTDOWNチャンクを使用してこのドロップを隠すことができないようにします. 

4.6. 再交渉

DTLSは再ネゴシエーションをサポートしているため、この機能はDTLS / SCTPでも使用できます. 使用/許可するかどうかは、上位層次第です. アプリケーション作成者は、再ネゴシエーションを許可するとセキュリティパラメータが変更される可能性があることに注意する必要があります. 

4.7. ハンドシェーク

[RFC4347]のセクション4.1で説明されているように、DTLS実装は、しばらくしてから古いエポックからのDTLSメッセージを破棄します. DTLSユーザーが信頼できるデータ転送を実行する場合、これは受け入れられません. メッセージの破棄を回避するには、次の手順が必要です. 

ChangeCipherSpecメッセージを送信する前に、すべての未解決のSCTPユーザーメッセージはSCTPピアによって確認されている必要があり、SCTPピアによって取り消されてはなりません.  

受信したChangeCipherSpecを処理する前に、SCTP層にバッファされている他のすべての受信したSCTPユーザーメッセージは、DTLSによって読み取られ、処理されなければなりません.  

ChangeCipherSpecとFinishedメッセージの間に到着し、新しいエポックを使用するユーザーメッセージは、おそらくFinishedメッセージを渡し、Finishedメッセージが読み取られるまでDTLSによってバッファリングされる必要があります.  

4.8. エンドポイントペアの共有秘密の処理

共有キー識別子0のエンドポイントペア共有シークレットは空であり、DTLS接続を確立するときに使用する必要があります. マスターキーが変更されるたびに、64バイトの共有シークレットがすべてのマスターシークレットから派生し、[RFC5705]で説明されているエクスポーターを使用して、新しいエンドポイントペアの共有シークレットとして提供されます. エクスポーターは、セクション5で指定されたラベルを使用し、コンテキストは使用しないでください. 新しい共有キー識別子は、1ずつ増加した古い共有キー識別子でなければなりません. 古いものが65535である場合、新しいものは1でなければなりません. 

Finishedメッセージを送信する前に、アクティブなSCTP-AUTHキーを新しいものに切り替える必要があります.  

ピアから対応するFinishedメッセージを受信したら、古いSCTP-AUTHキーを削除する必要があります.  

4.9. シャットダウン

DTLSがシャットダウン中にDTLSユーザーメッセージを破棄しないようにするには、すべての未解決のSCTPユーザーメッセージがSCTPピアによって確認された後にのみ、CloseNotifyメッセージを送信する必要があり、SCTPピアによって失効させることはできません.  

受信したCloseNotifyを処理する前に、SCTP層にバッファされている他のすべての受信したSCTPユーザーメッセージは、DTLSによって読み取られ、処理されなければなりません.  

5. IANAの考慮事項 

[RFC5705]で説明されているように、IANAはTLSエクスポーターラベルレジストリに値を追加しました. ラベルは「EXPORTER_DTLS_OVER_SCTP」です. 

6.セキュリティに関する考慮事項 

[RFC4347]、[RFC4895]、および[RFC4960]で与えられたセキュリティの考慮事項もこの文書に適用されます.  

証明書のIPアドレスに基づいてDTLSエンドポイントを認証することが可能です. SCTPアソシエーションは、SCTPエンドポイントごとに複数のアドレスを使用できます. したがって、DTLSレコードは、最初に認証されたIPアドレスとは異なるIPアドレスから送信される可能性があります. そのIPアドレスに基づいてセキュリティの決定が行われない限り、これは問題ではありません. これは一般的なルールの特殊なケースです. すべての決定は、トランスポート層のアイデンティティではなく、ピアの認証されたアイデンティティに基づいている必要があります. 

SCTPユーザーは、各メッセージに対して、ストリーム識別子、メッセージが順序付きで送信されるか順序なしで送信されるかを示すフラグ、およびペイロードプロトコル識別子も提供します. DTLSは実際のユーザーメッセージのプライバシーを提供するために使用できますが、これら3つはDTLSによって保護されていません. これらは、SCTP DATAチャンクヘッダーの一部であるため、クリアテキストとして送信されます. 



DTLSは、NULL暗号アルゴリズムを含む暗号スイートをサポートしています. NULL暗号アルゴリズムのネゴシエーションは、アプリケーションの通信プライバシーを提供せず、ユーザーメッセージのプライバシーを提供しません. 

7.謝辞 

著者は、アンナブランストロム、ラースエッガート、ゴーリーフェアハースト、イアンゴールドバーグ、アルフレッドホーネス、カーステンホーヘンドルフ、ステファンリンスコグ、ダニエルメンツ、ショーンターナーの貴重なコメントに感謝します.  

8.参照 

8.1. 規範的参考文献

[RFC2119] Bradner、S.、「要求レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、1997年3月.  

[RFC3758] Stewart、R.、Ramalho、M.、Xie、Q.、Tuexen、M. 、およびP. Conrad、「ストリーム制御伝送プロトコル（SCTP）部分信頼性拡張」、RFC 3758、2004年5月.  

[RFC4347] Rescorla、E. およびN. Modadugu、「データグラムトランスポート層セキュリティ」、RFC 4347、2006年4月.  

[RFC4895] Tuexen、M. 、スチュワート、R. 、レイ、P. 、およびE. Rescorla、「ストリーム制御伝送プロトコル（SCTP）の認証済みチャンク」、RFC 4895、2007年8月.  

[RFC4960]スチュワート、R. 、「ストリーム制御伝送プロトコル」、RFC 4960、2007年9月.  

[RFC5705] Rescorla、E. 、「トランスポート層セキュリティ（TLS）のキーイングマテリアルエクスポータ」、RFC 5705、2010年3月.  

8.2. 参考資料

[RFC0793]ポステル、J. 、「伝送制御プロトコル」、STD 7、RFC 793、1981年9月.  

[RFC3436] Jungmaier、A.、Rescorla、E. 、およびM. Tuexen、「ストリーム制御伝送プロトコル上のトランスポート層セキュリティ」、RFC 3436、2002年12月.  







[RFC5061] Stewart、R.、Xie、Q.、Tuexen、M.、Maruyama、S. 、およびM. Kozuka、「Stream Control Transmission Protocol（SCTP）Dynamic Address Reconfiguration」、RFC 5061、2007年9月.  

著者のアドレス 

Michael Tuexen Muenster応用科学大学Stegerwaldstr. 39 48565シュタインフルトドイツ

メール：tuexen@fh-muenster.de 



ロビン・セグゲルマン・ミュンスター応用科学大学 39 48565シュタインフルトドイツ

メール：seggelmann@fh-muenster.de 



Eric Rescorla RTFM、Inc. 2064 Edgewood Driveパロアルト、カリフォルニア州94303アメリカ 

メール：ekr@networkresonance.com 