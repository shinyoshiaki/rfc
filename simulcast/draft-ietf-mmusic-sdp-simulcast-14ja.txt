RFCトランス
個人情報保護方針
連絡先
イチジク
@ tex2e
https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-14
draft-ietf-mmusic-sdp-simulcast-14-SDPおよびRTPセッションでSimulcastを使用する
URL：https://tools.ietf.org/html/rfchttps://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-14
タイトル：draft-ietf-mmusic-sdp-simulcast-14-SDPおよびRTPセッションでSimulcastを使用する
翻訳編集：自動生成
ネットワークワーキンググループB.バーマン
Internet-Draft M. Westerlund
対象ステータス：Standards Track Ericsson
有効期限：2019年9月6日S. Nandakumar
                                                               ザナティ
                                                                   シスコ
                                                           2019年3月5日
        
SDPおよびRTPセッションでSimulcastを使用するdraft-ietf-mmusic-sdp-simulcast-14

概要

一部のアプリケーションシナリオでは、同じメディアソースの複数の異なるエンコードバージョンを異なるRTPストリームで送信することが望ましい場合があります. これはSimulcastと呼ばれます. このドキュメントでは、RTPでSimulcastを実行する方法と、SDPでそれをシグナリングする方法について説明します. 説明されているソリューションは、RTP / RTCP識別方法を使用して同じメディアソースに属するRTPストリームを識別し、それらのRTPストリームをそのメディアソースの異なるSimulcast形式として関連付けるためにSDPを拡張します. SDP拡張機能は、SimulcastRTPストリームを送受信する機能を表す新しいメディアレベルのSDP属性で構成されています. 

このメモのステータス

このインターネットドラフトは、BCP 78およびBCP 79の規定に完全に準拠して提出されます. 

Internet-Draftsは、Internet Engineering Task Force（IETF）の作業文書です. 他のグループも作業文書をインターネットドラフトとして配布する場合があることに注意してください. 現在のインターネットドラフトのリストは、https：//datatracker.ietf.org/drafts/current/にあります. 

Internet-Draftは、最長6か月間有効なドラフトドキュメントであり、いつでも他のドキュメントによって更新、置き換え、または廃止される可能性があります. インターネットドラフトを参考資料として使用したり、「進行中の作業」以外の方法で引用することは不適切です. 

このインターネットドラフトの有効期限は2019年9月6日です. 

著作権表示

Copyright（c）2019 IETF Trustおよびドキュメントの作成者として識別された人物. 全著作権所有. 

この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（https://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です. これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください. このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます. 

目次

   1.はじめに. . . . . . . . . . . . . . . . . . . . . . . . ３
   2.定義. . . . . . . . . . . . . . . . . . . . . . . . . 4
     2.1. 用語. . . . . . . . . . . . . . . . . . . . . . . 4
     2.2. 要件言語. . . . . . . . . . . . . . . . . . 5
   3.使用例. . . . . . . . . . . . . . . . . . . . . . . . . . 5
     3.1. 多様なレシーバーセットへの到達 . . . . . . . . . . 6
     3.2. アプリケーション固有のメディアソースの処理. . . . . . . 7
     3.3. レシーバーメディアソースプリファレンス. . . . . . . . . . . . 7
   4.概要. . . . . . . . . . . . . . . . . . . . . . . . . . 7
   5.詳細な説明. . . . . . . . . . . . . . . . . . . . 10
     5.1. Simulcast属性. . . . . . . . . . . . . . . . . . . 10
     5.2. Simulcast機能. . . . . . . . . . . . . . . . . . 11
     5.3. オファー/アンサーの使用. . . . . . . . . . . . . . . . . . . . 13
       5.3.1. 最初のSDPオファーの生成. . . . . . . . . . 13
       5.3.2. SDP回答の作成. . . . . . . . . . . . . . . 13
       5.3.3. SDP回答を処理する提供者. . . . . . . . . . 14
       5.3.4. セッションの変更. . . . . . . . . . . . . . . . 15
     5.4. 宣言型SDPで使用します. . . . . . . . . . . . . . . . 15
     5.5. Simulcastストリームの関連付け. . . . . . . . . . . . . . . 16
     5.6. シグナリング例. . . . . . . . . . . . . . . . . . . 16
       5.6.1. 単一ソースクライアント. . . . . . . . . . . . . . . . 17
       5.6.2. マルチソースクライアント. . . . . . . . . . . . . . . . . 18
       5.6.3. Simulcastと冗長性. . . . . . . . . . . . . . 21
   6. RTPアスペクト. . . . . . . . . . . . . . . . . . . . . . . . . 23
     6.1. メディアソースを使用したエンドポイントからの発信. . . . . . . . 23
     6.2. RTP Middlebox to Receiver. . . . . . . . . . . . . . . . 23
       6.2.1. メディアスイッチングミキサー. . . . . . . . . . . . . . . . 24
       6.2.2. セレクティブフォワーディングミドルボックス. . . . . . . . . . . 26日
     6.3. RTP MiddleboxからRTP Middleboxへ. . . . . . . . . . . . . 27日
   7.ネットワークの側面. . . . . . . . . . . . . . . . . . . . . . . 28
     7.1. ビットレート適応. . . . . . . . . . . . . . . . . . . 28
   8.制限. . . . . . . . . . . . . . . . . . . . . . . . . 29日
   9. IANAの考慮事項. . . . . . . . . . . . . . . . . . . . . 29日
   10.セキュリティに関する考慮事項. . . . . . . . . . . . . . . . . . . 30
   11.寄稿者. . . . . . . . . . . . . . . . . . . . . . . . 30
   12.謝辞. . . . . . . . . . . . . . . . . . . . . . 30
        
   13.参考文献. . . . . . . . . . . . . . . . . . . . . . . . . 30
     13.1. 規範的な参照. . . . . . . . . . . . . . . . . . 31
     13.2. 有益な参照. . . . . . . . . . . . . . . . . 32
   付録A.要件. . . . . . . . . . . . . . . . . . . . 34
   付録B.以前のバージョンからの変更点. . . . . . . . . . . 35
     B.1. WGバージョン-13と-14の間の変更. . . . . . 35
     B.2. WGバージョン-12と-13の間の変更. . . . . . 36
     B.3. WGバージョン-11と-12の間の変更. . . . . . 36
     B.4. WGバージョン-10と-11の間の変更. . . . . . 36
     B.5. WGバージョン-09と-10の間の変更. . . . . . 37
     B.6. WGバージョン-08と-09の間の変更. . . . . . 37
     B.7. WGバージョン-07と-08の間の変更. . . . . . 37
     B.8. WGバージョン-06と-07の間の変更. . . . . . 38
     B.9. WGバージョン-05と-06の間の変更. . . . . . 38
     B.10. WGバージョン-04と-05の間の変更. . . . . . 38
     B.11. WGバージョン-03と-04の間の変更. . . . . . 39
     B.12. WGバージョン-02と-03の間の変更. . . . . . 39
     B.13. WGバージョン-01と-02の間の変更. . . . . . 40
     B.14. WGバージョン-00と-01の間の変更. . . . . . 40
     B.15. 個別バージョン-00とWGの間の変更
           バージョン-00. . . . . . . . . . . . . . . . . . . . . . . 40
   著者のアドレス. . . . . . . . . . . . . . . . . . . . . . . 40
        
1.はじめに
今日のマルチパーティビデオ会議ソリューションのほとんどは、集中型サーバーを利用して、エンドポイントの帯域幅とCPU消費を削減しています. これらのサーバーは各参加者からRTPストリームを受信し、変更された可能性のあるRTPストリームの適切なセットを残りの参加者に送信します. 参加者は通常、異種の機能（画面サイズ、CPU、帯域幅、コーデックなど）を備えています. 最大の問題の1つは、ビデオ品質とサーバーパフォーマンスの両方への影響を最小限に抑えながら、さまざまな参加者の制約にRTPストリームを適応させる方法です. 

Simulcastは、このメモで、同じメディアソースの複数の異なるエンコードされたストリームを同時に送信する行為として定義されています. たとえば、異なるビデオエンコーダータイプまたは画像解像度でエンコードされた同じビデオソースです. これは、いくつかの方法で、さまざまな目的で行うことができます. このドキュメントでは、メディアソースを仲介者に向けてRTP [RFC3550]を介して複数のエンコードされたストリームとして提供し、仲介者が他の参加者に転送するRTPストリームを選択して必要な機能を提供できるようにすることが望ましい場合に焦点を当てていますセッション、具体的には、関連するRTPストリームの識別とグループ化がどのように行われるか. 

定義されたメカニズムの意図された範囲は、RTPを介したSDPオファー/アンサーとメディアトランスポートを使用するときのSimulcastのネゴシエーションと使用をサポートすることです. 考慮されるメディアトランスポートトポロジは、ポイントツーポイントRTPセッションおよび集中型マルチパーティRTPセッションであり、メディアセンダーは、SimulcastストリームをRTPミドルボックスまたはエンドポイントに提供し、ミドルボックスは、Simulcastストリームを他のミドルボックスまたはエンドポイントにさらに配信できます.  . Simulcastは、分散マルチパーティシナリオの一部として、ミドルボックス間のポイントツーポイントで使用できます. マルチキャストまたはブロードキャストトランスポートの使用は範囲外であり、将来の拡張のために残されています. 

このドキュメントでは、Simulcastを使用するいくつかのシナリオについて説明し、それに必要なRTP / RTCPおよびSDPシグナリングを定義します. 

2.定義
2.1. 用語
このドキュメントでは、RTP分類[RFC7656]、およびRTPトポロジ[RFC7667]で定義されている用語を使用しています. 以下の用語は特に注記またはここで定義されています. 

RTPミキサー：[RFC7667]（セクション3.6から3.9）で定義されたRTPミドルノード. 

RTPセッション：[RFC3550]で定義され、[RFC7656]によって修正された、RTPと通信する参加者のグループ間の関連付け. 

RTPストリーム：[RFC7656]で定義されている、メディアデータを含むRTPパケットのストリーム. 

RTPスイッチ：[RFC7667]で説明されている「スイッチングRTPミキサー」、「ソースプロジェクションミドルボックス」、および「ビデオスイッチングMCU」という用語の一般的な短期用語. 

Simulcastストリーム：[RFC7656]で定義されているように、すべてが共通のメディアソースを共有する、同時に送信されるエンコードストリームとオプションの依存ストリームのセットからの1つのエンコードストリームまたは依存ストリーム. たとえば、個別のRTPストリームとして同時に送信された単一のメディアソースのHDおよびサムネイルビデオSimulcastバージョン. 

Simulcast形式：Simulcastストリームの異なる形式は、非SimulcastSDPの代替RTPペイロードタイプと同じ目的を果たし、特定のRTPストリームに複数の代替メディア形式を許可します. オファー/アンサーの[m-line]の複数のRTPペイロードタイプ[RFC3264]に関しては、ネゴシエートされた代替フォーマットのいずれか1つを特定の時点で単一のRTPストリームで使用できますが、複数ではありません（RTPに基づいて）タイムスタンプ）. 使用される形式は、RTPパケット間で動的に変化する可能性があります. 

2.2. 要件言語
キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます. 

3.ユースケース
このドキュメントで説明されているSimulcastの使用例は、1つ以上の中央ノードを使用して通信セッションのビューを個々の参加者に適応させ、参加者間のメディア転送を容易にするマルチパーティ通信セッションに関連しています. したがって、これらのケースは、RTPミキサータイプのトポロジを対象としています. 

RTPミキサーが通信セッションのこの適応されたビューを各受信参加者に提供するための2つの主要なアプローチがあります. 

oトランスコーディング（デコードと再エンコード）は、各受信参加者に合わせた特性を持つRTPストリームを受信しました. これには、複数の参加者からのメディアソースを、RTPミキサーによって作成された混合メディアソースに混合または構成することが含まれます. このアプローチの主な利点は、受信側の個々の参加者に対して最適に近い適応を実現することです. 主な欠点は、RTPミキサーの計算コストが非常に高くなる可能性があり、通常、受信参加者のエンドツーエンドの遅延などのメディアのエクスペリエンスの品質（QoE）が低下し、メディアコンテンツへのRTPミキサーのアクセスが必要になることです. 

o受信したすべてのRTPストリームまたはサブストリームのサブセットを各受信参加者に切り替える. 使用されるサブセットは通常、各受信参加者に固有です. このアプローチの主な利点は、RTPミキサーの方が計算コストが安く、メディアQoEへの影響が非常に限られており、メディアコンテンツへのRTPミキサー（フル）アクセスを必要としないことです. 主な欠点は、受信したRTPストリームのサブセットを結合して、受信参加者のリソース状況に完全に適合させることが難しい場合があることです. 複数のRTPストリームを送信すると、送信参加者からRTPミキサーへのネットワークリソースが多く消費されることも欠点です. 

Simulcastの使用は、リソース使用の最適な適応を実現するよりも、RTPミキサーへの負荷を減らし、QoEへの影響を最小限に抑えることがより重要な後者のアプローチに関連しています. 

3.1. 多様なレシーバーセットへの到達
送信参加者が提供するメディアソースは、利用可能なリソースの点で異なる複数の受信参加者に到達する必要がある可能性があります. 通常異なるレシーバーリソースには、次のものが含まれますが、これらに限定されません. 

コーデック：これにはコーデックタイプ（RTPペイロード形式MIMEタイプなど）が含まれ、コーデック構成を含めることができます. コーデック構成のみが異なるいくつかのコーデックリソースは、ビデオコーデックプロファイルやトランスポートパケット化構成が異なるなど、何らかの形で「互換性」がない場合は「異なる」ものになります. 

サンプリング：これは、メディアソースが空間的および時間的領域でサンプリングされる方法に関連しています. ビデオストリームの場合、空間サンプリングは画像解像度に影響し、時間サンプリングはビデオフレームレートに影響します. オーディオの場合、空間サンプリングはオーディオチャネルの数に関連し、時間サンプリングはオーディオ帯域幅に影響します. これは、受信エンドポイントでのさまざまなレンダリング機能やニーズに合わせて使用​​できます. 

ビットレート：これは、メディアソースをRTPストリームとして送信するために1秒あたりに送信されるビット数に関連します. これは通常、受信ユーザーのQoEにも影響します. 

RTPスイッチをミドルボックスとして使用する場合、単一のRTPストリームを送信し、RTPミキサーを使用して各受信参加者に個別のトランスコーディングを作成するのではなく、送信参加者がメディアソースごとに構成が異なるいくつかのRTPストリームのSimulcastを作成できるようにすることは、良いトレードオフになります.  . 

これには、受信参加者が利用可能なリソースの観点から分類でき、送信参加者がカテゴリとメディアソースごとに1つのRTPストリームに一致する構成を選択できる必要があります. たとえば、受信側の参加者のセットは画面解像度のみが異なります. 最大で360pの解像度でビデオを表示できるものもあれば、720pの解像度をサポートするものもあります. 送信側の参加者は、送信された各ビデオメディアソースの解像度が360pおよび720pのRTPストリームのSimulcastを作成することにより、可能な限り最高の解像度ですべてのレシーバーに到達できます. 

送信できる同時配信RTPストリームの最大数は、主に、送信参加者が使用できる処理量とアップリンクネットワークリソースによって制限されます. 

3.2. アプリケーション固有のメディアソースの処理
通信セッションを制御するアプリケーションロジックには、一部のメディアソースの特別な処理が含まれる場合があります. たとえば、送信側の参加者からのメディアが自分自身に返送されない場合が一般的です. 

また、受信側のクライアントでは、現在アクティブなスピーカーの参加者が他の参加者（セクション3.1のサンプリングまたはビットレートの側面）よりも大きいサイズまたは高い品質で表示されることもよくあります. 多くの会議システムはアクティブスピーカーのメディアを送信者自体に送り返しません. つまり、アクティブスピーカーに転送される他の参加者のメディアがあります. 通常は前のアクティブスピーカーです. このように、以前のアクティブスピーカーは、大きいサイズ（現在のアクティブスピーカーに対して）と小さいサイズ（残りの参加者に対して）の両方で必要です. これは、以前のアクティブスピーカーからRTPスイッチへのSimulcastで解決できます. 

3.3. レシーバーメディアソースの設定
通信セッションを制御するアプリケーションロジックにより、受信側の参加者は、たとえばセクション3.1に記載されている側面の観点から、受信したいRTPストリームの特性に関する好みを述べることができます. RTPストリームの同報を送信することは、競合する、または互換性のない設定を持つレシーバーに対応する1つの方法です. 

4.概要
このメモは、上記のSimulcastの使用例と機能をカバーするSDP [RFC4566]シグナリングを定義します. このようなシグナリングの多くの要件は、付録Aで詳しく説明しています. 

[ID.ietf-mmusic-rid]で定義されているRIDメカニズムにより、SDPオファー側またはアンサー側は、「a = rid」行を使用して、rid-idにさまざまなRTPストリーム制限を指定できます. このような制限の例は、最大ビットレート、最大空間ビデオ解像度（幅と高さ）、最大ビデオフレームレートなどです. 各rid-idは、関連するSDPメディア記述でRTPペイロードタイプのサブセットのみを使用するように制限される場合もあります. これらのRTPペイロードタイプには、「a = fmtp」行と他のSDP属性を使用して、送受信できるものに影響を与える独自の構成とパラメータを設定できます. 

新しいSDPメディアレベル属性「a = simulcast」が定義されています. この属性は、送信と受信の方向に関係なく、同時配信RTPストリームの数と、各同時配信RTPストリームの潜在的な代替形式を記述します. 代替を含む各SimulcastRTPストリームは、[ID.ietf-mmusic-rid]で定義されているRID識別子（rid-id）を使用して識別されます. 

   a = simulcast：send 1; 2,3 recv 4
        
上記の行がSDPオファーに含まれている場合、「送信」部分は、2つの同時RTPストリームを送信するオファー側の機能と提案を示します. 各Simulcastストリームは1つ以上のRTPストリーム識別子（rid-id）で記述され、Simulcastストリームのrid-idの各グループはセミコロン（ ";"）で区切られます. Simulcastストリームにカンマ（ "、"）で区切られた複数のrid-idがある場合、それらはその特定のSimulcastRTPストリームの代替表現を記述します. したがって、上記の「送信」部分は、2つの同時配信RTPストリームを送信する意図として解釈されます. 最初のSimulcastRTPストリームは、rid-id 1に従って識別および制限されます. 2番目のSimulcastRTPストリームは、rid-id 2および3に従って識別および制限された2つの選択肢として送信できます. 

SDPオファーのメディア記述のより完全な例を以下に示します. 

   m=video 49300 RTP/AVP 97 98 99
   a=rtpmap:97 H264/90000
   a=rtpmap:98 H264/90000
   a=rtpmap:99 VP8/90000
   a=fmtp:97 profile-level-id=42c01f;max-fs=3600;max-mbps=108000
   a=fmtp:98 profile-level-id=42c00b;max-fs=240;max-mbps=3600
   a=fmtp:99 max-fs=240; max-fr=30
   a=rid:1 send pt=97;max-width=1280;max-height=720
   a=rid:2 send pt=98;max-width=320;max-height=180
   a=rid:3 send pt=99;max-width=320;max-height=180
   a=rid:4 recv pt=97
   a=simulcast:send 1;2,3 recv 4
   a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id
        
図1：オファー内のSimulcast Media Descriptionの例

上記のSDPメディアの説明は、提供者が2つの同時配信RTPストリーム、最大720p解像度のH.264エンコードストリーム、およびH.264またはVP8としてエンコードされた1つの追加ストリームを送信できると高レベルで解釈できます. 最大解像度は320x180ピクセルです. 提供者は、最大720pの解像度で1つのH.264ストリームを受信できます. 

このSDPオファーの受信者は、受け入れる内容を示すSDP応答を生成できます. これは、「a = simulcast」属性を使用してSimulcast機能を示し、どのSimulcastRTPストリームと受信および送信の代替案を指定します. 上記のオファーに対応する、このような応答する「a = simulcast」属性の例は次のとおりです. 

   a = simulcast：recv 1; 2 send 4
        
このSDP回答では、回答者は「recv」の部分で、2つの同時配信RTPストリームを受信することを示しています. サポートしていない代替を削除しました（rid-id 3）. 送信部分は、rid-id 4に従ってこのメディアソースの1つのストリームを受信することを提供者に確認します. 対応する、より完全な例のSDP応答メディアの説明は次のようになります. 

   m=video 49674 RTP/AVP 97 98
   a=rtpmap:97 H264/90000
   a=rtpmap:98 H264/90000
   a=fmtp:97 profile-level-id=42c01f;max-fs=3600;max-mbps=108000
   a=fmtp:98 profile-level-id=42c00b;max-fs=240;max-mbps=3600
   a=rid:1 recv pt=97;max-width=1280;max-height=720
   a=rid:2 recv pt=98;max-width=320;max-height=180
   a=rid:4 send pt=97
   a=simulcast:recv 1;2 send 4
   a=extmap:1 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id
        
図2：回答に含まれるSimulcast Media Descriptionの例

単一のメディアソースを説明するために、単一のSDPメディア記述が使用されることが想定されています. これは、[RFC7656]で定義されている概念と整合しており、メディア記述のBUNDLE [ID.ietf-mmusic-sdp-bundle-negotiation]グループ化の有無にかかわらず、WebRTCコンテキストで機能します. 

要約すると、「a = simulcast」行は、送信方向と受信方向のSimulcastストリームを別々に記述しています. 各方向は、セミコロンで区切られた1つ以上のSimulcastストリームを記述できます. 「a = simulcast」行のSimulcastストリームを表す識別子は、[ID.ietf-mmusic-rid]の「a = rid」行で定義されているように、rid-idです. 各Simulcastストリームは、代替rid-idのリストとして提供できます. 各代替はコンマで区切られます（上記の例にはありません）. 詳細な仕様はセクション5にあり、より詳細な例はセクション5.6に概説されています. 

5.詳細な説明
このセクションでは、上記の概要（セクション4）について詳しく説明します. 最初に、正式な構文が提供され（セクション5.1）、次にセクション5.2の残りのSDP属性定義が提供されます. Simulcastストリームの関連付け（セクション5.5）は、使用されるRTP / RTCPメカニズムの定義を提供します. このセクションの最後には、いくつかの例があります. 

5.1. Simulcast属性
このドキュメントでは、新しいSDPメディアレベルの「a = simulcast」属性を定義します. 値は、次のABNF [RFC5234]構文と、ABNFでの大文字と小文字を区別する文字列サポートの更新[RFC7405]に基づく値です. 

    sc-value     = ( sc-send [SP sc-recv] ) / ( sc-recv [SP sc-send] )
    sc-send      = %s"send" SP sc-str-list
    sc-recv      = %s"recv" SP sc-str-list
    sc-str-list  = sc-alt-list *( ";" sc-alt-list )
    sc-alt-list  = sc-id *( "," sc-id )
    sc-id-paused = "~"
    sc-id        = [sc-id-paused] rid-id
    ; SP defined in [RFC5234]
    ; rid-id defined in [I-D.ietf-mmusic-rid]
        
図3：Simulcast値のABNF

RFCエディターへの注意：このドキュメントの公開前に、上の図の「ID.ietf-mmusic-rid」をRFC番号のdraft-ietf-mmusic-ridに置き換えてください. 

「a = simulcast」属性には、1つまたは2つのSimulcastストリーム記述の形式のパラメーターがあり、それぞれが方向（「送信」または「受信」）で構成され、その後に1つ以上のSimulcastストリームのリストが続きます. 各Simulcastストリームは、1つ以上の代替Simulcast形式で構成されます. 各Simulcast形式は、Simulcastストリーム識別子（rid-id）によって識別されます. rid-idは、RTPペイロード形式の制限[ID.ietf-mmusic-rid]で説明されているように、RTPストリーム識別子の形式を持っている必要があります. 

Simulcastストリームのリストでは、各Simulcastストリームはセミコロン（ ";"）で区切られています. 各Simulcastストリームは、カンマ（ "、"）で区切られたrid-idで表される1つ以上の代替形式で提供できます. 各rid-idは、最初に一時停止した[RFC7728]として指定することもできます. これは、rid-idの前に「〜」を付けることで示されます. 各rid-idに個別の初期一時停止状態を許可する理由は、一時停止機能を、rid-idによって参照される各RTPペイロードタイプに対して個別に指定できるためです. 「a = rtcp-fb」属性で指定された一時停止機能は指定されたペイロードタイプにのみ適用され、「a = rid」で指定されたrid-idは複数の異なるペイロードタイプを参照できるため、rid-idでストリームを一時停止することはできません. 関連するRTPペイロードタイプには、一時停止機能がありません. 

5.2. Simulcast機能
Simulcast機能は、新しいメディアレベルのSDP属性「a = simulcast」（セクション5.1）で表現されます. セッションレベルでのこの属性の使用は定義されていません. この仕様の実装は、それをセッションレベルで使用してはならず（MUST NOT）、セッションレベルで受け取った場合は無視する必要があります. この仕様の拡張により、そのようなセッションレベルの使用法を定義できます. 各SDPメディア記述には、最大で1つの「a = simulcast」行を含める必要があります. 

送信方向と受信方向には、個別の独立したSimulcastストリームのセットがあります. 複数の方向をリストする場合、各方向は同じ行で複数回発生してはなりません. 

未定義のrid-idを使用するSimulcastストリームは、RTPストリームレシーバーによって有効なSimulcastストリームとして使用してはなりません（MUST NOT）. rid-idの方向は、「a = rid」行の対応するRTPストリーム識別子に指定された方向に合わせる必要があります. 

リストされた方向のSimulcastストリームの数は、その方向でサポートされるSimulcastストリームの数に制限を設定します. リストされている同時送信ストリームの「送信」方向の順序は、推奨される優先順位を降順で示しています. 最初にリストされているrid-idが最も優先され、後続のストリームの優先順位は徐々に低くなります. リストされたrid-idの「recv」方向の順序は、優先されるSimulcastストリームを表し、左端が最も優先されます. これは、実際に送信されたSimulcastストリームの数を何らかの理由で減らす必要がある場合に重要になります. 

他のrid-idと明示的に依存するrid-id [RFC5583] [ID.ietf-mmusic-rid]（同じメディアの説明でも）を使用できます. 

Simulcastストリームに複数の代替Simulcast形式を使用することは、Simulcastストリームを代替rid-idのコンマ区切りリストとして表現することにより、属性パラメーターの一部として指定できます（MAY）. Simulcastストリーム内のrid-id代替の順序は重要です. rid-idの選択肢は、（左）最も好ましいものから（右）最も好ましくないものの順にリストされています. simulcastを使用する場合、これは通常のSDPルールを使用して、「m =」行のフォーマットタイプの順序で表される通常のコーデック設定を上書きします. これは、一般的なコーデック設定とSimulcastストリーム構成設定の分離を可能にするためです. ただし、Simulcastストリームごとに使用する代替の選択は独立しており、現在、異なるSimulcastストリーム間で代替rid-id間の選択を調整するメカニズムはありません. 

Simulcastストリームは、同じRTP SSRCがセッション中に複数回RTPペイロードタイプを変更できるように定義されたコーデックを使用できます. パケット単位でも可能です. 典型的な例は、コンフォートノイズ[RFC3389]および/またはDTMF [RFC4733]形式を利用する音声コーデックです. 

RTPストリームの一時停止/再開[RFC7728]がサポートされている場合、対応するSimulcastストリームがRTPセッションの開始からすでに一時停止されていることを示すために、任意のrid-idに「〜」文字を前に付けることができます. この場合、RTPストリームの一時停止/再開のサポートも、「a = simulcast」が含まれている同じ「m =」行に含める必要があります. そのような最初に一時停止されたSimulcastストリームに関連するすべてのRTPペイロードタイプは、[a = rtcp-fb]の「*」ワイルドカード形式を使用するなど、[RFC7728]で指定された一時停止/再開機能としてSDPにリストされている必要があります. 

SDPを送信するエンドポイントの「送信」方向に最初に一時停止された同時配信ストリームは、非送信請求のローカル一時停止ストリームと同等であると見なされ、それに応じて処理される必要があります. 最初に一時停止されたSimulcastストリームは、RTP一時停止/再開の仕様で説明されているように再開されます. 要請されていないローカルで一時停止されたストリームを再開したいRTPストリームレシーバーは、そのストリームのSSRCを知る必要があります. 最初に一時停止されたSimulcastストリームのSSRCは、RTPストリームの送信者RTCP送信者レポート（SR）から取得できます. これには、「送信者のSSRC」としての目的のSSRCと、RtpStreamId RTCP SDESアイテムのrid-id値[ID.ietf -avtext-rid]. 

SDPを送信するエンドポイントに、最初に一時停止された「受信」方向のSimulcastストリームが含まれている場合、SDPを受信するリモートRTP送信者は、RTPストリームを非送信請求のローカル一時停止状態にする必要があります. Simulcastストリームを最初に一時停止したとマーク付けしていない他のRTPストリームレシーバーがセッションにある場合、Simulcastストリームセンダーはストリームをローカルで一時停止状態にしません. ただし、集中会議では、RTP送信者は通常、RTP受信者からのSDPシグナリングを認識せず、この決定を行うことができません. 最初に一時停止された「recv」ストリームが、リモートRTP送信者によってローカルで一時停止されていると見なされることを要求する理由. 

冗長オーディオデータ[RFC2198]形式の使用は、損失保護のためのSimulcastの形式と見なすことができますが、このメモで説明されているメカニズムと競合するとは見なされないため、他の形式として使用できます. この場合、運ばれる形式ではなく「赤」の形式を、「a = simulcast」行にSimulcastストリームとしてリストする必要があります（SHOULD）. 

Simulcastストリームのメディア形式と対応する特性は、異なる「a = rtpmap」や「a = fmtp」行を持つ異なるSDP形式、または異なる定義のRTPペイロード形式の制限など、異なるように選択する必要があります. この違いが必要ない場合は、Simulcastの代わりにRTP複製[RFC7104]プロシージャを使用することをお勧めします. 実装の複雑化を避けるために、単一のrid-idは、「a = simulcast」行ごとに複数回発生してはなりません（MUST NOT）. これは、実質的に同等である複数の異なるrid-idを定義することが可能であるため、RTM複製メカニズムとしてのSimulcastの使用を排除しないことに注意してください. 

5.3. オファー/アンサーの使用
注：「a = simulcast」を含めたり、simulcastを使用したりしても、「a = fmtp」や「a = rid」などの他のSDP属性の解釈やオファー/アンサー手順は変更されません. 

5.3.1. 最初のSDPオファーの生成
メディアの説明にSimulcastを使用したい提供者は、オファーのそのメディアの説明に「a = simulcast」属性を1つ含める必要があります. オファーのrid-idとして受信Simulcastストリームおよび/または代替フォーマットのセットをリストするオファーャーは、それらのSimulcastストリームおよび/または代替フォーマットのRTPストリームをアンサーから受信できるように準備する必要があります. 

5.3.2. SDP回答の作成
既存のSDPオファー/アンサー[RFC3264]手順で定義されているように、Simulcastの概念を理解していない回答者も属性を認識せず、SDP回答からそれを削除します. このメモではSDPセッションレベルのSimulcastは定義されていないため、SDPセッションレベルで「a = simulcast」属性を持つオファーを受け取った回答者は、それを回答から削除する必要があります. 属性を理解しているが、同じメディア記述で複数の「a = simulcast」属性を受け取った回答者は、そのメディア記述のすべての「a = simulcast」行を回答から削除することにより、Simulcastの使用を無効にするものとします. 

属性を理解し、指示された方向のSimulcastをサポートしたい回答者は、単方向パラメータの方向性を逆にする必要があります. "send"は "recv"になり、その逆も同様です. それを回答に含めます. 

「a = simulcast」属性を含むオファーを受け取った回答者は、代替rid-idをリストします. 代替rid-idをすべて回答に含めてもかまいませんが、不要な代替rid-idを削除することもできます（MAY）. 回答. 回答者は、オファーの受信方向に存在しなかった、代替のrid-idを送信方向に追加してはなりません（MUST NOT）. 応答側は、受信方向のrid-idの代替のいずれかを受信する準備をしておく必要があり、応答の一部である送信方向の代替のいずれかを送信できます（MAY）. 

多数のSimulcastストリームをリストするSimulcastでオファーを受け取る回答者は、回答のSimulcastストリームの数を減らしてもよいが、Simulcastストリームを追加してはならない（MUST NOT）. 

RTPストリームの一時停止/再開機能なしでオファーを受信した応答者は、Simulcastストリームを最初に応答で一時停止したものとしてマークしてはなりません. 

RTPストリームの一時停止/再開機能を備えたオファーを受け取るRTPストリームの一時停止/再開可能な応答側は、一時停止/再開可能な形式を参照するすべてのrid-idを、最初に応答で一時停止されたものとしてマークできます. 

rid-idが最初に一時停止されていないという正当な理由がない限り、方向に関係なく、最初に一時停止されているrid-idのオファーの指示を受け取った応答者は、そのrid-idを最初に一時停止されたものとしてマークする必要があります（SHOULD）. オファーと比較して回答の最初の一時停止を削除する理由の1つは、たとえば、回答者が回答で受け入れるメディアソースのすべての受信方向のSimulcastストリームが一時停止されることです. 

5.3.3. SDP回答を処理する提供者
「a = simulcast」なしで回答を受け取った提供者は、回答者に対してシマルキャストを使用してはなりません. 指定された方向にrid-idなしで "a = simulcast"を含む回答を受け取った提供者は、その方向でのSimulcastを使用してはなりません. 

いくつかのrid-id代替が保持されている回答を受け取る提供者は、保持された送信方向rid-id代替のいずれかを受信する準備ができていなければならず、保持された受信方向rid-id代替のいずれかを送信してもよい（MAY）. 

オファーと比較して一部のrid-idが削除された回答を受信したオファー提供者は、対応するリソース（コーデック、トランスポートなど）を受信方向に解放する場合があり、削除されたrid-idに対応するRTPパケットを送信してはなりません（MUST NOT）. 

最初に一時停止されたものとしてrid-idの一部を提供し、RTPストリームの一時停止/再開機能を示さない回答を受け取った提供者は、Simulcastストリームを最初に一時停止してはなりません. 

一部のrid-idが最初に一時停止としてマークされている回答を受け取るRTPストリームの一時停止/再開機能を備えた提供者は、オファーで最初に一時停止としてマークされているかどうかにかかわらず、正当な理由がない限り、最初にそれらのRTPストリームを一時停止する必要があります（SHOULD）.  RTPストリームが最初に一時停止されていません. そのような理由の1つは、たとえば、最初は回答者が最初はそのタイプのメディアをまったく受信しないことである可能性があります. 

5.3.4. セッションの変更
既存のセッション内のオファーは、最初のSDPオファーと同じルールに従いますが、以下が追加されています. 

1.オファーIDの送信方向で最初に一時停止されたとマークされたrid-idは、オファーの作成時の現在の一時停止状態についてのオファー提供者の意見を反映するものとします（SHALL）. これは純粋に情報提供であり、競合またはあいまいな場合は、進行中のセッションでのRTPストリームの一時停止/再開[RFC7728]シグナリングが優先される必要があります（SHALL）. 

2.オファーIDの受信方向で最初に一時停止とマークされたrid-idは、（最初​​のオファーと同様に）オファー提供者の希望するrid-id一時停止状態を反映する必要があります. オファー提供者がRTPストリームの一時停止/再開[RFC7728]シグナリングによって対応するRTPストリームをすでに一時停止した場合を除いて、これは最初のオファーの条件と同じです. 

SDP回答の作成および既存のセッション内でのSDP回答の処理は、最初のSDPオファー/アンサーについて上記で説明したのと同じルールに従います. 

RTPペイロード形式の制限[ID.ietf-mmusic-rid]のセクション6.5のセッション変更の制限も適用されます. 

5.4. 宣言型SDPでの使用
このドキュメントでは、宣言型SDPでの「a = simulcast」の使用を定義していません. これは、宣言型SDPで使用するために定義されていないSimulcast形式ID [ID.ietf-mmusic-rid]を使用することによって部分的に動機付けられています. 宣言型SDPでのSimulcastの具体的な使用例が将来的に特定される場合、このメモの作成者は、追加の仕様がそのような使用に対処することを期待しています. 

5.5. Simulcastストリームの関連付け
Simulcast RTPストリームは、RDPStreamId [ID.ietf-avtext-rid]を介してRTPレベルで関連付けられている必要があります. これは、SDPの「a = simulcast」属性（セクション5.2）パラメータで指定されています. SDPメディアの説明ごとにメディアソースが1つしかない限り、これで十分です. BUNDLE [ID.ietf-mmusic-sdp-bundle-negotiation]を使用する場合、複数のSDPメディア記述が共同で単一のRTPセッションを指定する場合、BUNDLEのSDES MID識別メカニズムにより、RTPストリームを個々のメディア記述に関連付けることができます. 説明されているRtpStreamId関係を使用できます. MIDとRtpStreamIdの両方の識別にRTPヘッダー拡張[RFC8285]を使用することは、RTPストリームを正しく解釈して処理するために必要な、迅速な初期受信を保証するために重要です. 

注：RTP PTが対応するRtpStreamIdに一意にマッピングすることがSDPから明らかな場合、RTP受信者はRTP PTを使用してSimulcastストリームを関連付けることができます. これにより、RTCP SDESまたはRTPヘッダー拡張、あるいはその両方でRtpStreamId情報を受信する前に、デコードを有効にできる場合があります. 

RTPストリームは一度に（RTPタイムスタンプに基づいて）単一の代替rid-idのみを使用する必要がありますが、RTPパケットごとに形式（およびrid-id）を変更できます（MAY）. これは、SDP回答の「m =」行に複数のフォーマットが含まれ、RTPごとのRTPペイロードタイプの変更を可能にする場合の、既存の（非同時）SDPオファー/回答のケースに対応します. 

5.6. シグナリングの例
これらの例では、RTPミキサーを備えた集中型メディアトポロジを使用した、クライアントからビデオ会議サービスについて説明します. 

                    + --- + + ----------- + + --- +
                    | A | <----> | | <----> | B |
                    + --- + | | + --- +
                               | ミキサー|
                    + --- + | | + --- +
                    | F | <----> | | <----> | J |
                    + --- + + ----------- + + --- +
        
図4：4者ミキサーベースの会議

5.6.1. シングルソースクライアント
アリスは、メディアタイプごとに1つのメディアソースを使用できるSimulcast対応クライアントでミキサーを呼び出しています. クライアントは、HD 1280x720p 30fpsとサムネイル320x180p 15fpsの2つのビデオ解像度とフレームレートのSimulcastを送信できます. これは、「imageattr」[RFC6236]を使用して以下に定義されています. この例では、「pt」「a = rid」パラメータのみを使用して、RtpStreamIdとメディア形式（RTPペイロードタイプ）間の1：1マッピングを効果的に実現し、Simulcastストリーム形式を説明しています. アリスのオファー：

   v = 0
   o = alice 2362969037 2362969040 IN IP4 192.0.2.156
   s = Simulcast対応クライアント
   c = IN IP4 192.0.2.156
   t = 0 0
   m =オーディオ49200 RTP / AVP 0
   a = rtpmap：0 PCMU / 8000
   m =ビデオ49300 RTP / AVP 97 98
   a = rtpmap：97 H264 / 90000
   a = rtpmap：98 H264 / 90000
   a = fmtp：97 profile-level-id = 42c01f; max-fs = 3600; max-mbps = 108000
   a = fmtp：98 profile-level-id = 42c00b; max-fs = 240; max-mbps = 3600
   a = imageattr：97 send [x = 1280、y = 720] recv [x = 1280、y = 720]
   a = imageattr：98送信[x = 320、y = 180]受信[x = 320、y = 180]
   a = rid：1 send pt = 97
   a = rid：2 send pt = 98
   a = rid：3 recv pt = 97
   a = simulcast：send 1; 2 recv 3
   a = extmap：1 urn：ietf：params：rtp-hdrext：sdes：rtp-stream-id
        
図5：単一ソースのSimulcastオファー

SDPでSimulcast機能を示す唯一のものは、「simulcast」属性を含むビデオメディアの説明の行です. 含まれる「a = fmtp」および「a = imageattr」パラメータは、送信されたSimulcastストリームがビデオ解像度で異なる可能性があることを示します. RtpStreamIdのRTPヘッダー拡張は、RTPストリーム（SSRC）間の初期バインディングと、Simulcastストリームとその形式を識別するRtpStreamIdの問題を回避するために提供されています. 

サーバーからの回答は、それもSimulcastに対応していることを示しています. Simulcastに対応していない場合、「a = simulcast」行は存在せず、SDPで交渉されたメディアとの通信が開始されます. また、RtpStreamId RTPヘッダー拡張の使用も受け入れられます. 

   v = 0
   o =サーバー823479283 1209384938 IN IP4 192.0.2.2
   s =Simulcast対応クライアントへの回答
   c = IN IP4 192.0.2.43
   t = 0 0
   m = audio 49672 RTP / AVP 0
   a = rtpmap：0 PCMU / 8000
   m =ビデオ49674 RTP / AVP 97 98
   a = rtpmap：97 H264 / 90000
   a = rtpmap：98 H264 / 90000
   a = fmtp：97 profile-level-id = 42c01f; max-fs = 3600; max-mbps = 108000
   a = fmtp：98 profile-level-id = 42c00b; max-fs = 240; max-mbps = 3600
   a = imageattr：97 send [x = 1280、y = 720] recv [x = 1280、y = 720]
   a = imageattr：98送信[x = 320、y = 180]受信[x = 320、y = 180]
   a = rid：1 recv pt = 97
   a = rid：2 recv pt = 98
   a = rid：3 send pt = 97
   a = simulcast：recv 1; 2送信3
   a = extmap：1 urn：ietf：params：rtp-hdrext：sdes：rtp-stream-id
        
図6：単一ソースのSimulcastの回答

サーバーはSimulcastメディアレシーバーであるため、「simulcast」および「rid」属性パラメーターの方向を逆にします. 

5.6.2. マルチソースクライアント
フレッドは上記の例と同じ会議に2台のカメラと2台のディスプレイシステムを使用して電話をかけているため、各方向で2つの別々のメディアソースを処理でき、各メディアソースは送信方向でSimulcastが可能です. フレッドのクライアントは、メディアの説明ごとに1つのメディアソースに制限されています. 

最初のメディアソースの最初の2つのSimulcastストリームは、H264-SVC [RFC6190]とH264 [RFC6184]の異なるコーデックを使用します. これらの2つのSimulcastストリームも一時的な依存関係があります. 2つの異なるビデオコーデック、VP8 [RFC7741]とH264は、最初のメディアソースの3番目のSimulcastストリームの代替として提供されます. 最高の忠実度のSimulcastストリームのみが最初から送信され、低い忠実度のストリームは最初に一時停止されます. 

2番目のメディアソースは、3つの異なるSimulcastストリームで提供されます. この2番目のメディアソースのすべてのビデオストリームは、RTP再送信[RFC4588]によって損失保護されています. また、ここでは、最高の忠実度のSimulcastストリーム以外はすべて最初に一時停止されます. 低解像度は中解像度のSimulcastストリームよりも優先されることに注意してください. 

フレッドのクライアントも、BUNDLEを使用して、単一のメディアトランスポート上の同じRTPセッションですべてのメディア記述からのすべてのRTPストリームを送信しています. この例では多くの異なるSimulcastストリームを使用していますが、SimulcastストリームIDとしてRtpStreamIdを使用すると、少数のRTPペイロードタイプを使用できます. BUNDLE [ID.ietf-mmusic-sdp-bundle-negotiation]と "a = rid" [ID.ietf-mmusic-rid]の両方を使用する場合、これらのRTPストリームIDを運ぶためにRTPヘッダー拡張[RFC8285]を使用することをお勧めします. その結果、SDPにも含まれます. 「a = rid」の場合、対応するRtpStreamId SDES属性のRTPヘッダー拡張の名前がrtp-stream-id [ID.ietf-avtext-rid]になることにも注意してください. 

   v = 0
   o = fred 238947129 823479223 IN IP6 2001：db8 :: c000：27d
   s = Simulcast対応のマルチソースクライアントからのオファー
   c = IN IP6 2001：db8 :: c000：27d
   t = 0 0
   a = group：BUNDLE foo bar zen
   m =オーディオ49200 RTP / AVP 99
   a = mid：foo
   a = rtpmap：99 G722 / 8000
   m =ビデオ49600 RTP / AVPF 100 101 103
   a = mid：bar
   a = rtpmap：100 H264-SVC / 90000
   a = rtpmap：101 H264 / 90000
   a = rtpmap：103 VP8 / 90000
   a = fmtp：100 profile-level-id = 42400d; max-fs = 3600; max-mbps = 216000; \
       mst-mode = NI-TC
   a = fmtp：101 profile-level-id = 42c00d; max-fs = 3600; max-mbps = 108000
   a = fmtp：103 max-fs = 900; max-fr = 30
   a = rid：1 send pt = 100; max-width = 1280; max-height = 720; max-fps = 60; depend = 2
   a = rid：2 send pt = 101; max-width = 1280; max-height = 720; max-fps = 30
   a = rid：3 send pt = 101; max-width = 640; max-height = 360
   a = rid：4 send pt = 103; max-width = 640; max-height = 360
   a = depend：100 lay bar：101
   a = extmap：1 urn：ietf：params：rtp-hdrext：sdes：mid
   a = extmap：2 urn：ietf：params：rtp-hdrext：sdes：rtp-stream-id
   a = rtcp-fb：* ccm pause nowait
   a = simulcast：send 1; 2;〜4,3
   m =ビデオ49602 RTP / AVPF 96104
   a = mid：zen
   a = rtpmap：96 VP8 / 90000
   a = fmtp：96 max-fs = 3600; max-fr = 30
   a = rtpmap：104 rtx / 90000
   a = fmtp：104 apt = 96; rtx-time = 200
   a = rid：1 send max-fs = 921600; max-fps = 30
   a = rid：2 send max-fs = 614400; max-fps = 15
   a = rid：3 send max-fs = 230400; max-fps = 30
   a = extmap：1 urn：ietf：params：rtp-hdrext：sdes：mid
   a = extmap：2 urn：ietf：params：rtp-hdrext：sdes：rtp-stream-id
   a = extmap：3 urn：ietf：params：rtp-hdrext：sdes：repaired-rtp-stream-id
   a = rtcp-fb：* ccm pause nowait
   a = simulcast：send 1;〜3;〜2
        
図7：フレッドのマルチソースSimulcastオファー

5.6.3. Simulcastと冗長性
このセクションの例では、オーディオとビデオの冗長フォーマットを使用したSimulcastの適用について説明します. オーディオメディアの説明では、コーデックとビットレートの制限を使用し、それをRTP Payload for Redundant Audio Data [RFC2198]と組み合わせて、パケット損失の回復力を強化しています. ビデオメディアの説明では、解像度とビットレートの両方の制限を適用し、Flexible FEC [ID.ietf-payload-flexible-fec-scheme]およびRTP Retransmission [RFC4588]の形式のFECと組み合わせています. 

オーディオソースは、2つのSimulcastストリームとして送信するように提供されています. 最初のSimulcastストリームはOpusでエンコードされ、50 kbps（rid-id = 5）に制限され、2番目のSimulcastストリームはG.711（rid-id = 7）または冗長性のためにLPCと組み合わせたG.711でエンコードされます（rid-id = 6）. この例では、スタンドアロンLPCは、2番目のSimulcastストリームのRIDのペイロードタイプとして提供されていません. たとえば、十分な品質を提供しないことによって動機付けられる可能性があります. 

ビデオソースは、2つの同時Simulcast形式で送信されるように提供されています. 冗長性と修復は、フレキシブルFECとRTP再送信の両方の形式で提供されます. フレキシブルFECは特定のRTPストリームにバインドされていないため、このメディア記述の一部として送信されるすべてのRTPストリームで使用できます. 

   v = 0
   o = fred 238947129 823479223 IN IP6 2001：db8 :: c000：27d
   s =冗長性を使用したSimulcast対応クライアントからのオファー
   c = IN IP6 2001：db8 :: c000：27d
   t = 0 0
   a = group：BUNDLE foo bar
   m =オーディオ49200 RTP / AVP 97 98 99 100 101 102
   a = mid：foo
   a = rtpmap：97 G711 / 8000
   a = rtpmap：98 LPC / 8000
   a = rtpmap：99 OPUS / 48000/1
   a = rtpmap：100 RED / 8000/1
   a = rtpmap：101 CN / 8000
   a = rtpmap：102 telephone-event / 8000
   a = fmtp：99 useinbandfec = 1; usedtx = 0
   a = fmtp：100 97/98
   a = fmtp：102 0-15
   a = ptime：20
   a = maxptime：40
   a = rid：1 send pt = 99,102; max-br = 64000
   a = rid：2 send pt = 100,97,101,102
   a = extmap：1 urn：ietf：params：rtp-hdrext：sdes：mid
   a = extmap：2 urn：ietf：params：rtp-hdrext：sdes：rtp-stream-id
   a = simulcast：send 1; 2
   m =ビデオ49600 RTP / AVPF 103 104 105 106 107
   a = mid：bar
   a = rtpmap：103 H264 / 90000
   a = rtpmap：104 VP8 / 90000
   a = rtpmap：105 rtx / 90000
   a = rtpmap：106 rtx / 90000
   a = rtpmap：107 flexfec / 90000
   a = fmtp：103 profile-level-id = 42c00d; max-fs = 3600; max-mbps = 108000
   a = fmtp：104 max-fs = 3600; max-fr = 30
   a = fmtp：105 apt = 103; rtx-time = 200
   a = fmtp：106 apt = 104; rtx-time = 200
   a = fmtp：107 repair-window = 2000
   a = rid：1 send pt = 103; max-width = 1280; max-height = 720; max-fps = 30
   a = rid：2 send pt = 104; max-width = 1280; max-height = 720; max-fps = 30
   a = rid：3 send pt = 103; max-width = 640; max-height = 360; max-br = 300000
   a = rid：4 send pt = 104; max-width = 640; max-height = 360; max-br = 300000
   a = extmap：1 urn：ietf：params：rtp-hdrext：sdes：mid
   a = extmap：2 urn：ietf：params：rtp-hdrext：sdes：rtp-stream-id
   a = extmap：3 urn：ietf：params：rtp-hdrext：sdes：repaired-rtp-stream-id
   a = rtcp-fb：* ccm pause nowait
   a = simulcast：send 1,2; 3,4
        
図8：Simulcastと冗長性の例

6. RTPアスペクト
このセクションでは、SimulcastメディアパスのさまざまなエンティティがRTPレベルで発生すると予想できることについて説明します. これは、RTPミドルボックスに同時配信されるメディアソースを備えたエンドポイントで開始することにより、ソースからシンクまで探索されます. そのRTPミドルボックスは、メディアソースを他のRTPミドルボックス（カスケードミドルボックス）に送信するだけでなく、メディアソースのいくつかのSimulcast形式を選択し、それを受信エンドポイントに送信します. さまざまなタイプのRTPミドルボックスと、それらのさまざまなSimulcast形式の使用により、いくつかの異なる動作が発生します. 

6.1. メディアソースを使用したエンドポイントからの発信
最も単純なSimulcastのケースは、メディアソースを発信するエンドポイントから送信されるRTPストリームです. Simulcastが送信方向でネゴシエートされた場合、エンドポイントは、そのメディアソースのネゴシエートされたSimulcastストリームに必要な数のRTPストリームを送信できます. 各RTPストリーム（SSRC）は、RTCPで送信されたRtpStreamId SDESアイテムに関連付けられ（セクション5.5）、RTPヘッダー拡張としても識別されます. 同じRTPセッションで複数のメディアソースがネゴシエートされ、BUNDLE [ID.ietf-mmusic-sdp-bundle-negotiation]が使用されている場合、MID SDESアイテムもRtpStreamIdと同様に送信されます. 

次のいずれかの理由により、各RTPストリームが継続的に送信されない場合があります. Pause / Resume [RFC7728]を使用して一時的に一時停止したか、送信側のアプリケーションロジックが一時的に一時停止しているか、このSimulcastストリームを送信するためのネットワークリソースが不足しています. ただし、ネゴシエートされたすべてのSimulcastストリームは、RTPパケットが現在送信されていなくても、（少なくとも通常のRTCPレポートでは）アクティブで維持されたSSRCを持っています. RTPストリーム（SSRC）と特定のSimulcastストリームの関係は、SSRC衝突などの例外的な状況を除いて、変更されることはありません. SSRCの変更時にMIDとRtpStreamIdを使用すると、SSRCの変更後でも、レシーバーがRTPストリームを正しく識別できるようになります. 

6.2. RTPミドルボックスからレシーバー
マルチパーティRTPセッションのRTPストリームは、セッションが少なくともメディアソースからミドルボックスレッグへのSimulcastを利用する場合、複数の異なる方法で使用できます. これは、RTPミドルボックスの動作が異なるため、アプリケーションのニーズによっても大きく異なります. このテキストは、RTPミドルボックスがメディアソースを選択し、そのメディアソースが特定のレシーバーに配信するSimulcastストリームを選択することを前提としています. 多くの場合、たとえ選択されたSimulcastストリームが変化しても、メディアソースごとに最大1つのSimulcastストリームが特定のレシーバーに転送されます. アプリケーションのニーズが原因でこれが成り立たない場合、RTPストリームの側面はミドルボックスからミドルボックスのケース6.3に該当します. 

どのSimulcastストリームを受信機に転送するかの選択は、アプリケーション固有です. ただし、会議アプリケーションでは、アクティブスピーカーの選択が一般的です. 転送可能なメディアソースの数Nがマルチメディアセッションで使用可能なメディアソースの合計数より少ない場合、現在および以前のスピーカー（合計Nまで）が転送されることがよくあります. RTPミドルボックス内の現在のスピーカーを特定するためのメディア固有の処理の必要性を回避するために、メディアソースを提供するエンドポイントには、クライアントからミキサーへのオーディオレベル表示のRTPヘッダー拡張[RFC6464]などのメタデータを含めることができます.  . 

ストリームの切り替えの可能性はメディアタイプ固有ですが、ほとんどのビデオコーディングのように、エンコードでフレーム間の依存関係が大きいメディアタイプの場合、依存関係の構造を壊したり対処したりするメディアストリームの適切な切り替えポイントで切り替えを行う必要があります. 切り替えポイントを定期的に含めることができる場合でも、メディアソースのエンコードを実行するエンドポイントから切り替えポイントを要求するには、フルイントラリクエスト[RFC5104]などのメカニズムを使用するのが一般的です. 

ミドルボックスからレシーバー方向へのSSRCのRtpStreamId SDESアイテムの組み込みは、RtpStreamIdの使用がその方向でネゴシエートされている場合にのみ発生します. Simulcastシグナリングが単一のSimulcastストリームのみを示し、そのSimulcastストリームの代替としてすべてのRtpStreamIdを使用できるようにする場合、複数のRtpStreamIdをシグナリングできることは注目に値します. RtpStreamIdをRTPストリームのミドルボックスからレシーバーへの方向に含める1つの理由は、現在配信されているRTPストリームに適用される制限をレシーバーに知らせるためです. RtpStreamIdが使用されるようにネゴシエートされる場合、使用される識別子は各シグナリングセッションに固有であることを覚えておくことが重要です. 中心エンティティが調整を試みても、RtpStreamIdsをレッグ固有の値に変換する必要がある可能性があります. 以下のケースは、RtpStreamIdがミキサーからレシーバーへの方向で使用されないことをベースラインとして持っています. 

6.2.1. メディア切り替えミキサー
このセクションでは、RTPミドルボックスがRTPトポロジ[RFC7667]のMedia-Switching Mixer（セクション3.6.2）のように動作する場合の動作について説明します. ここでの基本的な側面は、メディアが

ミドルボックスから配信されるソースは、ミキサーの概念的または機能的なソースになります. たとえば、1つのメディアソースが高解像度ビデオのメインスピーカーであり、他の多くのメディアソースが各参加者のサムネイルである場合があります. 

上記の結果、ミキサーによって生成されたRTPストリームは、さまざまなメディアソースおよびさまざまなSimulcastバージョンで、受信した着信RTPストリームの数を切り替えるものになります. ミキサーは、RTPストリームの1つとして送信するメディアソースを選択し、次に、利用可能なSimulcastストリームの中から最も適切なものを選択します. 選択基準には、ミキサーからレシーバーへのパスで利用可能な帯域幅と、レシーバーに配信されるRTPストリームの機能的な使用に基づく制限が含まれます. 後者の例として、表示領域が単なるサムネイルの場合、フルHDビデオをレシーバーに転送する必要はありません. したがって、一部のミキサーのメディアソースに対して一部のSimulcastストリームを転送できないようにする制限が存在する場合があります. 

これにより、RTPミキサーの各メディアソースに単一のRTPストリームが使用されます. このRTPストリームは、ミキサーに到着する特定の1つのRTPストリームの選択であり、RTPヘッダーフィールドの値は、一貫した単一のRTPストリームを提供するために書き換えられます. RTPミキサーがこのメディアソースに一致する着信ストリームを受信しない場合、SSRCは送信しませんが、RTCPを使用して維持されます. ミキサーのメディアソースのSSRC、つまりRTPストリームは、長期的に安定していると予想されます. 信号またはその他の破壊的なイベントによってのみ変更されます. 上記では単一のRTPストリームについて説明していますが、場合によっては、冗長性やその他の補助RTPストリームなど、元のメディアソース用に選択された同時配信ストリームを運ぶ複数のRTPストリームが存在する可能性があります. 

ミキサーは、CSRCフィールドに発信元メディアソースのSSRC値を含めることで、発信元メディアソースのIDを受信機に伝達します. RTPミキサーがメディアソースのSimulcastバージョンを切り替える可能性があるため、メディアソースが同じであっても、CSRC値が変わる可能性があることに注意してください. 

元のメディアソースからのMID SDESアイテムは削除する必要があり、RTPストリームのSSRCに関連付けられていないことに注意することが重要です. つまり、ミキサーとレシーバーの間の信号には、発信元のメディアソースを中心に構成されているものはなく、ミキサーのメディアソースのみです. それらがSSRCに関連付けられている場合、レシーバーは、SSRCの衝突があったこと、およびRTPストリームが正しいコンテキストに関連付けるために使用される識別子を運んでいないため、RTPストリームが偽であると信じている可能性があります. ただし、SSRCとして使用されない限り、これはCSRC値には当てはまりません. これらの場合、CNAMEとMIDをSDESアイテムとして提供できます. 受信者はこれを使用して、同じ発信元メディアソースに関連付けられているCSRC値を判別できます. 

このセクションで説明するシナリオでRtpStreamIdを使用する場合、特定のSSRCのRtpStreamIdは、切り替え用に選択された実際のSimulcastストリームに基づいて変化することに注意してください. これらのRtpStreamId識別子は、このレッグのシグナリングコンテキストに対してローカルになります. さらに、定義されたRtpStreamIdとそのパラメーターは、R​​TPミキサーによって送信され、このメディアソースに切り替えることができる、RTPミキサーによって受信されたすべてのメディアソースとSimulcastストリームをカバーする必要があります. 

6.2.2. 選択転送ミドルボックス
このセクションでは、RTPミドルボックスがRTPトポロジ[RFC7667]の選択的転送ミドルボックス（セクション3.7）のように動作する場合の動作について説明します. このタイプのRTPミドルボックスのアプリケーションでは、各発信元メディアソースが、ミドルボックスとレシーバーの間のレッグに対応するメディアソースを持つことになります. 選択転送ミドルボックス（SFM）は、メディアソースのすべてのSimulcastストリームを公開することまで可能ですが、このセクションでは、任意のSimulcast形式を含むことができる単一のSimulcastストリームに焦点を当てます. このセクションでは、SFMプロジェクションメカニズムがメディアソースレベルで機能し、メディアソースのSimulcastストリームの1つをSFMから受信機への1つのRTPストリームにマッピングすることを前提としています. 

この使用により、SFMが現時点でレシーバーに提供するメディアソースのサブセットに基づいて、1つのメディアソースの個々のRTPストリームをアクティブから一時停止に切り替えることができます. SFMでは、1対1のメディアソースマッピングがあるため、CSRCを使用して元のストリームを示す理由はありません. アプリケーションが正常に機能するために受信したSimulcastバージョンを知る必要がある場合は、RtpStreamIdをSFMから受信機レッグにネゴシエートする必要があります. 転送されているSimulcastストリームは、レッグでRtpStreamIdが使用されていない限り明示されません. 

SFMから受信機に送信されるMID SDESアイテムは、SFMと受信機の間で合意されたものだけであり、SFMの発信側からのMID値は転送されません. 

SFMは、すべてのメディアソースとそのSimulcastストリームに対応するRTPストリームを公開し、次に、選択された1つのSimulcastストリームを転送するメディアソースに公開します. ただし、これはRTPストリームの数を不必要に増やし、受信機がSimulcastストリーム間の切り替えをタイムリーに検出する必要があるため、これは推奨されません. 上記の使用法では、RTPストリームが終了したことをタイムリーに検出するという不確実性を回避しながら、切り替えに同じSFM機能が必要です. 利点は、受信したSimulcastストリームが、メディアソースに対してどのRTPストリームがアクティブになるかによって暗黙的に提供されることです. ただし、RtpStreamIdを使用してこれを明示的にすると、どの代替形式が使用されるかが明らかになります. 結論としては、Simulcastストリームごとに1つのRTPストリームを使用する必要はありません. ストリームの終了をタイムリーに検出することの問題は、ストリームが一時的または長期的に停止したかどうかに関係なく、意図的に送信が停止されたことを明示的に示していないことです. RTCPベースの一時停止および再開メカニズム[RFC7728]には、一時停止の前に送信された最後のRTPシーケンス番号を提供するPAUSED表示が含まれています. 使用法により、このソリューションの適時性は、RTCPを使用した配信が最後のRTPパケットの送信に関していつ発生するかによって異なります. 明示的な情報がまったく提供されていない場合、RTPパケット配信の一時停止を判断するには、増加していないRTCP SRフィールド値とタイマーに基づく検出を使用する必要があります. これにより、通常、最後のRTPパケットが到着したとき（到着した場合）が最後になると判断できません. 

6.3. RTP MiddleboxからRTP Middlebox
これは、RTPミドルボックス間でのSimulcastストリームの送信、またはメディアソースごとに複数の同時Simulcastストリームの配信を有効にしたいが、送信エンティティが発信エンドポイントではない場合の送信に関連しています. ミドルボックスAとBの間の特定の方向については、これはメディアソースベースでのミドルボックスの最初のケースと非常によく似ています. ただし、この場合、通常、複数のエンドポイントから発信された複数のメディアソースがあります. これにより、たとえばネットワーク帯域幅の制限が原因で、同時に受信されるメディアストリームの数に制限が生じる状況が発生する可能性があります. この場合、Simulcastストリームだけでなく、メディアソースのサブセットも選択できます. 

AとBの間で使用されるMIDは、シグナリングでこれら2つのID間で合意されたものです. RtpStreamId値も提供され、それらがどのSimulcastストリームであるかに関する明示的な情報を確実にします. ここでは、RTPストリームからMIDおよびRtpStreamIdへの関連付けは、長期的に安定している必要があります. 

7.ネットワークの側面
Simulcastは、このメモでは、同じ基礎となるメディアソースの複数の代替エンコードストリームを送信する行為として定義されています. 同じソースから発信された複数の独立したストリームを送信する場合、RTPを使用していくつかの異なる方法で実行できる可能性があります. さまざまなRTP多重化代替の使用に関する考慮事項に関する一般的な説明は、RTPの多重化のガイドライン[ID.ietf-avtcore-multiplex-guidelines]にあります. RTPセッションで複数のストリームを処理する方法に関する説明と明確化は、[RFC8108]にあります. 

Simulcastに関連するネットワークの側面は次のとおりです. 

サービス品質：Simulcastを使用する場合、すべてのストリームに同等の処理を適用するのではなく、特定のSimulcastストリームを優先することが重要な場合があります. たとえば、低ビットレートストリームの輻輳やパケット損失を最小限に抑えるために、低ビットレートストリームを高ビットレートストリームよりも優先させることができます. したがって、QoSサポートが良好なSimulcastソリューションを使用する利点があります. 

NAT / FWトラバーサル：複数のRTPセッションを使用すると、同じトランスポートフローを再利用できない限り、NAT / FWトラバーサルのコストが高くなります. これは、SDPポート番号を使用した多重化ネゴシエーションで実現できます[ID.ietf-mmusic-sdp-bundle-ネゴシエーション]. 

7.1. ビットレート適応
複数のSimulcastストリームを使用すると、かなりの量のネットワークリソースが必要になる場合があります. メディアソースのすべてのSimulcastストリーム（およびSDPメディアの説明）の総帯域幅は、そのメディアソースに適用可能なSDP "b ="行によって制限されます. アプリケーションが適切な輻輳制御メカニズムを使用して、持続的な輻輳を引き起こさないようにすることを前提としています. RTPセッション中に使用可能なネットワークリソースの量が変化し、SDPでネゴシエートされたものと一致しない場合、さまざまなSimulcastストリームで使用されるビットレートを動的に減らす必要がある場合があります. 同時配信メディアソースがすべての同時配信ストリームに対して単一のメディアトランスポートを使用する場合、そのメディアソースに対してすべての同時配信ストリームでの共同輻輳制御が使用される可能性があります. そのような適応でSimulcastストリーム間で利用可能なビットレートを割り当てるときに優先するSimulcastストリームは、「a = simulcast」行のSimulcastストリームの順序と、代替のSimulcast形式の順序5.2から取得する必要があります. 一時停止/再開機能があり、適応プロセスによってビットレートが非常に低く、実際には役に立たないと考えられるSimulcastストリームは、制限状態が解消するまで一時的に一時停止できます. 

8.制限
選択したアプローチには、メディアソースのすべてのSimulcastフォーマットに対する単一のRTPセッションの使用に関連する制限があります. これは、同じSDPメディア記述の下でメディアソースに関連するすべてのSimulcastストリームを送信することから生じます. 

さまざまなメディアトランスポートでさまざまなSimulcastストリームを使用することはできないため、さまざまなSimulcastストリームにさまざまなQoSを適用する可能性が制限されます. ユニキャストを使用すると、個別のパケットマーキングに基づくQoSメカニズムが実現可能になります. これは、Simulcastストリームを異なるRTPセッションに分離して異なるQoSを適用する必要がないためです. 

また、マルチキャストレシーバーがすべてのストリームを受信するのではなく、必要なストリームを選択できるように、さまざまな同時マルチキャストストリームを異なるマルチキャストグループに分離することもできません. この場合、唯一の妥当な実装は、マルチキャストグループごとに異なるRTPセッションを使用して、レポートやその他のRTCP機能が意図したとおりに動作するようにすることです. マルチキャストコンテキストでのこのようなSimulcastの使用は、現在のドキュメントの範囲外であり、追加の仕様が必要になります. 

9. IANAに関する考慮事項
このドキュメントでは、[RFC4566]と[ID.ietf-の手順に従って、SDPパラメータレジストリ内の「att-field（media level only）」レジストリに新しいメディアレベルのSDP属性「simulcast」を登録するように要求します.  mmusic-sdp-mux-attributes]. 

   連絡先名、電子メール：IESG（iesg@ietf.org）
        
属性名：simulcast

長い形式の属性名：Simulcastストリームの説明

文字セット依存：いいえ

属性値：sc-value; RFC XXXXのセクション5.1を参照してください. 

ピュールのポーズ：RTPストリームのセットのためのシグナルSimulcast機能

MUXカテゴリ：通常RFCエディターへの注意：「RFC XXXX」をこのRFCに割り当てられた番号に置き換えてください. 

10.セキュリティに関する考慮事項
Simulcast機能、構成属性、およびパラメーターは、シグナリングの攻撃に対して脆弱です. 

「a = simulcast」属性を誤って含めると、通常は生成されない複数のRTPストリームが同時に送信される可能性があります. 影響は、メディア記述のジョイント帯域幅によって制限され、その数に関係なく、すべてのSimulcastストリームによって共有されます. ただし、最初に必要なRTPストリームに割り当てられた帯域幅の共有に影響を与える不要なRTPストリームが多数存在する場合があります. 

「a = simulcast」属性の悪意のある削除により、Simulcastが使用されなくなります. 

上記のいずれも大きな影響を与える可能性はほとんどなく、少なくとも整合性があり、攻撃者による変更を防ぐために送信元が認証されているシグナリングによって軽減できます. 

「a = rid」およびRtpStreamId SDESアイテムの使用に関連するセキュリティの考慮事項は、[ID.ietf-mmusic-rid]および[ID.ietf-avtext-rid]で説明されています. この仕様での使用に関連する追加のセキュリティの問題はありません. 

11.貢献者
エリクソン出身のMorgan LindqvistとFredrik Janssonは、このドキュメントの最初のバージョンに重要な資料を提供してくれました. CiscoのRobert HansenとCullen Jennings、GoogleのPeter Thatcher、MozillaのAdam Roachが後続のバージョンに大きく貢献しました. 

12.謝辞
著者は、このドキュメントの作成中に提供したフィードバックについて、Bernard Aboba、Thomas Belling、Roni Even、Adam Roach、Inaki Baz Castillo、Paul Kyzivat、およびArun Arunachalamに感謝します. 

13.リファレンス
13.1. 規範的な参考文献
[ID.ietf-avtext-rid] Roach、A.、Nandakumar、S. 、およびP. Thatcher、「RTP Stream Identifier Source Description（SDES）」、draft-ietf-avtext-rid-09（作業中）、 2016年10月. 

[ID.ietf-mmusic-rid] Roach、A. 、「RTP Payload Format Restrictions」、draft-ietf-mmusic-rid-15（進行中）、2018年5月. 

[ID.ietf-mmusic-sdp-bundle-negotiation] Holmberg、C.、Alvestrand、H. 、およびC. Jennings、「Session Description Protocol（SDP）を使用したメディア多重化のネゴシエーション」、draft-ietf-mmusic-sdp- bundle-negotiation-54（進行中の作業）、2018年12月. 

[ID.ietf-mmusic-sdp-mux-attributes] Nandakumar、S. 、「多重化時のSDP属性のフレームワーク」、draft-ietf-mmusic-sdp-mux-attributes-17（作業中）、2018年2月. 

[RFC2119] Bradner、S. 、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>. 

[RFC3550] Schulzrinne、H.、Casner、S.、Frederick、R. 、およびV. Jacobson、「RTP：A Transport Protocol for Real-Time Applications」、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、 <https://www.rfc-editor.org/info/rfc3550>. 

[RFC4566] Handley、M.、Jacobson、V. 、およびC. Perkins、「SDP：Session Description Protocol」、RFC 4566、DOI 10.17487 / RFC4566、2006年7月、<https://www.rfc-editor.org/ info / rfc4566>. 

[RFC5234]クロッカー、D. 、エド. およびP. Overell、「構文仕様の拡張BNF：ABNF」、STD 68、RFC 5234、DOI 10.17487 / RFC5234、2008年1月、<https://www.rfc-editor.org/info/rfc5234>. 

[RFC7405] Kyzivat、P. 、「ABNFでの大文字と小文字を区別する文字列のサポート」、RFC 7405、DOI 10.17487 / RFC7405、2014年12月、<https://www.rfc-editor.org/info/rfc7405>. 

[RFC7728] Burman、B.、Akram、A.、Even、R. 、およびM. Westerlund、「RTP Stream Pause and Resume」、RFC 7728、DOI 10.17487 / RFC7728、2016年2月、<https：//www.rfc -editor.org/info/rfc7728>. 

[RFC8174] Leiba、B. 、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>. 

13.2. 参考情報
[ID.ietf-avtcore-multiplex-guidelines] Westerlund、M.、Burman、B.、Perkins、C.、Alvestrand、H.、and R. Even、 "Guidelines for using the Multiplexing Features of RTP to Support Multiple Media Streams "、draft-ietf-avtcore-multiplex-guidelines-08（作業中）、2018年12月. 

[ID.ietf-payload-flexible-fec-scheme] Zanaty、M.、Singh、V.、Begen、A. 、およびG. Mandyam、「柔軟な前方誤り訂正（FEC）用のRTPペイロード形式」、draft-ietf -payload-flexible-fec-scheme-17（作業中）、2019年2月. 

[RFC2198]パーキンス、C. 、コウベラス、I. 、ホドソン、O. 、ハードマン、V. 、ハンドラリー、M. 、ボロット、J. 、ベガガルシア、A. 、およびS.フォセパリシス、「RTPペイロードfor Redundant Audio Data」、RFC 2198、DOI 10.17487 / RFC2198、1997年9月、<https://www.rfc-editor.org/info/rfc2198>. 

[RFC3264] Rosenberg、J. およびH. Schulzrinne、「セッション記述プロトコル（SDP）を備えたオファー/アンサーモデル」、RFC 3264、DOI 10.17487 / RFC3264、2002年6月、<https://www.rfc-editor.org / info / rfc3264>. 

[RFC3389] Zopf、R. 、「Real-time Transport Protocol（RTP）Payload for Comfort Noise（CN）」、RFC 3389、DOI 10.17487 / RFC3389、2002年9月、<https://www.rfc-editor.org/ info / rfc3389>. 

[RFC4588] Rey、J.、Leon、D.、Miyazaki、A.、Varsa、V. 、およびR. Hakenberg、「RTP Retransmission Payload Format」、RFC 4588、DOI 10.17487 / RFC4588、2006年7月、<https：/ /www.rfc-editor.org/info/rfc4588>. 

[RFC4733] Schulzrinne、H. およびT. Taylor、「DTMFディジット、テレフォニートーン、およびテレフォニーシグナルのRTPペイロード」、RFC 4733、DOI 10.17487 / RFC4733、2006年12月、<https://www.rfc-editor.org / info / rfc4733>. 

[RFC5104] Wenger、S.、Chandra、U.、Westerlund、M. 、およびB. Burman、「フィードバック付きのRTPオーディオビジュアルプロファイルのコーデック制御メッセージ（AVPF）」、RFC 5104、DOI 10.17487 / RFC5104、2月2008、<https://www.rfc-editor.org/info/rfc5104>. 

[RFC5109] Li、A. 、編、「Generic Forward Error CorrectionのRTPペイロードフォーマット」、RFC 5109、DOI 10.17487 / RFC5109、2007年12月、<https://www.rfc-editor.org/info/rfc5109> . 

[RFC5583] Schierl、T. およびS. Wenger、「Session Description Protocol（SDP）のシグナリングメディアデコードの依存関係」、RFC 5583、DOI 10.17487 / RFC5583、2009年7月、<https://www.rfc-editor.org / info / rfc5583>. 

[RFC6184] Wang、Y.、Even、R.、Kristensen、T.、R. Jesup、「RTP Payload Format for H.264 Video」、RFC 6184、DOI 10.17487 / RFC6184、2011年5月、<https：// www.rfc-editor.org/info/rfc6184>. 

[RFC6190] Wenger、S.、Wang、Y.、Schierl、T. 、およびA. Eleftheriadis、「RTP Payload Format for Scalable Video Coding」、RFC 6190、DOI 10.17487 / RFC6190、2011年5月、<https：// www .rfc-editor.org / info / rfc6190>. 

[RFC6236] Johansson、I. およびK. Jung、「Session Description Protocol（SDP）における一般的な画像属性のネゴシエーション」、RFC 6236、DOI 10.17487 / RFC6236、2011年5月、<https：//www.rfc-editor.  org / info / rfc6236>. 

[RFC6464] Lennox、J.、Ed. 、Ivov、E. 、およびE. Marocco、「クライアントからミキサーへのオーディオレベル表示のた​​めのリアルタイム転送プロトコル（RTP）ヘッダー拡張」、RFC 6464、DOI 10.17487 / RFC6464、2011年12月、<https://www.rfc-editor.org/info/rfc6464>. 

[RFC7104] Begen、A.、Cai、Y. 、およびH. Ou、「Session Description Protocolの重複グループ化セマンティクス」、RFC 7104、DOI 10.17487 / RFC7104、2014年1月、<https：//www.rfc-editor .org / info / rfc7104>. 

[RFC7656] Lennox、J.、Gross、K.、Nandakumar、S.、Salgueiro、G. 、およびB. Burman、編、「リアルタイムの転送プロトコル（RTP）ソースのセマンティクスとメカニズムの分類法」、 RFC 7656、DOI 10.17487 / RFC7656、2015年11月、<https://www.rfc-editor.org/info/rfc7656>. 

[RFC7667] Westerlund、M. およびS. Wenger、「RTPトポロジ」、RFC 7667、DOI 10.17487 / RFC7667、2015年11月、<https://www.rfc-editor.org/info/rfc7667>. 

[RFC7741] Westin、P.、Lundin、H.、Glover、M.、Uberti、J. 、およびF. Galligan、「VP8ビデオのRTPペイロード形式」、RFC 7741、DOI 10.17487 / RFC7741、2016年3月、<https ：//www.rfc-editor.org/info/rfc7741>. 

[RFC8108] Lennox、J.、Westerlund、M.、Wu、Q. 、およびC. Perkins、「単一のRTPセッションでの複数のRTPストリームの送信」、RFC 8108、DOI 10.17487 / RFC8108、2017年3月、<https：/ /www.rfc-editor.org/info/rfc8108>. 

[RFC8285] Singer、D.、Desieneni、H. 、およびR. Even、編、「RTPヘッダー拡張の一般的なメカニズム」、RFC 8285、DOI 10.17487 / RFC8285、2017年10月、<https：//www.rfc -editor.org/info/rfc8285>. 

付録A.要件
以下の要件は、ユースケースをサポートするために定義されたソリューションによって満たされます（セクション3）. 

REQ-1：識別：

REQ-1.1：SimulcastされたRTPストリームのセットを、SDPシグナリングの同じメディアソースから発信されたものとして識別できる必要があります. 

REQ-1.2：RTPエンドポイントは、受信したRTPストリームが関連付けられているSimulcastストリームを識別でき、SDPシグナリングの内容を認識できる必要があります. 

REQ-2：トランスポートの使用. ソリューションは、以下を使用するときに機能する必要があります. 

REQ-2.1：SDPメディア記述ごとに個別のメディアトランスポートを備えたレガシーSDP. 

REQ-2.2：バンドル[ID.ietf-mmusic-sdp-bundle-negotiation] SDPメディアの説明. 

REQ-3：能力交渉. 次のことが可能でなければなりません. 

REQ-3.1：送信者はSimulcastを送信する機能を表現できます. 

REQ-3.2：レシーバーは、Simulcastを受信する機能を表現できます. 

REQ-3.3：送信者は、提供可能なSimulcastストリームの最大数を表現できます. 

REQ-3.4：レシーバーは、受信できるSimulcastストリームの最大数を表現できます. 

REQ-3.5：送信者は、提供可能なSimulcastストリームの特性を詳しく説明できます. 

REQ-3.6：レシーバーは、受信することを好むSimulcastストリームの特性を詳しく説明できます. 

REQ-4：特徴的な機能. SDP形式の値とRTPペイロードタイプで表現できるように、異なるSimulcastストリームが異なるコーデックパラメータを使用できるようにする必要があります. 

REQ-5：互換性. 追加のRTPストリームを生成する他のRTPメカニズムと組み合わせて、Simulcastを使用できる必要があります. 

REQ-5.1：RTP再送信[RFC4588]. 

REQ-5.2：RTP転送エラー修正[RFC5109]. 

REQ-5.3：オーディオコンフォートノイズやDTMFなどの関連するペイロードタイプ. 

REQ-5.4：依存するストリームが一連のエンコードされたストリームと依存するストリームに依存し、それぞれが独自のRTPストリームで伝送されるコーデックをサポートするために、単一のSimulcastストリームを複数のRTPストリームで構成できます. 

REQ-6：相互運用性. ソリューションは、以下で使用できる必要があります. 

REQ-6.1：メディアタイプごとに1つのメディアソースを使用する非同時性レガシークライアントとのインターワーキング. 

REQ-6.2：SDPメディア記述ごとに1つのメディアソースを備えたWebRTC環境. 

付録B.以前のバージョンからの変更点
RFC EDITORへの注記：公開する前にこのセクションを削除してください. 

B.1. WGバージョン-13と-14の間の変更
SDPの例で修正されたoc =およびt =行順序

B.2. WGバージョン-12と-13の間の変更
o RID ABNFに従うように修正された例

o例図7では、2番目のメディアソースの優先度についてコメントしています. 

o SHOULDの制限を明確にしました. 

o RTXの例にurn：ietf：params：rtp-hdrext：sdes：repaired-rtp-stream-idを追加しました. 

o ABNFはRFC 7405を使用して大文字と小文字を区別するようになりました

oさまざまなマイナーな社説やニット. 

B.3. WGバージョン-11と-12の間の変更
oセクション5.2のRTPストリームの複製に関する規範的記述を修正. 

oアプリケーションによる輻輳制御の使用に関する仮定を明確にしました. 

o RFC 2119の代わりにRFC 8174ボイラープレートを使用するように変更しました. 

oセクション4で、simulcast属性の構文の説明を明確にしました. 

oセクション5.2および5.3.2の編集上の説明. 

oさまざまなマイナーな社説やニット. 

B.4. WGバージョン-10と-11の間の変更
o RED（RFC2198）、RTP RTX（RFC4588）、FEC（draft-ietf-payload-flexible-fec-scheme）の両方を含む、Simulcastと冗長性に関する新しいSDPサンプルセクションを追加しました. 

oこれを禁止する理由はなく、対応する明確化がdraft-ietf-mmusic-ridで行われるため、RTPストリーム（CNやDTMFなど）の「関連する」ペイロード形式に独自のrid-idを含めてはならないという制限を削除. 

oソース固有のシグナリングについてはdraft-ietf-mmusic-ridが定義されていないため、ソース固有のシグナリングおよびRFC5576への参照に関する記述を削除しました. 

o一部のSDPの例を変更して、a = imageattrの代わりにa = ridの制限を使用するようにしました. 

o参照を廃止されたRFC 5285からRFC 8285に変更しました. 

B.5. WGバージョン-09と-10の間の変更
o概要セクションを修正し、例についてもう少し説明し、ストリームの1つにrid-id代替を追加しました. 

o用語セクションからもSCIDを削除しました. SCIDをrid-idに変更するときに-09で忘れられていました. 

B.6. WGバージョン-08と-09の間の変更
o SCIDをrid-idに変更し、ietf-draft-mmusic-ridネーミングに合わせました. 

o概要を例に基づいて変更し、短縮しました. 

o変更されたSDPオファーで最初に一時停止されたrid-idのセマンティクスを変更して、RFC 7728シグナリングをオーバーライドまたは修正することなく、オファー作成時の実際のRFC 7728一時停止状態に従うことを情報提供者の意見に準拠させる必要がないようにしました. 

oメディアの説明で複数の「a = simulcast」行の最初のものを無視することに関するテキストを、最大で1つの「a = simulcast」行のみが含まれるように強制して置き換えました. 

o RDP PTがRtpStreamIdに一意にマッピングすることがSDPから明らかである場合のために、RTP受信者はRTP PTを使用してSimulcastストリームを関連付けることができるという注記で明確にされました. 

oセクション4の要件を付録Aに移動しました. 

o編集の修正と説明. 

B.7. WGバージョン-07と-08の間の変更
o Inaki Baz Castilloによって発見された、セクション6.6.1のSDPサンプルの構文の修正. 

o PaulNFが提案したように、ABNFを変更してscp値のみを定義し、SDP属性自体は定義しない. 

o新しく公開されたRFC 8108へのID参照の変更. 

o -06と-07の間の変更のリストを追加します. 

B.8. WGバージョン-06と-07の間の変更
o Roni Evenとの議論の結果としてのスコープの明確化. 

oSimulcastストリームの識別要件の再定式化. 

oソース固有のシグナリング（RFC 5576）に関連するステートメントを修正して、Roni Evenのコメントに対処します. 

o単一のa = simulcast行内で同じSCIDの複数のインスタンスを禁止することと同様に、Simulcastストリームの違いに関するセクション6.2の最後の段落の更新. 

o Roni Evenによって提起された問題の結果として、セクション6.4のメモの削除. 

o「m =」の使用は、メディアの説明、およびその他のいくつかの編集上の改善と説明に変更されました. 

B.9. WGバージョン-05と-06の間の変更
o RTPアスペクトに関するセクションを追加

o機能交換がマルチRTPストリームのケースを処理できる必要があるという要件（5-4）を追加しました. 

oメカニズムの使用が推奨されているため、最初のシグナリング例にもextmap属性を追加しました. 

oSimulcast属性の定義と、SimulcastストリームがSimulcast形式とSCIDにどのように関連するかを明確にしました. 

o参考文献リストを更新し、参考情報と規範的なカテゴリの間でいくつかの参考文献を移動しました. 

o編集の改善と修正. 

B.10. WGバージョン-04と-05の間の変更
o draft-ietf-mmusic-ridおよびdraft-ietf-avtext-ridの最近の変更に合わせて. 

o一般に受け入れられている構造に従うようにSDPオファー/アンサーセクションを変更し、draft-ietf-mmusic-ridに合わせてセッションの変更に関する簡単なテキストも追加しました. 

o（Simulcastストリーム自体ではなく）Simulcastストリーム識別に関するテキストが改善され、頭字語SCIDが一貫して使用され、用語セクションで定義されました. 

o現在RFCとして公開されているRTPレベルの一時停止/再開およびVP8ペイロード形式の参照を変更しました. 

o IANA登録テキストの改善. 

o draft-ietf-payload-flexible-fec-schemeへの未使用の参照を削除しました. 

o編集の改善と修正. 

B.11. WGバージョン-03と-04の間の変更
o IETF 94での合意と同様に、RID識別のみを使用するように変更されました. 

o ABNFの改善. 

o最初に一時停止されたストリームのオファーと回答のルールを明確にしました. 

o現在RFCとして公開されているRTPトポロジおよびRTP分類法ドキュメントの参照を変更しました. 

o AVTEXTの新しいRIDドラフトへの参照を追加しました. 

oセクション6を再構成し、更新されたIANAセクションで簡単に参照できるようにしました. 

oビットレートの適応に関する議論を含むサブセクション7.1を追加しました. 

o編集の改善. 

B.12. WGバージョン-02と-03の間の変更
oマルチキャスト/ブロードキャストのテキストはソリューションでサポートされていないため、ユースケースから削除しました. 

o統一計画案への明示的な言及を削除しました. 

o一時停止モードでSimulcastストリームを開始する可能性が追加されました. 

o提供者が複数のストリーム識別（ptまたはrid）メソッドを提供し、回答者にどちらを使用するかを選択することを可能にしました. 

o送信方向のオファーにも優先表示を追加しました. 

o識別方法固有の制限を含む、現在の提案の制限に関するセクションを追加しました. 

B.13. WGバージョン-01と-02の間の変更
oコーデックの制約と構成の識別を新しいRIDソリューションに依存します. これにより、Simulcastストリームの記述にptまたはRIDが使用されているかどうかを識別する構文が変更されました. 

oSimulcastバージョンおよびSimulcastバージョンの名前をそれぞれSimulcastストリームおよびSimulcastフォーマットに変更し、それらの定義を改善しました. 

oSimulcastバージョンの代替を切り替えることは可能ですが、任意の時点で使用できるのは1つだけであることを明確にしました. 

o特定のSimulcastストリームのSimulcast形式の順序が優先順位を持つように定義を変更しました. 

B.14. WGバージョン-00と-01の間の変更
o変更なし. 期限切れの防止のみ. 

B.15. 個別バージョン-00とWGバージョン-00の間の変更
oこの付録を追加しました. 

著者のアドレス

Bo Burman Ericsson Gronlandsgatan 31 SE-164 60ストックホルムスウェーデン

   メール：bo.burman@ericsson.com
        
Magnus Westerlund Ericsson Torshamnsgatan 23 SE-164 83ストックホルムスウェーデン

電話：+46 10 714 82 87メール：magnus.westerlund@ericsson.com Suhas Nandakumar Cisco 170 West Tasman Drive San Jose、CA 95134 USA

   メール：snandaku@cisco.com
        
Mo Zanaty Cisco 170 West Tasman Drive San Jose、CA 95134 USA

   メール：mzanaty@cisco.com
        