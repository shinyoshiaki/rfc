RFCトランス
個人情報保護方針
連絡先
イチジク
@ tex2e
https://tools.ietf.org/html/draft-ietf-mmusic-rid-15
draft-ietf-mmusic-rid-15-RTPペイロード形式の制限
URL：https://tools.ietf.org/html/rfchttps://tools.ietf.org/html/draft-ietf-mmusic-rid-15
タイトル：draft-ietf-mmusic-rid-15-RTPペイロード形式の制限
翻訳編集：自動生成
Network Working Group A. Roach（編集者）
インターネットドラフトMozilla
更新：4855（承認されている場合）2018年5月15日
対象ステータス：標準化過程
有効期限：2018年11月16日
        
RTPペイロード形式の制限draft-ietf-mmusic-rid-15

概要

この仕様では、Session Description ProtocolでRTPストリームの制限を指定するためのフレームワークを定義します. このフレームワークは、新しい「rid」（「制限識別子」）SDP属性を定義して、RTPセッション内のRTPストリームを明確に識別し、通常のペイロードタイプで提供されるものを超えてコーデックにとらわれない方法でストリームのペイロード形式パラメーターを制限します. 

この仕様は、RFC4855を更新して、フォーマットパラメータ（fmtp）名の選択、およびこのドキュメントで定義されている制限との関係について追加のガイダンスを提供します. 

このメモのステータス

このインターネットドラフトは、BCP 78およびBCP 79の規定に完全に準拠して提出されます. 

Internet-Draftsは、Internet Engineering Task Force（IETF）の作業文書です. 他のグループも作業文書をインターネットドラフトとして配布する場合があることに注意してください. 現在のインターネットドラフトのリストは、http：//datatracker.ietf.org/drafts/current/にあります. 

Internet-Draftは、最長6か月間有効なドラフトドキュメントであり、いつでも他のドキュメントによって更新、置き換え、または廃止される可能性があります. インターネットドラフトを参考資料として使用したり、「進行中の作業」以外の方法で引用することは不適切です. 

このインターネットドラフトの有効期限は2018年11月16日です. 

著作権表示

Copyright（c）2018 IETF Trustおよびドキュメントの作成者として識別された人物. 全著作権所有. 

この文書は、BCP 78およびIETF文書に関するIETFトラストの法的規定（http://trustee.ietf.org/license-info）の対象であり、この文書の発行日に有効です. これらのドキュメントは、このドキュメントに関するあなたの権利と制限を説明しているため、注意深く確認してください. このドキュメントから抽出されたコードコンポーネントには、Trust Legal Provisionsのセクション4.eに記載されているSimplified BSD Licenseのテキストが含まれている必要があり、Simplified BSD Licenseに記載されているように保証なしで提供されます. 

目次

   1.用語. . . . . . . . . . . . . . . . . . . . . . . . . ３
   2.はじめに. . . . . . . . . . . . . . . . . . . . . . . . ３
   3.要件のキーワード. . . . . . . . . . . . . . . . . 4
   4. SDP「a = rid」メディアレベル属性. . . . . . . . . . . . . . 4
   5.「a = rid」の制限. . . . . . . . . . . . . . . . . . . . 6
   6. SDPオファー/アンサー手順. . . . . . . . . . . . . . . . . 8
     6.1. 最初のSDPオファーの生成. . . . . . . . . . . . 8
     6.2. SDPオファーを処理する回答者. . . . . . . . . . . . 9
       6.2.1. 「a = rid」を認識しない応答者. . . . . . . . . . . . . . 9
       6.2.2. "a = rid" -aware Answerer. . . . . . . . . . . . . . . 9
     6.3. SDP回答の生成. . . . . . . . . . . . . . . . 10
     6.4. SDP回答の提供者処理. . . . . . . . . . 11
     6.5. セッションの変更. . . . . . . . . . . . . . . . . . 13
   7.宣言型SDPで使用します. . . . . . . . . . . . . . . . . . 13
   8.他の技術との相互作用. . . . . . . . . . . . . . 13
     8.1. VP8形式パラメータとの相互作用. . . . . . . . . 14
       8.1.1. max-fr-最大フレームレート. . . . . . . . . . . . . 14
       8.1.2. max-fs-VP8マクロブロックでの最大フレームサイズ. . . 14
     8.2. H.264形式のパラメータとの相互作用. . . . . . . . 15
       8.2.1. profile-level-idおよびmax-recv-level-Negotiated Sub-
               プロフィール . . . . . . . . . . . . . . . . . . . . . . 16
       8.2.2. max-br / MaxBR-最大ビデオビットレート. . . . . . . 16
       8.2.3. max-fs / MaxFS-H.264での最大フレームサイズ
               マクロブロック. . . . . . . . . . . . . . . . . . . . . 16
       8.2.4. max-mbps / MaxMBPS-マクロブロックの最大処理
               割合 . . . . . . . . . . . . . . . . . . . . . . . . 16
       8.2.5. max-smbps-最大デコード画像バッファ. . . . . 17
     8.3. 冗長フォーマットとペイロードタイプの制限. . . . 17
   9.将来のペイロードのフォーマットパラメータ. . . . . . . . . . . . 18
   10.正式な文法. . . . . . . . . . . . . . . . . . . . . . . 18
   11. SDPの例. . . . . . . . . . . . . . . . . . . . . . . . 20
     11.1 多くのコーデックを使用する多くのバンドルされたストリーム. . . . . . . . . 20
     11.2 スケーラブルレイヤー. . . . . . . . . . . . . . . . . . . . 22
   12. IANAの考慮事項. . . . . . . . . . . . . . . . . . . . . 22
     12.1. 新しいSDPメディアレベル属性. . . . . . . . . . . . . 22
     12.2. RIDレベルのパラメーターのレジストリー. . . . . . . . . . . 23
   13.セキュリティに関する考慮事項. . . . . . . . . . . . . . . . . . . 24
   14.謝辞. . . . . . . . . . . . . . . . . . . . . . 25
        
   15.参考資料. . . . . . . . . . . . . . . . . . . . . . . . . 25
     15.1. 規範的な参照. . . . . . . . . . . . . . . . . . 25
     15.2. 有益な参照. . . . . . . . . . . . . . . . . 26日
   付録A.貢献者 . . . . . . . . . . . . . . . . . . . 27日
   著者のアドレス. . . . . . . . . . . . . . . . . . . . . . . . 28
        
1.用語
「ソースRTPストリーム」、「エンドポイント」、「RTPセッション」、および「RTPストリーム」という用語は、[RFC7656]で定義されているように使用されます. 

[RFC4566]および[RFC3264]の用語は、必要に応じて使用されます. 

2.はじめに
RTPのペイロードタイプ（PT）フィールドは、RTPペイロード形式と関連するSDPメディア記述の間のマッピングを提供します. 特定のPTに対して、RTPペイロードで伝送されるメディアのプロパティを説明するために、SDP rtpmapおよび/またはfmtp属性が使用されます. 

標準の最近の進歩により、RTPセッション[ID.ietf-mmusic-sdp-bundle-negotiation]、[ID.ietf-mmusic-sdp-simulcast]内で複数のRTPストリームのサポートを必要とするか、サポートする必要があるリッチマルチメディアアプリケーションが生まれました. 多数のコーデック. これらの要求により、次のような固有の課題が明らかになりました. 

oさまざまなペイロード構成を指定する際の制限付きRTP PTスペース

o SDPのペイロード形式のコーデック固有の構成

o不足または指定不足のペイロード形式パラメーター

oコーデック設定だけでなく、RTPセッション内の個々のストリームを示すPTのオーバーロード. 

これらのポイントを拡張するには：[RFC3550]は、RTPヘッダーのPTに7ビットを割り当てます. ただし、RTPペイロードタイプ番号の静的マッピングをペイロード形式に割り当て、RTPを他のプロトコル（RTCPなど）と多重化すると、アプリケーションで使用できるペイロードタイプ番号の数が制限される可能性があります. 可能なRTPペイロード構成の数がRTPセッション内の利用可能なPTスペースを超えるシナリオでは、ペイロード構成の追加の制限を表し、RTPストリームを対応する制限に効果的にマッピングする方法が必要です. この問題は、RTMセッションに追加のストリームを導入する、サイマルキャストやレイヤードコーデックなどの技術の増加によって悪化します. 

この仕様では、コーデックに依存しない方法でペイロード形式を制限するSDP属性とともに、ソースRTPストリームを制限するための新しいSDPフレームワーク（セクション2.1.10 [RFC7656]）を定義しています. このフレームワークは、現在のSDPで「a = fmtp」属性を介してメディアフォーマットパラメータを指定する方法に対する補足的な拡張機能と考えることができます. 

個々のストリームに対する追加の制限は、新しい「a = rid」（「制限識別子」）SDP属性で示されます. この属性を介して伝達される制限は、PT形式で確立されるパラメーターをさらに制限するためにのみ機能することに注意してください. 他のメカニズムによって課された制限は緩和されません. 

この仕様は、[ID.ietf-avtext-rid]で定義されたRTPストリーム識別子ソース記述（SDES）RTCPアイテムを使用して、RTPパケットとSDPでのそれらのフォーマット仕様との間に相関関係を提供します. 

セクション6.2.1で説明したように、このメカニズムは、通常のSDP処理ルールを介して下位互換性を実現します. このルールでは、不明なa =行を無視する必要があります. これは、このメカニズムによって要求された制限を示したり守ったりしない他の実装からの成功したオファーと応答を処理するために実装を準備する必要があることを意味します. 

さらに、セクション6とそのサブセクションで説明されているように、このメカニズムは拡張性を実現します. （a）オファーにオファー内のサポートされるすべての制限を含めること、および（b）アンサーに未知の制限を指定する "a = rid"行を無視させること. 

3.要件のキーワード
キーワード「MUST」、「MUST NOT」、「REQUIRED」、「SHALL」、「SHALL NOT」、「SHOULD」、「SHOULD NOT」、「RECOMMENDED」、「NOT RECOMMENDED」、「MAY」、「OPTIONALこのドキュメントの「」は、BCP 14 [RFC2119] [RFC8174]で説明されているように解釈されます. 

4. SDP "a = rid"メディアレベル属性
このセクションでは、識別されたRTPストリームに適用される一連の制限を伝えるために使用される新しいSDPメディアレベル属性[RFC4566]、「a = rid」を定義します. 大まかに言うと、この属性は次の形式を取ります（正式な定義については、セクション10を参照）. 

a = rid：<rid-id> <direction> [pt = <fmt-list>;] <restriction> = <value> ...

「a = rid」SDPメディア属性は、「rid-id」フィールドで識別される一意のRTPペイロード構成を定義する制限を指定します. この値は、RTPストリーム識別子ソース記述（SDES）アイテム[ID.ietf-avtext-rid]によって識別されるRTPストリームに制限をバインドします. SDPで「a = rid」パラメータを使用する実装は、[ID.ietf-avtext-rid]で説明されているRtpStreamId SDESアイテムをサポートする必要があります. そのような実装は、SDPメディア記述（ "m ="）のすべてのストリームに対して、セクション6およびそのサブセクションのルールを適用した後に "a = rid"行が残っているSDESアイテムを送信する必要があります. 

SDPで「a = rid」パラメーターを使用し、「a = rid」を持つソースRTPストリームのいずれかに対して、冗長RTPストリーム[RFC7656]、たとえばRTP RTX [RFC4588]またはFEC [RFC5109]を利用する実装セクション6とそのサブセクションのルールを適用した後に残っている行は、これらの冗長RTPストリームの[ID.ietf-avtext-rid]で説明されているRepairedRtpStreamId SDESアイテムをサポートする必要があります. RepairedRtpStreamIdは、それを適用できる冗長RTPストリームに使用する必要があります. RepairedRtpStreamIdの使用は、共有SSRC（[ID.ietf-payload-flexible-fec-scheme]など）を介してRTPストリームを直接関連付ける冗長形式や、RepairedRtpStreamIdがサポートできない他のケース（複数のソースストリームの参照など）には適用されません. 

RepairedRtpStreamIdは、冗長RTPストリームのRepairedRtpStreamId値をソースRTPストリームのRtpStreamId値に設定することにより、冗長RTPストリームとそのソースRTPストリーム間のバインディングを提供するために使用されます. 冗長RTPストリームには独自の「a = rid」行が含まれる場合があります（ただし、必須ではありません）. この場合、RtpStreamId SDESアイテムの値は、対応するソースRTPストリームとは異なります. 

RTPStreamIdまたはRepairedRtpStreamIdに関連付けられているSSRCがRTPセッション中に動的に変更された場合、この間接指定により、ソースと冗長データを一時的に正しく関連付けられなくなる可能性があることに注意してください. これは、変更後のすべてのRTPパケット（ソースおよび修復）にそれぞれRtpStreamIdまたはRepairedRtpStreamIdが含まれている場合に回避できます. そのような変更後の冗長情報の受信と有用性の確率を最大化するために、最初のいくつかの修復パケットによって参照されるすべてのソースパケットは、そのような情報を含む必要があります. このようなパケットの数は、実際に更新されたアソシエーションの高い確率を与えるのに十分な数であることをお勧めします. [RFC8285]のセクション4.1.1は、RTPヘッダー拡張送信の考慮事項に関する関連ガイダンスを提供します. または、

「方向」フィールドは、示された制限が適用されるRTPストリームパケットの方向を識別します. 「送信」または「受信」のいずれかです. これらの制限の方向は、メディアセクションに関連付けられた「非アクティブ」、「sendonly」、「recvonly」、または「sendrecv」の属性とは無関係に表現されることに注意してください. たとえば、「sendonly」ストリームに対する「recv」制限を示すことは有効です. これらの制限は、将来、ストリームが「sendrecv」または「recvonly」に変更された場合に適用されます. 

オプションの「pt = <fmt-list>」は、関連するRTPストリームで使用できる1つ以上のPT値をリストします. 「a = rid」属性に「pt」が含まれていない場合は、対応する「m =」行で指定されている任意のPT値を使用できます. 

ゼロ以上のコーデックにとらわれない制限のリスト（セクション5）は、対応するRTPストリームが準拠する制限を説明しています. 

このフレームワークは、「a = fmtp」SDP属性と組み合わせて使用​​して、特定のRTPペイロードタイプのメディアフォーマットパラメータを記述することができます. このようなシナリオでは、「a = rid」制限（セクション5）により、同等の「a = fmtp」属性がさらに制限されます. 

与えられたSDPメディア記述には、さまざまな可能なRTPペイロード構成を記述する0個以上の「a = rid」行が含まれる場合があります. 特定の「rid-id」は、特定のメディアの説明（「m =」セクション）で繰り返されてはなりません（MUST NOT）. 

「a = rid」メディア属性は、RTPベースのメディアトランスポートに使用できます. 他のドキュメントは、そのようなトランスポートのセマンティクスを拡張する可能性がありますが、他のトランスポートについては定義されていません. 

「rid」制限によって指定された制限は、セッションレベルおよびメディアレベルのパラメーターと同様の構文に従いますが、それらは個別に定義されます. セクション12で定義されたレジストリを使用して、すべての「rid」制限をIANAに登録する必要があります. 

セクション10は、「rid」属性の正式な拡張バッカスナウアフォーム（ABNF）[RFC5234]文法を示しています. 「a = rid」メディア属性は文字セットに依存しません. 

5.「a = rid」の制限
このセクションでは、コーデックにとらわれない方法でRTPペイロードエンコーディング形式を制限するために使用できる「a = rid」制限を定義します. 

次の制限は、コーデックに依存しない方法でビデオコーデックに適用することを目的としています. 

o max-width、ピクセル単位の空間解像度. ストリームの向きのシグナリングを使用して目的の表示の向きを変更する場合、この属性は、0度の回転がエンコードされるときのストリームの幅を参照します. 

o max-height、空間解像度（ピクセル単位）. ストリームの向きのシグナリングを使用して目的の表示の向きを変更する場合、この属性は、0度の回転がエンコードされたときのストリームの高さを参照します. 

o max-fps、フレームレート/秒. エンコードに固定フレームレートを使用しないエンコーダーの場合、この値は、フレーム間の最小時間を制限するために使用されます. 連続する2つのフレーム間の時間は、1 / max-fps秒未満にする必要があります. 

o max-fs、フレームサイズ（フレームあたりのピクセル数）. これは、長方形のフレームのフレーム幅とフレーム高さのピクセル単位の積です. 

o max-br、ビットレート/秒. この制限はメディアペイロードにのみ適用され、他のレイヤー（RTP、UDP、IP、イーサネットなど）によって導入されるオーバーヘッドは含まれません. この制限内に保つ正確な手段は実装に任されており、制限外の瞬間的な逸脱は許容されます. ただし、1秒のスライディングウィンドウの場合、RTPのペイロード部分のビットの総数は、「max-br」で指定された値を超えてはなりません（SHOULD NOT）. 

o max-pps、ピクセルレート/秒のピクセルレート. この値は、max-fps = max-pps /（幅*高さ）の変換を実行した後、max-fpsと同じように処理する必要があります（SHOULD）. ストリームの解像度が変更されると、この値は再計算されます. この再計算により、指定された最大値を超える範囲が、解像度変更境界付近で発生する可能性があります. 

o max-bpp. ピクセルあたりのビット数の最大値. 特定のコード化された画像のすべてのサンプルの平均として計算されます. これは浮動小数点値として表され、許容範囲は0.0001から48.0です. これらの値は、小数点の右側に4桁を超えてエンコードしてはなりません（MUST NOT）. 

o依存、ストリームが依存する他のストリームを識別する. 値は、コンマで区切られたrid-idのリストです. これらのrid-idは、適切な解釈を可能にするためにこのストリームが依存するRTPストリームを識別します. このドキュメントで定義されているメカニズムでは、ストリームが同じメディアセクションにある場合にのみ、そのような依存関係を表現できます. 

すべての制限はオプションであり、セクション6で説明されているSDPオファー/アンサールールに基づく交渉の対象となります. 

このリストは、制限の最初のセットとなることを目的としています. 今後のドキュメントで追加の制限が定義される可能性があります. セクション12.2を参照してください. このドキュメントでは、オーディオコーデックやビデオ以外のメディアタイプの制限を定義していませんが、そのような制限を他のドキュメントによる定義および登録から除外する必要はありません. 

セクション10では、このセクションで定義されている「a = rid」の制限ごとに、正式な拡張バッカスナウアフォーム（ABNF）[RFC5234]文法を提供します. 

6. SDPオファー/アンサー手順
このセクションでは、このフレームワークを使用する場合のSDP Offer / Answer [RFC3264]手順について説明します. 

「rid-id」の値は、メディアセクション（「m-line」）内で一意である必要があるだけであることに注意してください. RTPセッション全体で一意である必要はありません. 従来の使用法では、各メディアセクションは独自の5タプル（つまり、送信アドレス、送信ポート、受信アドレス、受信ポート、トランスポートプロトコルの組み合わせ）で送信され、明確なスコープを提供します. 同様に、BUNDLE [ID.ietf-mmusic-sdp-bundle-negotiation]を使用する場合、MID値はRTPストリームを単一のメディア記述に一意に関連付けます. RIDがBUNDLEメカニズムで使用される場合、ストリームはMIDおよびRID SDESアイテムの両方に関連付けられます. 

6.1. 最初のSDPオファーの生成
オファー内の各RTPメディア記述について、オファー側は、1つ以上の「a = rid」行を含めて、RTPペイロードタイプの特定のセットの構成プロファイルを指定することを選択できます（MAY）. 

特定の「a = rid」行を作成するには、提供者は次の手順に従う必要があります. 

1.メディア記述内で一意の「rid-id」を生成する必要があります

2.「rid-id」の方向を「send」または「recv」のいずれかに設定する必要があります

3. RTPストリームに表示できるSDPメディアフォーマット（通常はRTPペイロードタイプに対応）のリストを含めることができます（MAY）. 選択されたペイロードタイプは、メディアセクションの有効なペイロードタイプである必要があります（つまり、「m =」行にリストされている必要があります）. リストされたフォーマットの順序は重要です. 選択肢は、（左）最も好ましいものから（右）最も好ましくないものまでリストされています. RIDを使用する場合、この設定は、通常のSDPルールを使用して、「m =」行のフォーマットタイプの順序で表される通常のコーデック設定を上書きします. 

4.次に、提供者は、RTPストリームに適用する0個以上の「a = rid」制限（セクション5）を選択し、それらを「a = rid」行に追加します. 

5.提案者が回答者に制限を指定できるようにしたいが、値自体を設定したくない場合は、「a = rid」行に制限の名前を含めますが、指定された値はありません. 

注：「a = fmtp」属性がメディアフォーマット固有のパラメーターの提供にも使用されている場合、「a = rid」の制限により、指定されたRTPの特定のペイロードタイプに対応する「a = fmtp」パラメーターがさらに制限されます. ストリーム. 

与えられたコーデックが「a = rid」なしで使用されるときに「a = fmtp」行を必要とする場合、オファーは「a = rid」を使用しているときでさえ、対応する有効な「a = fmtp」行を含まなければなりません. 

6.2. SDPオファーを処理する回答者
6.2.1. 「a = rid」を認識しない応答者
レシーバーがこの仕様で定義されているフレームワークをサポートしていない場合、標準の[RFC3264]オファー/アンサールールに従って、「a = rid」行全体が無視されます. 

セクション6.1では、他の方法で必要なメディア形式に対して有効な「a = fmtp」行を含めることを提案する必要があります（つまり、「a = rid」行を使用して「a = fmtp」構成を置き換えることはできません）. その結果、「a = rid」行を無視すると、常に有効なセッション記述が生成されることが保証されます. 

6.2.2. 「a = rid」対応の回答者
回答者が「a = rid」属性をサポートしている場合、受信したオファーの「a = rid」行ごとに、次の検証手順が順番に実行されます. 

1.回答者は、「a = rid」行が構文的に適切に形成されていることを確認します. 構文エラーの場合、「a = rid」行は破棄されます. 

2.回答者は "a = rid"行からrid-idを抽出し、メディアセクション内でその一意性を検証します. 重複する場合、「a = rid」行全体、およびこの行を複製するrid-idを持つすべての「a = rid」行は破棄され、SDP回答に含めてはなりません（MUST NOT）. 

3.「a = rid」行に「pt =」が含まれている場合、ペイロードタイプのリストは、メディアセクション（つまり、「m =」行にリストされているもの）の有効なペイロードタイプのリストと照合されます. "m ="行にないPTは、 "pt ="の値のセットから破棄されます. この処理の後、「pt =」パラメーターに値が残っていない場合、「a = rid」行は廃棄されます. 

4.「方向」フィールドが「recv」の場合、回答者は指定された「a = rid」制限がサポートされていることを確認します. サポートされていない制限の場合、「a = rid」行は破棄されます. 

5.「依存」制限が含まれている場合、回答者は、リストされているrid-idがメディア記述のrid-idと明確に一致することを確認する必要があります. 従わない「依存」「a = rid」行は破棄されます. 

6.回答者は、制限がRTPストリームで使用されるコーデックの少なくとも1つと一致していることを確認します. 「a = rid」行に「pt =」が含まれている場合は、そのようなコーデックのリストが含まれています. それ以外の場合、そのようなコーデックのリストは、関連する「m =」行から取得されます. 詳細については、セクション8を参照してください. 「a = rid」の制限がすべてのコーデックの他のコーデックプロパティと互換性がない場合、「a = rid」の行は破棄されます. 

応答側は「送信」行にあるすべての制限を理解する必要がないことに注意してください. ストリーム送信側が受信側が理解できない方法でストリームを制限しても、相互運用性の問題は発生しません. 

6.3. SDP回答の生成
セクション6.2.2で説明されているようにSDPオファーの検証を実行したら、回答者は次の手順を実行してSDP回答を生成する必要があります. 

前の処理で破棄されなかった各「a = rid」行について：

1.「方向」フィールドの値が逆になります. 「送信」が「受信」に変更され、「受信」が「送信」に変更されます. 

2.回答者は、回答SDPの特定の「a = rid」制限値を変更することを選択できます. そのような場合、変更された値は、オファーで指定された値よりも制限的である必要があります. 回答には、オファーに存在しない制限を含めてはなりません. 

3.回答者は、オファーに含まれる「rid-id」を変更してはなりません. 

4.「a = rid」行に「pt =」が含まれている場合、回答者は指定された「a = rid」行から1つ以上のメディア形式を破棄できます. 回答者が「a = rid」行からすべてのメディア形式を破棄することを選択した場合、回答者は「a = rid」行全体を破棄する必要があります. オファーの「a = rid」行に「pt =」が含まれていなかった場合、対応する行に「pt =」を含めないでください. 

5.回答者がオファーの「recv」の方向で特定の「a = rid」行で指定されたペイロード構成をサポートできない場合、回答者は対応する「a = rid」行を破棄する必要があります. これには、「recv」の方向を持つ「a = rid」行の制限の1つ以上を回答者が理解できない状況が含まれます. 

注：回答者が提供者とは異なるPT値を使用してコーデックを表す場合、回答の "a = rid"値は、回答に存在するPT値を使用します. 

6.4. SDP回答の提供者処理
提供者は、回答を処理するときに次の手順に従う必要があります. 

1.提案者は、回答の「a = rid」行を、「rid-id」を使用した提案の「a = rid」行と照合します. オファーに一致する行が見つからない場合、「a = rid」行は無視されます. 

2.回答にオファーに存在しない制限が含まれている場合、オファー者は「a = rid」行を破棄する必要があります（SHALL）. 

3.オファーとアンサーの間で制限が変更されている場合、オファーは、変更が元のオファーよりも制限が厳しく、サポートできることを確認する必要があります. そうでない場合、提供者は「a = rid」行を破棄する必要があります. 

4.回答の「a = rid」行に「pt =」が含まれているのにオファーが含まれていない場合、オファー側は「a = rid」行を破棄する必要があります. 

5.回答の「a = rid」行に「pt =」が含まれ、オファーも含まれている場合、オファータイプはペイロードタイプのリストが対応する「a = rid」ラインで送信されたもののサブセットであることを確認しますオファーで. リモートエンドは対称PTを使用していない可能性があるため、この照合はリテラルPT値ではなく意味的に実行する必要があることに注意してください. この比較の目的で、回答の「a = rid」行にリストされている各PTについて、提供者は回答の対応する「a = rtpmap」および「a = fmtp」行を検索します. 次に、オファーに示されている「pt =」値のリストを検索し、オファー内の「a = rtpmap」行と「a = fmtp」行の同等のセットを持つ値を見つけようとします. 回答のすべてのPTを照合できる場合、「pt = 値は検証に合格します. それ以外の場合は失敗します. この検証が失敗した場合、提供者は "a = rid"行を破棄する必要があります（SHALL）. この意味論的比較では、それらの値をバイトごとに比較するのではなく、コーデックパラメータの意味を理解する必要があることに注意してください. 

6.「a = rid」行に「pt =」が含まれている場合、提供者は「a = rid」属性で提供された属性値が対応するコーデックおよびその他のパラメーターと一致していることを確認します. 詳細については、セクション8を参照してください. 「a = rid」の制限が他のコーデックプロパティと互換性がない場合、提供者は「a = rid」の行を破棄する必要があります. 

7.提供者は、制限がRTPストリームで使用されるコーデックの少なくとも1つと一致していることを確認します. 「a = rid」行に「pt =」が含まれている場合は、そのようなコーデックのリストが含まれています. それ以外の場合、そのようなコーデックのリストは、関連する「m =」行から取得されます. 詳細については、セクション8を参照してください. 「a = rid」制限がすべてのコーデックの他のコーデックプロパティと互換性がない場合、提供者は「a = rid」行を破棄する必要があります. 

上記のステップ1で一致しなかったオファーに含まれる「a = rid」行は、回答者によって破棄され、RTPストリームのネゴシエートされた制限の一部を形成しません. オファー提供者は、「送信」の方向フィールドを持つ「a = rid」行で示した制限を引き続き適用できますが、そうする必要はありません. 

オファーに「a = rid」行を含むメディアセクションを含める方法はいくつかありますが、応答の対応するメディアセクションには含まれないことに注意してください. これには、回答者が「a = rid」をまったくサポートしていない、または示された制限をサポートしていない状況が含まれます. そのような状況下では、提供者は、制限が適用されていないメディアストリームを受信する準備ができていなければなりません. 

6.5. セッションの変更
既存のセッション内のオファーと応答は、初期セッションネゴシエーションのルールに従います. このようなオファーは、使用中のRIDの数の変更を提案する場合があります. メディアとの競合状態を回避するために、変更が提案されているRIDは、以前のオファー/アンサー交換からのIDを再利用するのではなく、新しいIDを使用する必要があります. 提案された変更のないRIDは、以前の交換からのIDを再利用する必要があります. 

7.宣言型SDPでの使用
このドキュメントでは、宣言型SDPでのRIDの使用を定義していません. 宣言型SDPでのRIDの具体的な使用例が将来的に特定される場合、追加の仕様でそのような使用に対処することが期待されます. 

8.他のテクニックとの相互作用
歴史的に、SDPを介したメディアストリームの制限を可能にする他の多くのアプローチが定義されています. これらには以下が含まれます：

oフォーマットパラメータ（ "a = fmtp"）を介して設定されたコーデック固有の構成. たとえば、H.264の「max-fs」フォーマットパラメータ[RFC6184]

o画像属性属性（ "a = imageattr"）によるサイズ制限[RFC6236]

このドキュメントで説明されているメカニズムをこれらの他の制限メカニズムと組み合わせて使用​​する場合、他の手法で伝達される制限を超える追加の制限を課すことを目的としています. 

オファーでは、これは、「a = rid」行をメディアストリームの他の制限と組み合わせると、空ではない交差が生じることが予想されることを意味します. たとえば、PTの最小幅が640であることを示すために画像属性が使用されている場合、そのPTに適用される「a = rid」行での「max-width = 320」の指定は無意味です. セクション6.2.2のルールによれば、これにより、対応する「a = rid」行が受信者によって無視されます. 

回答では、「a = rid」行をメディアストリームの他の制限と組み合わせると、空でない交差が発生することが予想されます. 応答を生成する実装が、他のパラメーター（たとえば、「a = fmtp」または「a = imageattr」で指定されたパラメーター）で許可されるものよりも下のストリームのプロパティを制限したい場合、その唯一の手段は「セクション6.3で説明されているように、a = rid "行をまとめて. 代わりに

セクション6.4で説明されているように、他のメカニズムで許可されている範囲を超えてストリームを制限すると、オファー側は対応する「a = rid」行を無視します. 

次のサブセクションでは、一般的に使用されるビデオコーデックを使用したこれらの相互作用を示します. これらの説明は、上で概説した相互作用の原則を例示するものであり、規範的ではありません. 

8.1. VP8形式パラメーターとの相互作用
[RFC7741]は、VP8コーデックの2つのフォーマットパラメータを定義します. どちらも受信機能の制限に対応し、送信制限を示すことはありません. 

8.1.1. max-fr-最大フレームレート
VP8の「max-fr」フォーマットパラメータは、この仕様で定義されている「max-fps」制限に対応しています. RTP送信者がこのフォーマットパラメータで定義されたフォーマットを使用してストリームを生成し、「a = rid」で定義された送信制限に「max-fps」パラメータが含まれている場合、送信されるストリームは2つの値のうち小さい方に準拠します. 

8.1.2. max-fs-VP8マクロブロックでの最大フレームサイズ
VP8の「max-fs」フォーマットパラメーターは、マクロブロックあたりのピクセル数（通常256）の変換係数により、このドキュメントで定義されている「max-fs」制限に対応しています. RTP送信者がこのフォーマットパラメータで定義されたフォーマットを使用してストリームを生成し、「a = rid」で定義された送信制限に「max-fs」パラメータが含まれている場合、送信されるストリームは2つの値のうち小さい方に準拠します; つまり、フレームあたりのピクセル数は以下を超えません. 

     min（rid_max_fs、fmtp_max_fs * macroblock_size）
        
このfmtpパラメータは、max-heightおよびmax-widthパラメータにも影響します. [RFC7741]のセクション6.1では、マクロブロックのフレームの幅と高さもint（sqrt（fmtp_max_fs * 8））よりも小さいことが必要です. したがって、送信されるストリームの最大幅は次のように制限されます. 

     min（rid_max_width、int（sqrt（fmtp_max_fs * 8））* macroblock_width）
        
同様に、ストリームの高さは次のように制限されます. 

     min（rid_max_height、int（sqrt（fmtp_max_fs * 8））* macroblock_height）
        
8.2. H.264形式のパラメーターとの相互作用
[RFC6184]は、H.264ビデオコーデックのフォーマットパラメータを定義します. これらのパラメータの大部分は、コーデックに依存しない制限に対応していません. 

o deint-buf-cap

o帯域内パラメーターセット

oレベルの非対称性を許可

o max-rcmd-nalu-size

o max-cpb

o max-dpb

oパケット化モード

o冗長PICキャップ

o sar-supported

o sar-understanded

o sprop-deint-buf-req

o sprop-init-buf-time

o sprop-interleaving-depth

o sprop-level-parameter-sets

o sprop-max-don-diff

o sprop-parameter-sets

o use-level-src-parameter-sets

H.264のmax-cpbおよびmax-dpb形式パラメーターはストリームの制限に対応しますが、これらはH.264コーデックの動作方法に固有であり、コーデックに依存しない同等のパラメーターがないことに注意してください. 

次のセクションで説明する[RFC6184]コーデック形式のパラメータは、受信機の機能の制限に対応し、送信の制限を示すことはありません. 

8.2.1. profile-level-idおよびmax-recv-level-ネゴシエートされたサブプロファイル
これらのパラメータには、[H264]の表A-1へのインデックスとして機能する「レベル」インジケータが含まれます. この表にはいくつかのパラメータが含まれており、そのいくつかはこのドキュメントで定義されている制限に対応しています. [RFC6184]は、H.264コーデックのフォーマットパラメータも定義しており、ネゴシエートされたレベルで示される最大値を増やす可能性があります. 以下のセクションでは、これらのパラメーター間の相互作用と、このドキュメントで定義されている制限について説明します. すべての場合において、議論されているH.264パラメータは、[H264]表A-1で示されているパラメータと、対応する「a = fmtp」行で示されているパラメータの最大値です. 

8.2.2. max-br / MaxBR-最大ビデオビットレート
H.264の「MaxBR」パラメータ（および同等の「max-br」フォーマットパラメータ）は、1000または1200の変換係数によって、この仕様で定義されている「max-bps」制限に対応しています. さまざまな状況で使用される要素の詳細については、[RFC6184]を参照してください. 

RTP送信者がこのフォーマットパラメータで定義されたフォーマットを使用してストリームを生成し、「a = rid」で定義された送信制限に「max-fps」パラメータが含まれている場合、送信されるストリームは2つの値のうち小さい方に準拠します- あれは：

     min（rid_max_br、h264_MaxBR * conversion_factor）
        
8.2.3. max-fs / MaxFS-H.264マクロブロックでの最大フレームサイズ
H.264の「MaxFs」パラメーター（および同等の「max-fs」フォーマットパラメーター）は、変換係数256（マクロブロックあたりのピクセル数）により、このドキュメントで定義されている「max-fs」制限にほぼ対応しています）. 

RTP送信者がこのフォーマットパラメータで定義されたフォーマットを使用してストリームを生成し、「a = rid」で定義された送信制限に「max-fs」パラメータが含まれている場合、送信されるストリームは2つの値のうち小さい方に準拠します- あれは：

     min（rid_max_fs、h264_MaxFs * 256）
        
8.2.4. max-mbps / MaxMBPS-最大マクロブロック処理率
H.264の「MaxMBPS」パラメーター（および同等の「max-mbps」形式パラメーター）は、変換係数256（マクロブロックあたりのピクセル数）によって、このドキュメントで定義されている「max-pps」制限にほぼ対応しています.  ）. 

RTP送信者がこのフォーマットパラメータで定義されたフォーマットを使用してストリームを生成し、「a = rid」で定義された送信制限に「max-pps」パラメータが含まれている場合、送信されるストリームは2つの値の小さい方に適合します- あれは：

     min（rid_max_pps、h264_MaxMBPS * 256）
        
8.2.5. max-smbps-最大デコード画像バッファー
H.264の「max-smbps」フォーマットパラメータは、「max-mpbs」フォーマットパラメータと同じように動作しますが、すべてのマクロブロックが静的マクロブロックであるという仮定の仮定の下に動作します. [RFC6184]のセクション8.1で説明されている変換係数を適用することによって処理され、この変換の結果はセクション8.2.4で説明されているように適用されます. 

8.3. 冗長フォーマットとペイロードタイプの制限
セクション4では、冗長RTPストリームを使用する冗長フォーマットが、RepairedRtpStreamId SDESアイテムまたは他のメカニズムを使用して、冗長RTPストリームをソースRTPストリームにバインドすることを指定しています. ただし、冗長性がソースRTPストリームに含まれることになる冗長RTPペイロード形式が存在します. この例は、「RTP Payload for Redundant Audio Data」[RFC2198]で、1つのソースストリームと1つ以上の冗長ストリームを同じRTPペイロードにカプセル化します. 通常のRTPペイロードタイプとしてソースエンコーディングと冗長エンコーディングを定義するフォーマットでは、「a = rid」制限の定義方法を検討する必要があります. 「a = rid」行の「pt =」パラメーターを使用して、冗長RTPペイロードタイプや個々のソースRTPペイロードタイプが制限の一部であるかどうかを示すことができます. 

例（SDP抜粋）：

      m =オーディオ49200 RTP / AVP 97 98 99 100 101 102
      a = mid：foo
      a = rtpmap：97 G711 / 8000
      a = rtpmap：98 LPC / 8000
      a = rtpmap：99 OPUS / 48000/1
      a = rtpmap：100 RED / 8000/1
      a = rtpmap：101 CN / 8000
      a = rtpmap：102 telephone-event / 8000
      a = fmtp：99 useinbandfec = 1; usedtx = 0
      a = fmtp：100 97/98
      a = fmtp：102 0-15
      a = ptime：20
      a = maxptime：40
      a = rid：5 send pt = 99,102; max-br = 64000
      a = rid：6 send pt = 100,97,101,102
        
ID = 6のRIDは、このRIDのペイロードタイプを100（冗長フォーマット）、97（G.711）、101（コンフォートノイズ）、および102（DTMFトーン）に制限します. つまり、RID 6にはRED形式を含めることができ、REDカプセル化、コンフォートノイズ、またはDTMFトーンなしでペイロードタイプ97および98、97を使用してソースメディアストリームのエンコーディングをカプセル化します. ペイロードタイプ98はRIDに含まれていないため、REDカプセル化の冗長情報として以外は送信できません. 97がptパラメータから除外される場合は、ペイロードタイプ97および98がREDカプセル化を介してのみ許可されることを意味します. 

9.将来のペイロードのフォーマットパラメータ
このメモで指定されたRID制限に一致するパラメーターを持つメディアタイプを定義する将来のRTPペイロード形式仕様の登録は、これらのRID制限の名前に一致する方法でそれらのパラメーターに名前を付ける必要があり（SHOULD）、どのメディアタイプパラメーターが何によって制限されているかを明示的に示す必要があります（SHOULD） RIDの制限. 

10.正式な文法
このセクションでは、このドキュメントで定義されている新しいメディアと「a = rid」属性のそれぞれについて、[RFC7405]で説明されている大文字と小文字を区別する拡張を使用した正式な拡張バッカスナウアフォーム（ABNF）[RFC5234]文法を示します. 

   rid-syntax =％s "a = rid：" rid-id SP rid-dir
                       [rid-pt-param-list / rid-param-list]
        
   rid-id = 1 *（alpha-numeric / "-" / "_"）alpha-numeric = <{{RFC4566}}で定義されている>>
        
   rid-dir =％s "送信" /％s "受信"
        
   rid-pt-param-list = SP rid-fmt-list *（ ";" rid-param）
        
   rid-param-list = SP rid-param *（ ";" rid-param）
        
   rid-fmt-list =％s "pt =" fmt *（ "、" fmt）
        
   fmt = <{{RFC4566}}で定義されている>>
        
rid-param = rid-width-param / rid-height-param / rid-fps-param / rid-fs-param / rid-br-param / rid-pps-param / rid-bpp-param / rid-depend- param / rid-param-other

   rid-width-param =％s "max-width" ["=" int-param-val]
        
   rid-height-param =％s "max-height" ["=" int-param-val]
        
   rid-fps-param =％s "max-fps" ["=" int-param-val]
        
   rid-fs-param =％s "max-fs" ["=" int-param-val]
        
   rid-br-param =％s "max-br" ["=" int-param-val]
        
   rid-pps-param =％s "max-pps" ["=" int-param-val]
        
   rid-bpp-param =％s "max-bpp" ["=" float-param-val]
        
   rid-depend-param =％s "depend =" rid-list
        
   rid-param-other = 1 *（alpha-numeric / "-"）["=" param-val]
        
   rid-list = rid-id *（ "、" rid-id）
        
int-param-val = 1 * DIGIT

   float-param-val = 1 * DIGIT ". " 1 * DIGIT
        
   param-val = *（％x20-58 /％x60-7E）
                       ; セミコロン以外の印刷可能な文字
        
11. SDPの例
注：同時放送シナリオで使用されるRIDの例については、[ID.ietf-mmusic-sdp-simulcast]を参照してください. 

11.1 多くのコーデックを使用する多くのバンドルされたストリーム
このシナリオでは、提供者はOpus、G.722、G.711およびDTMFオーディオコーデック、およびVP8、VP9、H.264（CBP / CHP、モード0/1）、H.264-SVC（SCBP / SCHP）をサポートします.  ）およびビデオのH.265（MP / M10P）. 8つのビデオミキサー（ミキサーへの）がサポートされています（1を送信し、7つのビデオストリームを受信）. 7つのビデオメディアセクション（最大解像度では1つのsendrecv、小さい解像度では6 recvonly）を提供します.  3つの異なる解像度. 解決策は次のとおりです. 

oアクティブなスピーカーには、720p解像度の1つの受信ストリームが提供されます. 

o 360p解像度の2つの受信ストリームが、前の2人のアクティブなスピーカーに提供されます. 

o 180p解像度の4つの受信ストリームが通話の他のユーザーに提供されます. 

注：以下に示すSDPは、「...」または挿入されたコメントのいずれかで示されているように、例を短くして集中させるために数行をスキップします. 

このシナリオのオファーを以下に示します. 

... m = audio 10000 RTP / SAVPF 96 9 8 0 123 a = rtpmap：96 OPUS / 48000 a = rtpmap：9 G722 / 8000 a = rtpmap：8 PCMA / 8000 a = rtpmap：0 PCMU / 8000 a = rtpmap ：123 telephone-event / 8000 a = mid：a1 ... m = video 10000 RTP / SAVPF 98 99100 101 102 103 104 105 106 107 a = extmap 1 urn：ietf：params：rtp-hdrext：sdes：rtp- stream-id a = rtpmap：98 VP8 / 90000 a = fmtp：98 max-fs = 3600; max-fr = 30 a = rtpmap：99 VP9 / 90000 a = fmtp：99 max-fs = 3600; max-fr = 30 a = rtpmap：100 H264 / 90000 a = fmtp：100 profile-level-id = 42401f; packetization-mode = 0 a = rtpmap：101 H264 / 90000 a = fmtp：101 profile-level-id = 42401f; packetization-mode = 1 a = rtpmap：102 H264 / 90000 a = fmtp：102 profile-level-id = 640c1f; packetization-mode = 0 a = rtpmap：103 H264 / 90000 a = fmtp：103 profile-level-id = 640c1f; packetization-mode = 1 a = rtpmap：104 H264-SVC / 90000 a = fmtp：104 profile-level-id = 530c1f a = rtpmap：105 H264-SVC / 90000 a = fmtp：105 profile-level-id = 560c1f a = rtpmap：106 H265 / 90000 a = fmtp：106 profile-id = 1; level-id = 93 a = rtpmap：107 H265 / 90000 a = fmtp：107 profile-id = 2; level-id = 93 a = sendrecv a = mid：v1（最大解像度）a = rid：1 send max-width = 1280; max-height = 720; max-fps = 30 a = rid：2 recv max-width = 1280; max-height = 720; max-fps = 30 ... m = video 10000 RTP / SAVPF 98 99 100 101 102 103 104 105 106 107 a = extmap 1 urn：ietf：params：rtp-hdrext：sdes：rtp -stream-id ...上記と同じrtpmap / fmtp ... a = recvonly a = mid：v2（中解像度）a = rid：3 recv max-width = 640; max-height = 360; max-fps = 15 ... m = video 10000 RTP / SAVPF 98 99 100 101 102 103 104 105 106 107 a = extmap 1 urn：ietf：params：rtp-hdrext：sdes：rtp-stream-id ...同じrtpmap / fmtp as上記... a = recvonly a = mid：v3（中解像度）a = rid：3 recv max-width = 640; max-height = 360; max-fps = 15 ...

11.2 スケーラブルなレイヤー
マルチパーティ会議内のセッションにスケーラブルなレイヤーを追加すると、選択的転送ユニット（SFU）がさらに柔軟になり、さまざまなレシーバーの帯域幅と機能に最適なソースからパケットを選択的に転送できます. 独立したサイマルキャストストリームとは異なり、スケーラブルなエンコーディングはレイヤー間に依存関係があります. RIDは、「依存」制限を使用してこれらの依存関係を表すために使用できます. 以下の例では、最高の解像度が（MRSTを使用して）2つのスケーラブルな時間レイヤーとして送信されます. サイマルキャストの使用法の詳細については、[ID.ietf-mmusic-sdp-simulcast]を参照してください. 

オファー：... m = audio ...前の例と同じ... ... m = video ...前の例と同じ... ...前の例と同じrtpmap / fmtp ... a = sendrecv a = mid：v1（最大解像度）a = rid：0 send max-width = 1280; max-height = 720; max-fps = 15 a = rid：1 send max-width = 1280; max-height = 720; max-fps = 30; depend = 0 a = rid：2 recv max-width = 1280; max-height = 720; max-fps = 30 a = rid：5 send max-width = 640; max-height = 360; max-fps = 15 a = rid：6 send max-width = 320; max-height = 180; max-fps = 15 a = simulcast：send rid = 0; 1; 5; 6 recv rid = 2 ....  ..mid：v2-v7の前の例と同じm = videoセクション... ...

12. IANAに関する考慮事項
この仕様は、[RFC4855]を更新して、フォーマットパラメータ（fmtp）名の選択、およびRID制限との関係について追加のガイダンスを提供します. 

12.1. 新しいSDPメディアレベル属性
このドキュメントでは、「rid」をSDPメディアレベル属性として定義しています. この属性は、「att-field（media level only）」の「Session Description Protocol（SDP）Parameters」でIANAによって登録されている必要があります. 

「rid」属性は、RTPセッションでRTPストリームのプロパティを識別するために使用されます. そのフォーマットはセクション10で定義されています. 

この属性の正式な登録情報は次のとおりです. 

連絡先の名前、メールアドレス、電話番号

IETF MMUSICワーキンググループmmusic@ietf.org +1 510 492 4080

属性名（SDPに表示されます）

取り除く

英語の長い形式の属性名

制限識別子

属性のタイプ（セッションレベル、メディアレベル、またはその両方）

メディアレベル

属性値が文字セット属性の影響を受けるかどうか

属性は文字セットに依存しません. 

属性の目的に関する1段落の説明

「rid」SDP属性を使用して、RTPセッション内のRTPストリームを明確に識別し、コーデックにとらわれない方法でストリームのペイロード形式パラメーターを、通常のペイロードタイプで提供されるものを超えて制限します. 

この属性の適切な属性値の仕様

有効な値は、[RFCXXXXX]のABNFによって定義されています

多重化（マルチプレクサ）カテゴリ

特殊な

12.2. RIDレベルのパラメーターのレジストリー
この仕様は、SDPパラメータレジストリ内に「rid attribute parameters」という名前の新しいIANAレジストリを作成します. 「a = rid」制限はIANAに登録されなければならず、[RFC4566]で指定されているSDPセッションレベルおよびメディアレベルの属性と同じルールの下に文書化されている必要があります. 

エンコードされたメディアの性質を変更する "a = rid"行のパラメーターは、ストリームに変更を適用した結果、メディアに影響を与える他のパラメーターに引き続き準拠するストリームになる形式でなければなりません. 言い換えれば、制限は常に定義を他の方法で許可されるもののサブセットになるように制限しなければならず、決してそれを拡張しないでください. 

[RFC5226]の「Specification Required」ポリシーに従って、新しい制限の登録が受け入れられます. 登録には、RIDパラメータ名と対応する仕様への参照を含める必要があります. 仕様自体には、次の情報が含まれている必要があります（すべてがレジストリに表示されるわけではありません）. 

o制限名（SDPに表示されます）

o制限の目的の説明

oこの制限に適切な属性値の指定

o制限のABNF定義

このドキュメントのセクション5で定義されている「a = rid」制限名の最初のセットを以下に示します. 

     RIDパラメータ名リファレンス
     ------------------ ---------
     最大幅[RFCXXXX]
     最大高さ[RFCXXXX]
     max-fps [RFCXXXX]
     max-fs [RFCXXXX]
     max-br [RFCXXXX]
     max-pps [RFCXXXX]
     max-bpp [RFCXXXX]
     依存[RFCXXXX]
        
将来のドキュメントで、文字列値を含むRIDレベルの制限を定義する必要があると考えられます. これらの拡張は、rid-param-otherに定義されたABNFに準拠するように注意する必要があります. 特に、これは、セミコロン、印刷できない文字、または文字列で127より大きいバイト値を許可する場合、そのような拡張機能がエスケープメカニズムを定義する必要があることを意味します. 

13.セキュリティに関する考慮事項
ほとんどのSDPパラメータと同様に、「a = rid」属性に対する整合性保護の提供に失敗すると、攻撃者が望ましくない方法でセッションを変更する方法を提供します. これは、受信者が受信したいよりも多くの量のデータを送信する実装になる可能性があります. ただし、一般に、「a = rid」属性は、ストリームを他の方法で許可されるもののサブセットに制限することしかできないため、値を変更しても、実装に送信されるよりも高い帯域幅のストリームを生成できません. このメカニズムはサポートされていません. 

RIDに使用される実際の識別子は不透明であることが期待されています. そのため、第三者によって観察された場合、機密性の高い情報が含まれることは想定されていません. 

14.謝辞
Cullen Jennings、Magnus Westerlund、Paul Kyzivatのレビューに感謝します. 将来のペイロードタイプの処理に関する情報を提供してくれたColin Perkinsに感謝します. 

15.リファレンス
15.1. 規範的な参考文献
[ID.ietf-avtext-rid] Roach、A.、Nandakumar、S. 、およびP. Thatcher、「RTP Stream Identifier Source Description（SDES）」、draft-ietf-avtext-rid-09（作業中）、 2016年10月. 

[RFC2119] Bradner、S. 、「要件レベルを示すためにRFCで使用するキーワード」、BCP 14、RFC 2119、DOI 10.17487 / RFC2119、1997年3月、<https://www.rfc-editor.org/info/ rfc2119>. 

[RFC3264] Rosenberg、J. およびH. Schulzrinne、「セッション記述プロトコル（SDP）を備えたオファー/アンサーモデル」、RFC 3264、DOI 10.17487 / RFC3264、2002年6月、<https://www.rfc-editor.org / info / rfc3264>. 

[RFC3550] Schulzrinne、H.、Casner、S.、Frederick、R. 、およびV. Jacobson、「RTP：A Transport Protocol for Real-Time Applications」、STD 64、RFC 3550、DOI 10.17487 / RFC3550、2003年7月、 <https://www.rfc-editor.org/info/rfc3550>. 

[RFC4566] Handley、M.、Jacobson、V. 、およびC. Perkins、「SDP：Session Description Protocol」、RFC 4566、DOI 10.17487 / RFC4566、2006年7月、<https://www.rfc-editor.org/ info / rfc4566>. 

[RFC4855] Casner、S. 、「RTPペイロード形式のメディアタイプ登録」、RFC 4855、DOI 10.17487 / RFC4855、2007年2月、<https://www.rfc-editor.org/info/rfc4855>. 

[RFC5234]クロッカー、D. 、エド. およびP. Overell、「構文仕様の拡張BNF：ABNF」、STD 68、RFC 5234、DOI 10.17487 / RFC5234、2008年1月、<https://www.rfc-editor.org/info/ rfc5234>. 

[RFC7405] Kyzivat、P. 、「ABNFでの大文字と小文字を区別する文字列のサポート」、RFC 7405、DOI 10.17487 / RFC7405、2014年12月、<https://www.rfc-editor.org/info/rfc7405>. 

[RFC8174] Leiba、B. 、「RFC 2119キーワードの大文字と小文字のあいまいさ」、BCP 14、RFC 8174、DOI 10.17487 / RFC8174、2017年5月、<https://www.rfc-editor.org/info/ rfc8174>. 

15.2. 参考情報
[H264] ITU-T勧告H.264、「汎用オーディオビジュアルサービス（V9）の高度なビデオコーディング」、2014年2月、<http://www.itu.int/rec/T-REC-H.264-201304-私>. 

[ID.ietf-mmusic-sdp-bundle-negotiation] Holmberg、C.、Alvestrand、H. 、およびC. Jennings、「Session Description Protocol（SDP）を使用したメディア多重化のネゴシエーション」、draft-ietf-mmusic-sdp- bundle-negotiation-51（作業中）、2018年5月. 

[ID.ietf-mmusic-sdp-simulcast] Burman、B.、Westerlund、M.、Nandakumar、S. 、およびM. Zanaty、「SDPおよびRTPセッションでのSimulcastの使用」、draft-ietf-mmusic-sdp-simulcast -12（作業中）、2018年4月. 

[ID.ietf-payload-flexible-fec-scheme] Zanaty、M.、Singh、V.、Begen、A. 、およびG. Mandyam、「柔軟な前方誤り訂正（FEC）用のRTPペイロード形式」、draft-ietf -payload-flexible-fec-scheme-07（作業中）、2018年3月. 

[RFC2198]パーキンス、C. 、コウベラス、I. 、ホドソン、O. 、ハードマン、V. 、ハンドラリー、M. 、ボロット、J. 、ベガガルシア、A. 、およびS.フォセパリシス、「RTPペイロードfor Redundant Audio Data」、RFC 2198、DOI 10.17487 / RFC2198、1997年9月、<https://www.rfc-editor.org/info/rfc2198>. 

[RFC4588] Rey、J.、Leon、D.、Miyazaki、A.、Varsa、V. 、およびR. Hakenberg、「RTP Retransmission Payload Format」、RFC 4588、DOI 10.17487 / RFC4588、2006年7月、<https：/ /www.rfc-editor.org/info/rfc4588>. 

[RFC5109] Li、A. 、編、「Generic Forward Error CorrectionのRTPペイロードフォーマット」、RFC 5109、DOI 10.17487 / RFC5109、2007年12月、<https://www.rfc-editor.org/info/rfc5109> . 

[RFC5226] Narten、T. およびH. Alvestrand、「RFCでIANAの考慮事項セクションを作成するためのガイドライン」、RFC 5226、DOI 10.17487 / RFC5226、2008年5月、<https://www.rfc-editor.org/info/ rfc5226>. 

[RFC6184] Wang、Y.、Even、R.、Kristensen、T.、R. Jesup、「RTP Payload Format for H.264 Video」、RFC 6184、DOI 10.17487 / RFC6184、2011年5月、<https：// www.rfc-editor.org/info/ rfc6184>. 

[RFC6236] Johansson、I. およびK. Jung、「Session Description Protocol（SDP）における一般的な画像属性のネゴシエーション」、RFC 6236、DOI 10.17487 / RFC6236、2011年5月、<https：//www.rfc-editor.  org / info / rfc6236>. 

[RFC7656] Lennox、J.、Gross、K.、Nandakumar、S.、Salgueiro、G. 、およびB. Burman、編、「リアルタイムの転送プロトコル（RTP）ソースのセマンティクスとメカニズムの分類法」、 RFC 7656、DOI 10.17487 / RFC7656、2015年11月、<https://www.rfc-editor.org/info/rfc7656>. 

[RFC7741] Westin、P.、Lundin、H.、Glover、M.、Uberti、J. 、およびF. Galligan、「VP8ビデオのRTPペイロード形式」、RFC 7741、DOI 10.17487 / RFC7741、2016年3月、<https ：//www.rfc-editor.org/info/rfc7741>. 

[RFC8285] Singer、D.、Desieneni、H. 、およびR. Even、編、「RTPヘッダー拡張の一般的なメカニズム」、RFC 8285、DOI 10.17487 / RFC8285、2017年10月、<https：//www.rfc -editor.org/info/rfc8285>. 

付録A.貢献者
次の個人は、このドキュメントに重要なテキストを提供しています. 

Peter Thatcher Googleメール：pthatcher@google.com

Mo Zanaty Cisco Systemsメール：mzanaty@cisco.com

Suhas NandakumarシスコシステムズEメール：snandaku@cisco.com

Bo Burman Ericssonメール：bo.burman@ericsson.com

バイロンカンペンMozillaメール：bcampen@mozilla.com

著者のアドレス

アダムローチモジラ

   メール：adam@nostrum.com
        