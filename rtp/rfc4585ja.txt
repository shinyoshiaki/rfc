RFCトランス
プライバシーポリシー
お問い合わせ先
イチジク
テックスツーイー
4585
RFC 4585 - リアルタイムトランスポート制御プロトコル(RTCP)ベースのフィー ドバック用の拡張RTPプロファイル(RTP/AVPF) 日本語訳
URL :https://tools.ietf.org/html/rfc4585
タイトル :RFC 4585 - リアルタイムトランスポート制御プロトコル（RTCP）ベースの フィードバック（RTP/AVPF）のための拡張RTPプロファイル
翻訳編集 : 自動生成
ネットワークワーキンググループ J. Ott コメントのお願い。4585 Helsinki University of Technology Category:Standards Track S. Wenger Nokia N. Sato Oki C. Burmeister J. Rey Matsushita 2006年7月        
リアルタイム伝送制御プロトコル（RTCP）ベースのフィードバック（RTP/AVPF）のための拡張RTPプロファイル

本メモの位置づけ

この文書は、インターネットコミュニティのためのインターネット標準トラックプロトコルを規定し、改善のための議論と提案を要請するものである。このプロトコルの標準化状態や状況については、最新版の "Internet Official Protocol Standards" (STD 1)を参照してください。このメモの配布は無制限である。

著作権について

Copyright (C) The Internet Society (2006).

概要

RTPを使用するリアルタイムメディアストリームは、ある程度、パケットロスに対す る回復力がある。受信者は、RTCP (Real-time Transport Control Protocol)の基本メカニズムを使用して、パケット受信統計 を報告し、送信者が送信動作を中期的に適応させることができる。これは、フィードバックとフィードバックベースのエラー修復のための唯一の手段である（いくつかのコーデック固有のメカニズムの他に）。この文書では、受信者が送信者に対して統計的により迅速なフィードバックを提供し、その結果、短期的な適応と効率的なフィードバックに基づく修復メカニズムの実装を可能にするオーディオビジュアルプロファイル（AVP）の拡張を定義しています。この早期フィードバックプロファイル（AVPF）は、RTCPのAVP帯域幅の制約を維持し、大規模なグループへのスケーラビリティを保持する。

目次

   1.はじめに.........................................................  ..... 3
      1.1. 定義................................................ 3
      1.2. 用語................................................ 5
   2.RTPおよびRTCPパケットフォーマットとプロトコルの動作............... 6
      2.1. RTP.................................................  ....... 6
      2.2. 基礎となるトランスポートプロトコル............................. 6
   3.RTCPフィードバックのルール......................................... 7
      3.1. 複合RTCPフィードバックパケット............................. 7
      3.2. アルゴリズムの概要.......................................... 8
      3.3. 動作モード......................................... 9
      3.4. 定義とアルゴリズムの概要........................ 11
      3.5. AVPFRTCPスケジューリングアルゴリズム............................ 14
           3.5.1. 初期化..................................... 15
           3.5.2. 早期フィードバック送信........................ 15
           3.5.3. 通常のRTCP送信.......................... 18
           3.5.4. その他の考慮事項............................... 19
      3.6. グループサイズに関する考慮事項.......................... 20
           3.6.1. ACKモード........................................... 20
           3.6.2. NACK Mode ..........................................20
      3.7. 決定ステップの要約................................. 22
           3.7.1. 一般的なヒント...................................... 22
           3.7.2. メディアセッション属性........................... 22
   4.SDPの定義..............................................  ..23
      4.1. プロファイルの識別.................................... 23
      4.2. RTCPフィードバック機能属性........................ 23
      4.3. RTCP帯域幅修飾子.................................. 27
      4.4. 例.................................................  .27
   5.AVPエンティティとAVPFエンティティの相互作用と共存.......... 29
   6.RTCPフィードバックメッセージのフォーマット............................... 31
      6.1. フィードバックメッセージの一般的なパケット形式................ 32
      6.2. Transport Layer Feedback Messages......................... 34
           6.2.1. Generic NACK ....................................... 34
      6.3. Payload-Specific Feedback Messages........................ 35
           6.3.1. 画像喪失表示（PLI）...................... 36
           6.3.2. スライス損失表示（SLI）........................ 37
           6.3.3. 参照画像選択表示（RPSI）...... 39
      6.4. アプリケーション層フィードバックメッセージ....................... 41
   7.早期フィードバックと輻輳制御.......................... 41
   8.セキュリティに関する考慮事項........................................ 42
   9.IANAの考慮事項............................................ 43
   10.謝辞.............................................. 47
   11.参考文献...............................................  ..... 48
      11.1. 規範的参考文献..................................... 48
      11.2. 有益な参考資料................................... 48

1.はじめに
RTPを使用するリアルタイムメディアストリームは、ある程度、パケットロスに対する回復力がある。RTP [1]は、送信者に存在する順序とタイミングを復元して、受信者にメディアストリームを適切に再現するために、必要なすべてのメカニズムを提供する。これにより、送信者は、中期的(数秒～数分)に、コーディングスキームと 送信動作を、観測されたネットワークサービス品質(QoS)に適合させることができ る。ただし、一部のペイロード固有のメカニズム [6]を除き、RTPは、送信者がメディアストリームを直ちに修復できるようなタイムリーなフィードバックを提供しない。再送信、遡及的な回送エラー修正 (FEC) 制御、一部のビデオコーデックのメディア固有のメカニズム (参照画像の選択など) によっても可能である。

エラー回復力を向上させるためにRTPで使用できる現在のメカニズムには、 オーディオ冗長性コーディング[13]、ビデオ冗長性コーディング[14]、RTPレベルFEC [11]、 より堅牢なメディアストリーム伝送に関する一般的な考察[12]がある。これらのメカニズムは、プロアクティブに適用することができる (それによって、所定のメディアストリームの帯域幅を増加させる)。または、ラウンドトリップタイム(RTT)が小さい十分に小さなグループ では、送信者は、上記のメカニズムおよび/またはメディアエンコード固有のアプローチを使用して、オンデマンドで修復を実行することもできる。小さなグループ」と「十分に小さなRTT」は、両方ともアプリケーションに大きく依存することに留意されたい。

本文書は、[1]と[2]に基づいて、2つの修正/追加を行うことで、最小限の制御 を伴う音声およびビデオ会議用の修正RTPプロファイルを規定する。第1に、タイムリーなフィードバックを実現するために、Early RTCPメッ セージの概念と、小規模なマルチキャストグループで低遅延フィードバックを可能に する（大規模なグループでのフィードバックインプロージョンを防止する）アルゴ リズムを導入している。ポイントツーポイントのシナリオを特に考慮しています。次に、RTCPペイロードで送信するための、少数の汎用フィードバックメッセージと、コーデックおよびアプリケーション固有のフィードバック情報のフォーマットが定義されています。

1.1.定義
RTP/RTCP [1]および「最小限の制御を伴う音声およびビデオ会議のための RTPプロファイル」[2]の定義が適用される。また、本書では以下の定義を使用する。Early RTCPモード。Early RTCPモード: メディアストリームの受信者は、多くの場合（ただし、常にではな い）、関心のあるイベントを発生直後に送信者に報告することができる動作モ ードである。Early RTCPモードでは、RTCPパケットは本書で定義されるタイミング規則に従って送信される。

Early RTCPパケット。Early RTCPパケットとは、[1]のスケジューリングアルゴリズムに従った場合に許 容されるよりも早く送信されるパケットで、その理由は受信者が観測した「イベント」 である。Early RTCPパケットは、即時フィード バックおよびEarly RTCPモードで送信することができる。本書では、Early RTCPパケットを送信することをEarly Feedbackの送信とも呼 ぶ。

イベント。パケットロスやパケット受信、フレームロスなど、送信者が関心を持つ（可能性のある）メディアストリームの受信者によって行われる観測。-- したがって、フィードバックメッセージによって送信者に報告されることが有用である。

フィードバック（FB）メッセージ。本書で定義されるRTCPメッセージは、RTCP受信者レポート（RR）で伝送される長 期受信者状態情報に加えて、受信機で観察されるイベントに関する情報をメディアスト リーム送信者に伝送するために使用される。本書では、わかりやすくするために、フィードバックメッセージのことをFBメッセ ージと呼ぶ。

フィードバック（FB）閾値。FB閾値は、即時フィードバックモードと早期RTCPモードの間の移行を示す。マルチパーティシナリオの場合、FB閾値は、平均して、各受信者が送信者に各イベントを直ちに、つまり、定期的なRTCP間隔を待つことなくEarly RTCPパケットで報告できる最大グループサイズを示す。この閾値は、提供されるフィードバックのタイプ、ネットワークQoS（パケットロス確率や分布など）、使用中のコーデックやパケット化スキーム、セッション帯域幅、アプリケーション要件に大きく依存する。アルゴリズムは、すべての送信者および受信者がこの閾値に同じ値で合意することに依存しない ことに注意してください。これは、単にアプリケーション設計者に概念的なガイダンスを提供することを意図しており、いかなる計算にも使用されない。明確化のため、本書ではフィードバック閾値という用語をFB閾値と呼ぶ。

イミディエイトフィードバックモード。メディアストリームの各受信者が、統計的に、関心のある各イベントをメディアストリームの送信者に直ちに報告することができる動作モード。即時フィードバックモードでは、RTCP FBメッセージは、本書で定義されるタイミング規則に従って伝送される。

メディアパケット。メディアパケットとは、RTPパケットのことです。

通常のRTCPモード。FBメッセージの優先送信を許可しない動作モード。その代わり、RTCPメッセージは[1]の規則に従って送信される。ただし、このようなRTCPメッセージには、本書で定義されているように、フィードバック情報を含めることができる。

通常のRTCPパケット。Early RTCPパケットとして送信されないRTCPパケット。

RTPセンダー（RTP sender）。RTP送信者は、メディアパケットとRTCPパケットを送信し、通常パケットとEarly RTCP（つまり、フィードバック）パケットを受信するRTPエンティティであ る。RTP送信者は論理的な役割であり、同じRTPエンティティが同時にRTP受信 者として動作する可能性があることに注意。

RTP受信機。RTP受信機は、メディアパケットとRTCPパケットを受信し、通常パケットとEarly RTCP（つまり、フィードバック）パケットを送信するRTPエンティティである。RTP受信者は論理的な役割であり、同じRTPエンティティが同時にRTP送信 者として動作する可能性があることに注意。

1.2.用語の説明
本文書におけるキーワード「MUST」「MUST NOT」「REQUIRED」「SHALL」「SHALL NOT」「SHOULD」「SHOULD NOT」「RECOMMENDED」「MAY」「OPTIONAL」は RFC 2119 [5] に記述されているように解釈されるものとします。

2.RTPとRTCPのパケットフォーマットとプロトコルの動作
2.1.RTP
このプロファイルには，以下に示すルールを除き，[2]で定義されたルールも適用される。

RTCPパケットタイプ。2つのRTCPパケットタイプが追加登録され、フィードバック情報を伝えるための対応するFBメッセージは、このメモのセクション6で定義されています。

RTCPレポート間隔。本文書は、RTCPレポート間隔に影響を与える3つの動作モードについて説明する （本メモのセクション3.2参照）。通常RTCPモードでは、同じRTPエンティティからの2つのRTCPレポート間の推奨最 小間隔（5秒）を除き、[1]のすべての規則が適用される。即時フィードバックおよび早期RTCPモードでは、2つのRTCPレポート間の最小間隔である 5秒は削除され、さらに、FBメッセージ（このメモのセクション4で定義）を含む RTCPパケットが送信される場合、このメモのセクション3に指定されたルールが適用される。

1]に記載されている規則は、異なるパラメータを指定するセッション記述に よって上書きされる可能性がある(たとえば、送信者および受信者のそれぞれについて RTCPに割り当てられた帯域幅の共有)。セッション記述プロトコル(SDP) [3]を使用して定義されたセッションには、[4]の規則が 適用される。

輻輳制御。2]で詳述したのと同じ基本ルールが適用される。この後、セクション7では、フィードバックとFBメッセージに対する送信者の反応の影響についてさらに考察する。

2.2.基礎となるトランスポートプロトコル
RTPは、UDPやデータグラム輻輳制御プロトコル(DCCP)など、信頼性のない トランスポートプロトコルの上で使用することを意図している。このセクションでは、このメモに規定されているRTCPフィードバックによって導入 された、プレーンなRTP操作以外の仕様について簡単に説明する。

UDP。UDP は，ポイント・ツー・ポイントおよびマルチキャスト通信において，データグラムのベストエフォート型配信を提供します．UDPは輻輳制御やエラー修復をサポートしない。このメモで定義されたRTCPベースのフィードバックは、限定的なエラー修復の最小限のサポートを提供することが可能である。RTCPフィードバックは十分に小さな時間スケール（RTTのオーダー）で動作することが保証されていないため、RTCPフィードバックは輻輳制御のサポートには適していない。このメモでは、ユニキャストとマルチキャストの両方の動作について説明します。

DCCP。DCCP [19]は、ユニキャスト通信において、輻輳は制御されるが信頼性の低いデータグラムフローを提供する。TCP Friendly Rate Control (TFRC) に基づく輻輳制御 (CCID 3) により、DCCP は特にオーディオおよびビデオ通信に適しています。DCCPの確認応答メッセージは、受信したデータグラムと見逃したデータグラムに関する（したがって輻輳に関する）詳細なフィードバック報告を提供することができます。

DCCP上でRTPを実行する場合、輻輳制御はDCCPレイヤーで実行されるため、 RTPレイヤーに追加のメカニズムは必要ない。さらに、RTCPフィードバック対応の送信者は、より頻繁なDCCPベースのフィー ドバックを活用することができるため、受信者は、適切な場合に（追加の）一般 的なフィードバックメッセージの使用を控えることができる。

3.RTCP フィードバックに関する規則
3.1.複合RTCP フィードバックパケット
本書で説明するRTCPベースのフィードバックは、2つのコンポーネントで構成される。

o ステータスレポートは、送信者レポート（SR）/受信者レポート（RR）パケットに 含まれ、複合RTCPパケット（ソース記述（SDES）およびその他のメッセージも含 まれる）の一部として一定間隔で送信される。

o メディアストリームの特定のピースの損失または受信を示す（または受信したデータに関する他の何らかの即時フィードバックを提供する）、本文書で定義されるFBメッセージ。FBメッセージの送信に関するルールは、本文書で新たに導入される。

RTCP FBメッセージは、単なるRTCPパケットタイプの1つである（セクション4参照）。したがって、複数のFBメッセージを1つの複合RTCPパケットにまとめてもよいし、他のRTCPパケットと組み合わせて送信してもよい（MAY）。

本文書で定義されているFBメッセージを含む複合RTCPパケットは、[1]で定義されている順序でRTCPパ ケットを含まなければならない（MUST）。

o [1]のセクション9.1に従ってRTCPパケットが暗号化される場合、存在しな ければならないオプションの暗号化プレフィックス o 必須のSRまたはRR。

o CNAME項目を含まなければならない必須のSDES。他のすべてのSDES項目は 任意である。

FBメッセージは、[1]で定義されたRRおよびSDES RTCPパケットの後に、複合パケットに 配置されなければならない（MUST）。他のRTCP拡張機能に関する順序は定義されていない。

本書では、フィードバックパケットを搭載した2種類の複合RTCPパケットを使用する。

a) 最小限の複合RTCPフィードバックパケット

必要であれば暗号化プレフィックス、正確に1つのRRまたはSR、CNAME項目のみが存 在する正確に1つのSDES、およびFBメッセージ(複数可)である。これは、フィードバックを伝えるために送信されるRTCPパケットのサイズを 最小化し、RTCP帯域幅の制限に準拠しながら、フィードバックを提供する頻度 を最大化するためである。

このパケット形式は、RTCP FBメッセージがEarly RTCPパケットの一部として送信される場 合、常に使用されるべきである（SHOULD）。このパケットタイプは、本書では最小複合RTCPパケットと呼ばれる。

b) （フル）複合RTCPフィードバックパケット

完全な）複合RTCPフィードバックパケットは、任意の数のRTCPパケット（追加 RR、さらなるSDES項目など）を含んでもよい[MAY]。上記の順序付けルールに従わなければならない(MUST)。

このパケットフォーマットは、RTCP FBメッセージが通常のRTCPパケットの一部として、 または通常のRTCPモードで送信される場合は常に使用されなければならない（MUST）。また、即時フィードバックまたは早期RTCPモードでRTCP FBメッセージを送信するために使用 してもよい（MAY）。このパケットタイプは、本書ではフルコンパウンドRTCPパケットと呼ばれる。

FBメッセージを含まないRTCPパケットは、非FB RTCPパケットと呼ばれる。このようなパケットは、[1]のフォーマット規則に従わなければならない（MUST）。

3.2.アルゴリズムの概要
FBメッセージはRTCP制御ストリームの一部であるため、RTCP帯域幅の制約を受け る。これは特に、受信側で観測されたイベントを送信側に即座に報告することができない可能性があることを意味する。ただし、受信側のユーザーが認識するメディア品質や、メディアストリームの修復を実現するために必要なコストの観点から、送信者に与えられるフィードバックの価値は通常、時間の経過とともに低下する。

RTP [1]および一般的に使用されるRTPプロファイル[2]は、複合RTCPパ ケットを送信する場合の規則を規定している。本文書は、アプリケーションがイベント(RTPパケットの損失や受信など) をタイムリーに報告できるように、また、FBメッセージを使用するアルゴリズムに 対応できるように、これらの規則を修正する。

修正されたRTCP送信アルゴリズムは、以下のように概説できる。FBメッセージを伝達する必要がない限り、RTP [1]の規則に従って複合RTCPパ ケットを送信する。ただし、RTCPレポート間の最小間隔（5秒）は強制されな い。したがって、RTCPレポート間の間隔は、平均RTCPパケットサイズと、RTP/RTCP エンティティが使用できるRTCP帯域幅シェアからのみ導き出される。オプションで、通常のRTCPパケット間の最小間隔を強制することができる。

受信者がFBメッセージを送信する必要性を検出した場合、次の通常のRTCP報告間隔（上記の通常のRTCPアルゴリズムに従ってスケジュールされる）よりも早くそうすることができる。フィードバック抑制は、マルチパーティセッションにおけるフィードバックの内破を 避けるために使用される。受信者は、同じイベントを報告する他の受信者からの対応するFBメッセージを見るかどうかをチェックするために、（短い）ランダムディザリングインターバルの間待機する。ポイントツーポイントセッションの場合、そのような遅延はないことに注意してください。他のメンバーから対応するFBメッセージを受信した場合、この受信機はFBメッセージの送信を控え、通常のRTCP送信スケジュールに従い続ける。他のメンバーからの対応するFBメッセージをまだ見ていない場合、受信機はEarly feedbackの送信が許可されているかどうかをチェックする。Earlyフィードバックの送信が許可されている場合、受信者はFBメッセージを最小限の複合RTCPパケットの一部として送信する。アーリーフィードバックの送信許可は、この受信機が送信した前回のRTCPパケットの種類と、前回のアーリーフィードバックメッセージの送信時刻に依存する。

FBメッセージは、[1]に従って（5秒の下限を除いて）一定間隔で送信される完全複合RTCPパケットの一部として送信されることもある。

3.3.動作モード
RTCPベースのフィードバックは、以下に説明する3つのモード（図1）のいずれかで動作する可能性があります。動作モードは、受信者が平均してすべてのイベントを送信者にタイムリーに報告できるかどうかを示すだけであり、モードはFBメッセージの送信をスケジューリングするために使用するアルゴリズムに影響を与えるものではありません。

また、受信品質とRTPセッションのローカル監視状態によっては、個々の受 信者が現在の動作モードに関する共通の認識に同意しない(する必要がない)場合があ る。

a) 即時フィードバックモード。このモードでは、グループサイズがFB閾値以下であるため、各受信側には、意図した目的のためにRTCPフィードバックパケットを送信するのに十分な帯域幅が確保される。つまり、各受信側には、事実上「即時」RTCPフィードバックパケットによって各イベントを報告するのに十分な帯域幅がある。

グループサイズの閾値は、使用するフィードバックの種類（ACK対NACKなど）、帯域幅、パケットレート、パケットロス確率と分布、メディアタイプ、コーデック、報告すべきイベント（フレーム受信、パケットロスなど）の（最悪のケースまたは観測された）頻度など（ただし、必ずしもこれに限らない）多数のパラメータの関数である。

概算として、Nを受信機で間隔Tごとに報告されるイベントの平均数、Bをこの特定の受信機のRTCP帯域幅割合、Rを平均RTCPパケットサイズとすると、N<=B*T/Rである限り、受信機は即時フィードバックモードで動作します。

b) 早期RTCPモード。このモードでは、グループサイズと他のパラメータにより、各受信者が報告する価値のある（または報告が必要な）各イベントに対応することができなくなる。しかし、送信者がメディアストリームの送信を適宜適応させ、全体的なメディア再生品質を向上させることができるように、十分な頻度でフィードバックを与えることは可能である。

上記の表記法を使用すると、Early RTCPモードは、N > B*T/Rを「下限」として大まかに特徴付けることができる。上限の推定はより困難である。N=1を設定すると、任意のRおよびBについて、報告されるイベントの平均間隔として間隔T = R/Bが得られる。この情報は、RTCPパケットの早期送信が有効かどうかを判断するためのヒントとして利用することができる。

c) 通常のRTCPモード。あるグループサイズ以上では、受信者から個々のイベントに対するフィードバックを提供することは、もはや全く有用ではありません--フィードバックが提供され得る時間スケールのため、および/または大きなグループにおいて送信者が個々のフィードバックに反応する機会がもうないためです。

このモードが始まる正確なグループサイズの閾値は指定できないが、明らかに、この境界は、上記項目b)で指定したEarly RTCPモードの上限に一致する。

本書で説明するフィードバックアルゴリズムは滑らかにスケールするため、グループ内の各FB閾値の正確な値について参加者間で合意する必要はない。したがって、これらすべてのモード間の境界はソフトである。

     ACK
   feedback
     V
     :<- - - -  NACK feedback - - - ->//
     :
     :   Immediate   ||
     : Feedback mode ||Early RTCP mode   Regular RTCP mode
     :<=============>||<=============>//<=================>
     :               ||
    -+---------------||---------------//------------------> group size
     2               ||
      Application-specific FB Threshold
         = f(data rate, packet loss, codec, ...)
図1：動作モード

先に述べたように、それぞれのFB閾値は、多くの技術的パラメータ（コーデック、伝送、使用されるフィードバックの種類など）に依存するが、それぞれのアプリケーションシナリオにも依存する。3.6 節では、これらの閾値を推定するための有用なヒント（ただし、正確な計算ではない）を提供する。

3.4.定義とアルゴリズムの概要
受信機ごとに保持する必要のある状態情報は以下の通りである（主に[1]から引用）。ただし、すべての変数（下記h）は各受信機で独立して計算されます。そのため、任意の時点で局所的な値が異なる可能性がある。

a) 「sender」をRTPセッションのアクティブな送信者の数とする。

b) 「members」をRTPセッションの受信者数の現在の推定値とする。

c) tnとtpを、タイマー再考の前に計算された次回（最終）のRTCP RR送信予定時刻とする。

d) [1]に従って、RTCPパケット間の最小間隔をTminとする。1]とは異なり、最初のTminは、最初のRTCPパケットを送信する前にグループサイズのサンプリングを行うために1秒に設定されています。最初のRTCPパケットを送信した後、Tminは0に設定される。

e) T_rrを、定期的に送信されるRTCPパケットを送信した後に、受信機が次の定期的なRTCPパ ケットの送信をスケジュールする間隔とする。この値は、[1]の規則に従って得られるが、Tminは本書で定義される値である。T_rr = T（[1]で定義された「計算間隔」）、tn = tp + T。T_rrは常に、（再考またはtnを決定するために）計算された最後のTの値を指す。T_rrは、本書ではRegular RTCP intervalとも呼ばれる。

f) 報知すべき事象が受信機で検出された時刻をt0とする。

g) T_dither_maxを、マルチパーティセッションの崩壊を防ぐためにRTCPフィー ドバックパケットを追加で遅延させてもよい[MAY]最大間隔とする。T_dither_maxの値は、 T_rrに基づいて動的に計算される (または将来、すべてのRTP受信機に共通の別のメカニズムで指定され る可能性がある)。ポイントツーポイントセッション(つまり、グループサイズの変化が予想され ないちょうど2人のメンバーを持つセッション、たとえば、ユニキャストストリーミン グセッション)の場合、T_dither_maxは0に設定される。

h) T_max_fb_delay を、イベントへのフィードバックが有用であるために送信者にレ ポートバックされる必要がある上限とする。この値はアプリケーションに依存し、本書では定義していない。

i) フィードバックパケットがスケジュールされる時刻をteとする。

j) 時刻t0のイベントに対応したFBメッセージの送信にかかる実際の（ランダムな）遅延をT_fdとする。

k) allow_earlyを、受信機が次の定期的なRTCP間隔tnの前にFBメッセージを送信してよいかどうかを示すブーリアン変数とする。allow_early は、Early フィードバック送信後に FALSE に設定され、次の定 期 RTCP 送信が行われると同時に TRUE に設定される。

l) [1]で定義されているように、avg_rtcp_sizeをRTCPパケットサイズの移動平均とする。

m) T_rr_intervalは、通常のRTCPパケット間で使用されるオプションの最小間隔とする。T_rr_interval == 0の場合、この変数はRTCPフィードバックアルゴリズムの全体的な動作に影響を与えない。T_rr_interval !=0の場合、次の通常RTCPパケットは最後の通常RTCP送信のT_rr後（すなわち、tp+T_rr）にはスケジュールされない。その代わり、次の通常RTCPパケットは、最後の通常RTCP送信の少なくともT_rr_interval後まで、つまりtp+T_rr_interval以降にスケジュールされるように遅延される。T_rr_intervalはT_rrとtpの計算には影響せず、tp+T_rr_interval以前に送信予定の通常RTCPパケットは、例えば、FBメッセージが含まれない場合、抑制されることに注意する。T_rr_intervalは、Early RTCPパケットの送信スケジューリングには影響を与えない。

注: T_rr_intervalを独立変数として提供することは、アプリケーションの必要に応じて Regular RTCPフィードバック(および帯域幅の消費)を最小限に抑え、さらに、より頻繁なEarly RTCPパケットを使用 してタイムリーなフィードバックを提供できるようにすることを目的としてい ます。RTCP帯域幅の削減はEarlyフィードバックの頻度にも影響するため、RTCP帯域幅全体を削減しても、この目標は達成され ない。

n) t_rr_lastを、最後の通常RTCPパケットがスケジュールされて送信された時点、すなわちT_rr_intervalのために抑制されていない時点とする。

o)AVPFのエンティティが過去のFBメッセージを保存する時間窓をT_retentionとする。これは、フィードバックイベント自体に気づく前に他のエンティティからFBメッセージを受信したエンティティに対しても、フィードバック抑制が機能することを保証するためのものである。T_retention は、少なくとも 2 秒に設定しなければならない (MUST)。

p) 受信機が非アクティブとみなされるためのタイムアウト値をM*Tdとする（[1]で定義されている通り）。

受信機で報告するイベントのフィードバック状況は、以下の図2に描かれています。時刻t0に、このようなイベント（たとえば、パケットロス）が受信機で検出されます。受信機は、現在の帯域幅、グループサイズ、および他のアプリケーション固有のパラメータに基づいて、FBメッセージを送信者に送り返す必要があることを決定します。

マルチパーティセッションにおけるフィードバックパケットの爆発を避けるために、受 信側はRTCPフィードバックパケットの送信をランダムな時間T_fdだけ遅らせなければ ならない(乱数は区間[0, T_dither_max]に均一に分散されている)。この場合、複合RTCPパケットの送信は、te = t0 + T_fdにスケジュールされなければならない。

T_dither_maxパラメータは、通常のRTCP間隔T_rrから派生したもので、グループ サイズに基づいている。すべてのRTP受信者がT_dither_maxを計算するために同じメカニズムを使用す ることが保証される場合、将来のドキュメントでT_dither_maxの他の計算方法 (たとえば、RTTに基づく)を指定することも可能である。

特定のアプリケーションシナリオのために、受信機は FB メッセージの許容ローカル遅延の上限を決定することができる。T_max_fb_delay とする。T_dither_max の事前推定または実際の計算により、この上限を侵害してもよいことが示された場合（例えば、T_dither_max > T_max_fb_delay の場合）、受信機は達成可能なゲインが不十分と考えられるのでフィードバックを全く送信しないことに決定してもよい。

Early RTCPパケットがスケジュールされた場合、次のRegular RTCPパケットのタイムスロットは、それに応じて、新しいtn（tn=tp+2*T_rr）およびその後の新しいtp（tp=tp+T_rr）を持つように更新されなければならない[MUST]。これは、アーリーフィードバックを使用する短期的な平均RTCP帯域幅が、アーリーフィードバックを使用しない場合の帯域幅を超えないようにするためである。

             event to
             report
             detected
                |
                |  RTCP feedback range
                |   (T_max_fb_delay)
                vXXXXXXXXXXXXXXXXXXXXXXXXXXX     ) )
   |---+--------+-------------+-----+------------| |--------+--->
       |        |             |     |            ( (        |
       |       t0            te                             |
       tp                                                   tn
                 \_______  ________/
                         \/
                   T_dither_max

図2：Early RTCPスケジューリングに関するイベントレポートとパラメータ

3.5.AVPF RTCP スケジューリングアルゴリズム
S0を（S人の送信者のうち）アクティブな送信者とし、Rをこれらの受信者のうちの1人とする受信者の数をNとする。

R が、フィードバック機構の使用が現在のコンステレーションで妥当であることを検証したと仮定する（これは、アプリケーションに大きく依存するため、この文書では規定しない）。

また、T_rr_intervalは、通常RTCPパケット間の最小間隔を強制しない場合は0、またはアプリケーションから与えられた意味のある値に設定されると仮定する。この値は、通常のRTCPパケット間の最小間隔を示す。

これにより、受信機Rは、1つ以上のFBメッセージを最小または完全な複合RTCPパケットとして送信するために、以下の規則を使用しなければならない（MUST）。

3.5.1.初期設定
初期値として、Rはallow_early = TRUE、t_rr_last = NaN (Not-a-Number, すなわち、有効な時刻と区別できる何らかの無効な値)を設定しなけれ ばならない（MUST）。

さらに、Tminの初期値を除き、[1]に従ったRTCP変数の初期化が適用される。ポイントツーポイントセッションの場合、Tminの初期値は0に設定され、マルチパーティセッションの場合、Tminは1.0秒に初期化される。

3.5.2.早期フィードバック送信
Rが最後の通常RTCP RRパケットの送信をtpにスケジュールし（このパケットをtpに送信または抑制し）、次の送信をtn = tp + T_rrにスケジュールしたと仮定する（［1］による再考の可能性を含む）。また、最後の正規RTCPパケット送信はt_rr_lastで発生したと仮定する。

そして、アーリーフィードバックアルゴリズムは、以下の手順で構成される。

1.時間t0において、Rは、例えば、メディア「ユニット」がACKまたはNACKされる必要があるため、1つ以上のFBメッセージを送信する必要性を検出し、フィードバック情報を提供することが送信者にとって潜在的に有用であると見なす。

2.Rはまず、送信予定の1つ以上のFBメッセージを含む複合RTCPパケット（EarlyまたはRegular RTCPパケットとして）がすでに存在するかどうかをチェックする。

2a) その場合、新しいFBメッセージはスケジュールされたパケットに含まれ なければならない[MUST]。その際、利用可能なフィードバック情報は、可能な限り少ないFBメッセージを生成 するようにマージされるべきである[SHOULD]。これで、直ちに実行すべきアクションのコースが完了した。

2b) 複合RTCPパケットが既に送信予約されていない場合、新しい（最小または完全）複合RTCPパ ケットを作成し、T_dither_maxの最小間隔を以下のように選択しなければならない（MUST）。

i) セッションがポイントツーポイントセッションである場合

T_dither_max = 0.

ii) セッションがマルチパーティセッションである場合。

T_dither_max = l * T_rr

をl=0.5とした。

T_dither_maxの値は、別の方法で計算してもよい(たとえば、RTTに基づいて)が、 その場合は将来のドキュメントで指定しなければならない[MUST]。このような将来の仕様は、すべてのRTP受信者が同じメカニズムを使用して T_dither_maxを計算することを保証しなければならない[MUST]。

上記のT_dither_maxの値は最小値です。アプリケーション固有のフィードバックを考慮すると、T_dither_maxをこの値より大きくすることが有意義である場合がある。これは実装者の裁量に委ねられる。

3.次に、Rは次の通常RTCPパケットがt0にトリガされたEarly RTCPパケットの時間範囲内かどうか、つまり、t0 + T_dither_max > tnであるかどうかを確認しなければならない（MUST）。

3a) その場合、Early RTCPパケットをスケジュールしてはならない[MUST NOT]。その代わり、FBメッセージはtnにスケジュールされた通常のRTCPパケットに含ま れるように保存されなければならない[MUST]。これで、直ちに実行されるアクションのコースが完了する。

3b) それ以外の場合は、以下のステップを実施する。

4.Rは、Early RTCPパケットの送信が許可されているかどうか（allow_early == TRUE）を確認しなけれ ばならない。

4a) allow_early == FALSEの場合、Rは次に予定されている通常のRTCPパケットの時刻を確認しなければならない（MUST）。

1.tn - t0 < T_max_fb_delayの場合、報告が遅れたにもかかわらず、送信者にとって フィードバックはまだ有用である可能性がある。したがって、Rはtnで送信するための通常のRTCPパケットに含まれるRTCP FBメッセージを作成してもよい（MAY）。

2.そうでない場合、RはRTCP FBメッセージを破棄しなければならない（MUST）。

これで当面の対応方針は完了です。

4b) allow_early == TRUEであれば、Rはte = t0 + RND * T_dither_maxでEarly RTCPパケットをスケジュールしなければならない （RNDは0と1の間に均等に分布する疑似ランダム関数）。

5.Rは、RTPセッションの他のメンバーから受信したFBメッセージと、Rが送信し たいFBメッセージの重複を検出しなければならない[MUST]。したがって、RTPセッションのメンバーである間、Rは、（最小限の）複合 RTCPパケットの到着を継続的に監視し、これらのRTCPパケットに含まれる各FBメッ セージを少なくともT_retentionだけ保存しなければならない[MUST]。上記のステップ1〜4に従って自身のFBメッセージの送信をスケジューリングする際、Rは、間隔［t0 - T_retention ; te］の間に受信したRTCPパケットから、格納された各FBメッセージおよび新たに受信したFBメッセージをチェックし、以下のように行動しなければならない（MUST）。

5a) Rが受信したFBメッセージのセマンティクスを理解し、メッセージ内容がRが送りたかったフィードバックのスーパーセットである場合、Rは自身のFBメッセージを破棄しなければならず、次の通常のRTCPパケット送信をtn（前に計算した通り）に再スケジュールしなければならない（MUST）。

5b) Rが受信したFBメッセージのセマンティクスを理解し、メッセージ内容がRが送信したかったフィードバックのスーパーセットでない場合、Rはスケジュール通りに自身のFBメッセージを送信すべきである（SHOULD）。送信すべきフィードバック情報と受信したフィードバック情報が重複している場合、送信するフィードバックの量はR次第である。Rは送信するフィードバック情報を変更しないでおいてもよいし、 Rは自分のフィードバックと他のセッションメンバーからこれまでに受信した フィードバックとの間の冗長性を排除してもよい(MAY)。

5c) Rが受信したFBメッセージのセマンティクスを理解しない場合、Rは自身のFBメッセー ジをEarly RTCPパケットとしてスケジュールしておいてもよいし、Rは次の Regular RTCPパケット送信をtnに再スケジュールし（前に計算したように）、FBメッセージを現在の Regular RTCPメッセージに付加してもよい（MAY)。

注：5c)では、未知のFBメッセージを受信しても、特定の受信機でフィードバックが抑制されない場合がある。その結果、あるイベントによってM個の異なるタイプのFBメッセージ（これらはすべて適切であるが、相互には理解されない）がスケジュールされ、「大きな」受信者グループが最大M個のグループに効果的に分割される可能性がある。これらのM個のグループのそれぞれのメンバー間で、フィードバック抑制は5a及び5bに続いて起こるが、グループ間で抑制は起こらない。その結果、O（M）個のRTCP FBメッセージが送信者によって受信される可能性がある。したがって、非常に限定的なフィードバックインポージョンの可能性がある。ただし、送信者とすべての受信者は、同じRTPセッションで同じ（一組の） コーデックを使用して同じアプリケーションを構成するため、FBメッセージの セマンティクスはほとんど分岐しないと安全に仮定することができ、したがって、 一般的な場合、Mは小さいと仮定される。

さらに、O（M）個のFBメッセージがT_dither_maxの時間間隔にわたってランダムに分布していることを考えると、結果として得られる限られた数の複合RTCPパケットは、（a）送信者を圧倒せず、（b）すべての情報が補完的に含まれているので伝達されるべきであることがわかります。

6.5により、RのFBメッセージが他の受信者のFBメッセージによって抑制されなかった 場合、teに達したとき、RはFBメッセージを含む（最小）複合RTCPパケットを送信しなけれ ばならない（MUST）。その後、Rはallow_early = FALSEを設定し、tn = tp + 2*T_rrを再計算し、 tpを以前のtnに設定しなければならない(MUST)。Rは、新たに計算したtnに達すると、次の通常RTCPパケットを送信するか、T_rr_intervalのために送信を抑止するかにかかわらず、再びallow_early = TRUEを設定しなければならない（MUST）。

3.5.3.通常のRTCP送信
フルコンパウンドRTCPパケットは、一定の間隔で送信されなければならない（MUST）。これらのパケットには、1つ以上のFBメッセージを含んでもよい（MAY）。通常RTCPパケットの送信は、以下のようにスケジュールされる。

T_rr_interval == 0の場合、本文書のセクション3.2および3.4で規定される規則に従わなければ ならず、セクション3.5.2で規定されるtnの調整に従わなければならない（すなわち、 Early RTCPパケット送信が発生した場合は、通常の送信を1回スキップしなければなら ない）。タイマーの再検討は、[1]に従ってtnに到達したときに行われる。タイマー再考の後、Regular RTCPパケットを送信する。通常RTCPパケットの送信または抑止が行われるたびに、allow_earlyをTRUEに設定し、tp、tnを[1]のように更新しなければならない（MUST）。また、RTCPパケットを最初に送信した後、Tminを0に設定しなければならない（MUST）。

T_rr_interval != 0 の場合、送信時間の計算は本文書のセクション3.2および3.4で規定される規則に従わなければならず、セクション 3.5.2 で規定される tn の調整（すなわち、早期 RTCP 送信が発生した場合に通常の送信を1回スキップする）に従わなければならない（MUST）。タイマーの再考は、[1]に従ってtnに到達したときに行われる。タイマーの再考察の後、以下の動作が行われる。

1.また、RTCPパケットを送信したことがない場合（t_rr_last == NaN）、RTCPパケットを送信しなければならない（MUST）。保存されたFBメッセージは、Regular RTCPパケットに含めてもよい（MAY）。また、RTCPパケットを送信した後、t_rr_lastをtnに設定しなければならない（MUST）。Tminは0に設定されなければならない（MUST）。

2.それ以外の場合は、一時的な値T_rr_current_intervalが以下のように計算される。

T_rr_current_interval = RND*T_rr_interval

であり、RND は 0.5 から 1.5 の間に均等に分布する擬似ランダム関数である。このディザ値を用いて、以下の選択肢のいずれかを決定する。

2a) t_rr_last + T_rr_current_interval <= tnの場合、通常のRTCPパケットをスケジューリングしなければならない（MUST）。保存されたRTCP FBメッセージは、通常のRTCPパケットに含めてもよい。また、スケジュールされたパケットを送信した後、t_rr_lastをtnに設定しなければならない（MUST）。

2b) t_rr_last + T_rr_current_interval > tn で、RTCP FBメッセージが保存され送信待ちの場合、RTCPパケットを tn で送信するようスケジュールしなければならない（MUST）。このRTCPパケットは（実装者の判断で）最小限のRTCPパケットでも通常のRTCPパケットでもよ く、複合RTCPパケットには保存されたRTCP FBメッセージが含まれていなければならない （MUST）。

2c) それ以外の場合（t_rr_last + T_rr_current_interval > tnで、保存されたRTCP FBメッセージが送信待ちでない場合）、複合RTCPパ ケットは抑制されなければならない（すなわち、スケジュールされてはならない）。

上記の4つのケースすべて(1、2a、2b、2c)において、allow_earlyをTRUEに設定 しなければならず(おそらく通常のRTCPパケット送信後に)、tpとtnは最小5秒を除いて [1]の規則に従って更新されなければならない[MUST]。

3.5.4.その他の考慮事項
T_rr_interval != 0の場合、RTP/AVPFエンティティのタイムアウト計算([1]のセク ション6.3.5)は、Tdの計算にTminではなくT_rr_intervalを使用し、RTPエンティティ のタイムアウトにM*Tdを使用するように修正しなければならない[MUST]。

複合RTCPパケットを送受信するときはいつでも(最小または完全複合、 EarlyまたはRegular)、avg_rtcp_size変数を適宜更新しなければならず[MUST] (［1］参照)、その後のtnの計算では新しいavg_rtcp_sizeを使用しなければならない[MUST]。

3.6.グループサイズに関する考察
このセクションでは、様々なフィードバックモードを使用する際のグループサイズに関するガイドラインを示します。

3.6.1.ACKモード
RTPセッションは正確に2つのメンバーを持たなければならず[MUST]、この グループサイズは大きくなってはならない[MUST NOT]、すなわち、ポイントツーポイント 通信でなければならない[MUST]。セッション記述では、ユニキャストアドレスを使用すべきである[SHOULD]。

2つのパーティ間の単方向および双方向通信の場合、RTPセッション帯域幅の2.5% は、フィードバックを含め、受信者からのRTCPトラフィックに使用できる。64kビット/秒ストリームの場合、RTCPは1,600ビット/秒となる。RTCPパケットあたり平均96バイト（=768ビット） とすると、受信者は1秒あたり2イベントを送信者に報告することができる。10イベントの確認応答が各FBメッセージで収集される場合、1秒間に20イベントを確認することができます。256kbit/sでは、1秒間に8つのイベントを報告することができます。したがって、ACKはより細かい粒度で送信することができます（たとえば、FBメッセージごとに3つのACKを組み合わせるのみ）。

1Mビット/秒以上では、受信機は30fpsのビデオストリームの個々のフレーム（パケットではありません！）を認識することができます。

ACK戦略は、このような帯域幅の制限で適切に動作するように定義しなけれ ばならない[MUST]。セッションでACKが許可されているかどうか、許可されている場合、どのACK 戦略を使用すべきかの指示は、帯域外のメカニズム(たとえば、SDPを使用したセッ ション記述のメディア固有属性)によって伝達してもよい[MAY]。

3.6.2.NACKモード
否定応答(および同様の報告特性を示す他のタイプのフィードバック)は、 グループサイズが2より大きくなる可能性があるすべてのセッションに使用しなければならない[MUST]。もちろん、NACKはポイントツーポイント通信にも使ってもよい[MAY]。

Early RTCPパケットの使用を検討すべきかどうかは、セッション帯域幅、コーデック、特別なタイプの フィードバック、送信者および受信者の数など、多くのパラメータに依存します。

動作モードを決定する際に最も重要なパラメータは、2つの複合RTCPパケット間の許容最小間隔（T_rr）と、時間間隔ごとに報告が必要と思われるイベントの平均数（もちろん、それらの時間的分布も）です。最小間隔は、利用可能なRTCP帯域幅とRTCPパケットの予想される平均サイズから導出することができる。報告するイベントの数（例えば、1秒あたり）は、パケットロス率と送信者のパケット送信率から導出することができる。これら2つの値から、即時フィードバックモードの許容グループサイズを計算することができる。

セクション3.3で述べたように：

Nを受信機によって間隔Tごとに報告されるイベントの平均数、Bをこの特定の受信機のRTCP帯域幅割合、Rを平均RTCPパケットサイズとすると、N<=B*T/Rである限り、受信機は即時フィードバックモードで動作します。

したがって、Early RTCPモードの上限は、許容可能な品質劣化、つまり、時間間隔ごとにいくつの イベントが報告されない可能性があるかにのみ依存する。

セクション3.3で述べたように：

上記の表記法を使用すると、Early RTCPモードは、N > B*T/Rを「下限」として大まかに特徴付けることができる。上限の推定はより困難である。N=1を設定すると、任意のRおよびBについて、報告されるイベントの平均間隔として間隔T=R/Bが得られます。この情報は、RTCPパケットの早期送信が有効かどうかを判断するためのヒントとして利用することができる。

例例：256kbit/s、30fpsのビデオをMTUサイズ約1,500バイトのネットワークで伝送する場合、ほとんどの場合、各フレームは1パケットに収まり、パケットレートは30パケット/秒となる。ネットワーク上で5％のパケットロスが発生した場合（均等に分散し、レシーバー間の相互依存はない）、各レシーバーは平均して2秒間に3パケットのロスを報告しなければならない。送信者が1人、受信者が3人以上と仮定すると、受信者に割り当てられたRTCP帯域幅の3.75%になり、9.6kbit/秒となります。さらに、平均的な複合RTCPパケットのサイズを120バイトと仮定すると、1秒間に10個のRTCPパケットを送信でき、2秒間に20個のRTCPパケットを送信できます。すべての受信機が2秒間に3つのパケット損失を報告する必要がある場合、すべての損失イベントが報告されると、最大グループサイズは6～7受信機となります。早期RTCPパケットの送信ルールは、この報告のほとんどが適時に行われるよう、十分な柔軟性を提供する必要があります。

この例を拡張して、Early RTCPモードの上限を決定すると、次のような考察を導くことができ る。基盤となるコーディング方式とアプリケーション（および耐性のあるユーザー） は、2秒につき1回の修復なし損失を許容すると仮定する。したがって、各レシーバが報告するパケット数は2秒に2個に減少し、グループサイズは10に増加します。さらに、いくつかのパケットロスに相関があると仮定すると、フィードバックトラフィックはさらに減少し、12～16（おそらく20）のグループサイズは、Early RTCPモードを使用して合理的にサポートすることができます。これらの考察はすべて統計に基づくものであり、場合によっては成り立たないこともあることに注意してください。

3.7.決定ステップのまとめ
3.7.1.一般的なヒント
RTCPフィードバック情報を送信するかどうかを検討する前に、アプリケーションはこのメカニズムが適用可能かどうかを判断する必要があります。

1) アプリケーションは、関連する（アプリケーション固有の）最大フィードバック遅延と現在観測されている往復時間のパケットレートの現在の比率に対して、フィードバック機構がまったく適用できないかどうかを決定しなければならない。

この決定は、帯域外メカニズムと同様に、RTCP受信統計に基づく（そしてそれに従って動的に修正される）ことがある。

2) アプリケーションは、ある観測されたエラー率、割り当てられた帯域幅、フレーム/パケットレート、グループサイズに対して、フィードバック機構を適用できるかどうか（そしてどのような）かを決定しなければならない。

定期的なRTCP受信の統計は、このステップにも貴重なインプットを提供します。

3) アプリケーションがフィードバックを送信することを決定した場合、アプリケーションは、FB メッセージを含む Early RTCP パケットまたは Regular RTCP パケットの送信ルールに従わなければならない。

4) 送信されるRTCPフィードバックのタイプは、下位層のトランスポートプ ロトコルから送信者が利用できる情報と重複すべきではない。つまり、トランスポートプロトコルがパケット受信に関して否定的または肯定的 な肯定応答を提供する場合（DCCPなど）、受信者はRTCP層で同じ情報を繰り返す ことを避けるべきである（すなわち、Generic NACKを送信しないようにする）。

3.7.2.メディアセッション属性
メディアセッションは通常、送信者と受信者の間でトランスポートアドレス、コーデック情報などを伝達する帯域外メカニズムを使用して記述される。このようなメカニズムは、メディアセッションを記述するために使用されるフォーマットと、この記述を伝送するための別のメカニズムという2つの側面を持っています。

現在、IETFでは、メディアセッションの記述にSDP（Session Description Protocol）を、記述の伝達にSIP、SAP（Session Announcement Protocol）、RTSP（Real Time Streaming Protocol）、HTTP（その他）などのプロトコルが使用されています。

メディアセッション記述形式は、このセッションでRTCPのフィードバック機構がサポートされていること、およびどのフィードバック機構が適用されてもよいかを示すパラメータを含んでもよい（MAY）。

そのためには，"AVP "の代わりに "AVPF "というプロファイルを示さなければならない(MUST)。どのタイプのフィードバックがサポートされるかを示すために、さらなる属性が定義されるかもしれません。

セクション4には、SDPを使用したRTCPフィードバックをサポートするための構文 仕様が含まれている。他のメディアセッション記述形式に関する同様の仕様は、本文書の範囲外 である。

4.SDP 定義
このセクションでは、セッションを記述するために使用される追加のSDPパラ メータをいくつか定義する。これらはすべて、メディアレベル属性として定義されている。

4.1.プロファイルの識別
4]で定義されたAVプロファイルは、セッション記述プロトコル(SDP)[3]などの文脈では "AVP "と呼ばれている。本書で規定するプロファイルは、"AVPF "と呼ばれる。

この文書で規定されたタイミングルールに従ったフィードバック情報は、このセッションの記述がAVPFプロファイルの使用を示していない限り、特定のメディアセッションに対して送信されてはならない（MUST NOT）（排他的または他のAVプロファイルと合同で）。

4.2.RTCP フィードバック能力属性
本文書に規定されているように、RTCPフィードバックを使用する能力を示すた めに、新しいペイロード形式固有のSDP属性が定義されている。「a=rtcp-fb」である。rtcp-fb」属性は、SDPメディア属性としてのみ使用しなければなら ず[MUST]、セッションレベルで提供してはならない[MUST NOT]。rtcp-fb」属性は、「AVPF」が指定されているメディアセッションでのみ使用 しなければならない[MUST]。

rtcp-fb」属性は、示されたペイロードタイプに対して、このメディア セッションでどのRTCP FBメッセージを使用してもよいかを示すために使用されるべき である[SHOULD]。ワイルドカードのペイロードタイプ（"*"）は、RTCPフィードバック属性がすべての ペイロードタイプに適用されることを示すために使用してもよい。複数のタイプのフィードバックに対応する場合、および/またはペイロード タイプのサブセットに同じフィードバックを指定する場合、複数の「a=rtcp-fb」行 を使用しなければならない[MUST]。

rtcp-fb」属性が指定されていない場合、RTP受信者は、各メディアタイ プに定義されているように、他の適切なRTCPフィードバックパケットを使用してフィー ドバックを送信してもよい[MAY]。RTP受信者は、RTP送信者がFBメッセージのいずれかに反応することに依存し てはならない[MUST NOT]。RTP送信者は、一部のフィードバックメッセージの無視を選択してもよい [MAY]。

メディアセッション記述に1つ以上の "rtcp-fb "属性が存在する場合、"rtcp-fb "属性を含むメディアセッションのRTCP受信機（複数可）。

oは、セマンティクスを完全に理解していない(すなわち、「a=rtcp-fb」行の すべての値の意味を理解していない)すべての「rtcp-fb」属性を無視しなけれ ばならない[MUST]。

o このメディアセッションの「rtcp-fb」属性の一つで指定されたRTCPフィードバックパケットのいずれかを使用して、このドキュメントで指定されたようにフィードバック情報を提供すべきである；および

o "rtcp-fb "属性行のひとつに列挙されているもの以外のFBメッセージを使 用してはならない[MUST NOT]。

オファー/アンサーモデル[8]と併用する場合、オファー側は相手側にこれらのAVPF属性の セットを提示してもよい[MAY]。アンサー側は、一般的にサポートしていない属性や、この特定のメディア セッションで使用したくない属性だけでなく、理解できない属性をすべて削除しなけれ ばならない[MUST]。アンサー側は、メディア記述にフィードバックパラメータを追加しては ならず[MUST NOT]、そのようなパラメータの値を変更してはならない[MUST NOT]。アンサーはメディアセッションのバインディングであり、オファー側とアンサー 側の双方は、この方法でネゴシエートされたフィードバックメカニズムのみを使用 しなければならない[MUST]。オファー側とアンサー側は、ネゴシエートされたフィードバックメカニズムの サブセットだけのRTCP FBメッセージを送信することを独自に決定してもよ いが、ネゴシエートされたFBメッセージのすべてのタイプを受信したときに 適切に反応すべきである[SHOULD]。

RTP送信者は、あらゆる種類のRTCP FBメッセージを受信できるように準備しな ければならず、理解できないRTCP FBメッセージはすべて静かに破棄しなければなら ない[MUST]。

rtcp-fb」属性の構文は以下のとおりです（フィードバックの種類とオプションのパラメータは、すべて大文字と小文字を区別します）。

(以下のABNFでは、fmt, SP, CRLFは[3]で定義されたものを使用している)。

      rtcp-fb-syntax = "a=rtcp-fb:" rtcp-fb-pt SP rtcp-fb-val CRLF    
      rtcp-fb-pt = "*" ; ワイルドカード: すべてのフォーマットに適用される / fmt ; SDP仕様で定義されている通り。        
rtcp-fb-val = "ack" rtcp-fb-ack-param / "nack" rtcp-fb-nack-param / "trr-int" SP 1*DIGIT / rtcp-fb-id rtcp-fb-param

      rtcp-fb-id = 1*(英数字 / "-" / "_")    
rtcp-fb-param = SP "app" [SP byte-string] / SP token [SP byte-string] / ; 空欄

rtcp-fb-ack-param = SP "rpsi" / SP "app" [SP byte-string] / SP token [SP byte-string] / ; 空欄

rtcp-fb-nack-param = SP "pli" / SP "sli" / SP "rpsi" / SP "app" [SP byte-string] / SP token [SP byte-string] / ; 空欄

上記の文法のリテラルは以下のような意味合いを持つ。

フィードバックタイプ "ack"。

このフィードバックタイプは、フィードバックに対する肯定的な謝辞がサポートされていることを示す。

フィードバックタイプ「ack」は、メディアセッションがセクション3.6.1に定義さ れているようにACKモードでの動作を許可されている場合にのみ使用されなければ ならない[MUST]。

異なるタイプの肯定的な確認応答をさらに区別するために、パラメータが提供されなけれ ばならない(MUST)。

パラメータ "rpsi "は、6.3.3 節に定義される参照画像選択表示フィードバックの使用を示す。

パラメータ "app "が指定された場合、アプリケーションレイヤーフィードバックの使用を示す。この場合、様々なタイプのアプリケーションレイヤーフィードバックをさらに区別するために、"app "に続く追加のパラメータを使用してもよい(MAY)。本書では、"app "に固有のパラメータは定義していない。

ack "のさらなるパラメータは、他の文書で定義してもよい（MAY）。

フィードバックタイプ "nack"。

このフィードバックタイプは、フィードバックに対する否定的な肯定応答がサポートされていることを示す。

フィードバックタイプ「nack」は、パラメータなしで、セクション6.2.1に定義される一般的なNACKフィードバック形式の使用を示している。

本書では、"nack "をメディアタイプ "video "と組み合わせて使用するために、以下の3つのパラメータを定義している。

o "pli "は、6.3.1節に定義される映像損失表示（Picture Loss Indication）フィードバックの利用を示す。

o "sli "は、6.3.2節に定義されるスライス損失表示フィードバックの使用を示す。

o "rpsi "は、6.3.3節に定義される参照画像選択指示のフィードバックの使用を示す。

"app "は、アプリケーションレイヤーフィードバックの使用を示す。異なるタイプのアプリケーションレイヤーフィードバックを区別するために、「app」の後に追加のパラメータを提供してもよい(MAY)。本書では、"app "に固有のパラメータは定義されていない。

nack "のさらなるパラメータは、他の文書で定義されてもよい。

その他のフィードバックタイプ <rtcp-fb-id>:

他の文書では、さらにフィードバックのタイプを定義してもよい(MAY)。このような場合に備えて文法を拡張可能にしておくために、rtcp-fb-idがプレースホルダとして導入されている。新しいフィードバックスキームの名前は一意でなければならない(MUST)(したがって、 IANAに登録しなければならない(MUST))。新しい名前とともに、そのセマンティクス、(必要であれば)パケット形式、およ びその運用ルールを規定しなければならない(MUST)。

通常のRTCP最小間隔 "trr-int"。

属性 "trr-int "は、このメディアセッションの2つの通常（完全複合）RTCPパケット間の最小間隔T_rr_intervalをミリ秒単位で指定するために使用される。trr-int "を指定しない場合、デフォルトの0を仮定する。

アプリケーションレイヤーのフィードバックに関するより具体的な情報(セクション6.4で定義)は、他の場所で定義されたフィードバックのタイプとパラメータとして伝えられると仮定されていることに注意してください。したがって、この文書では、いかなる型とパラメータについても、これ以上規定しない。

フィードバックの種類やパラメータについては、他の文書で定義することができる。

フィードバック情報を送信するかどうかは受信者の自由であり、提供されたフィードバックをどのように利用するかは送信者の自由です。

4.3.RTCP帯域幅修飾子
1]および[2]に定義されている標準的なRTCP帯域幅の割り当ては、明示的に最大RTCP帯域幅 を定義する帯域幅修飾子によって、オーバーライドしてもよい[MAY]。SDPで使用する場合、このような修飾子は[4]で指定されている。「b=RS:<bw>」と「b=RR:<bw>」は、RTP送信者および受信者にそれぞれ異なる帯域幅 (1秒あたりのビット数で測定)を割り当てるために使用してもよい [MAY]。送信者および受信者が使用する実際の帯域幅を決定するには、[4]の優先順位規則が 適用される。

非対称性の高いリンク(衛星リンクなど)上で承知の上で動作するアプリケー ションは、このメカニズムを使用して高帯域幅ストリームのフィードバック レートを下げ、フィードバックパスの決定論的な輻輳を防ぐべきである[SHOULD]。

4.4.例
例1: 以下のセッション記述は、DTMFストリームがGeneric NACKを使用するポイント トゥーポイント通信のための、オーディオとDTMF(参考文献[18])で構成され たセッションを示す。このセッション記述は、送信者が送信するDTMFストリームのフィードバックを受 ける能力があり、それを望むことを示すために、SIP INVITE、200 OK、またはACK メッセージに含まれることができる。

      v=0
      o=alice 3203093520 3203093520 IN IP4 host.example.com
      s=Media with feedback
      t=0 0 c=IN IP4 host.example.com
      m=audio 49170 RTP/AVPF 0 96
      a=rtpmap:0 PCMU/8000
      a=rtpmap:96 telephone-event/8000
      a=fmtp:96 0-16
      a=rtcp-fb:96 nack

これにより、送信者および受信者は、オーディオセッションでDTMFイベントの信頼性の高い伝送を行うことができます。64kbit/sのオーディオストリームを1つのレシーバで使用すると仮定すると、レシーバは否定応答ストリームのために2.5%のRTCP帯域幅、つまり毎秒250バイトまたは毎秒約2個のRTCPフィードバックメッセージを使用できます。したがって、レシーバは個別に1秒間に最大2つのDTMFオーディオパケットを欠落させることができます。

例2: 以下のセッション記述は、両方のコーデックの汎用NACKとH.263の参照画像選択 を受け入れるビデオソースとの、マルチキャストビデオのみのセッション(H.261 またはH.263+のいずれかを使用)を示している。このような説明は、セッションアナウンスメントプロトコル(SAP)を使用して伝達された可能性がある。

      v=0
      o=alice 3203093520 3203093520 IN IP4 host.example.com
      s=Multicast video with feedback
      t=3203130148 3203137348
      m=audio 49170 RTP/AVP 0
      c=IN IP4 224.2.1.183
      a=rtpmap:0 PCMU/8000
      m=video 51372 RTP/AVPF 98 99
      c=IN IP4 224.2.1.184
      a=rtpmap:98 H263-1998/90000
      a=rtpmap:99 H261/90000
      a=rtcp-fb:* nack
      a=rtcp-fb:98 nack rpsi

送信側は、受信したGeneric NACKをヒントとして、できるだけ早く新しいイントラフレームを送信することができます（輻輳制御が許可される）。RPSI（Reference Picture Selection Indication）メッセージを受信すると、送信者は大きなイントラフレームの送信を避けることができる。その代わりに、送信者はインターフレームの送信を続けることができるが、新しい符号化基準として示されたフレームを選択する。

例3: 以下のセッション記述は、例2と同じメディアセッションを定義するが、 AVPおよびAVPF RTPエンティティを混合モードで操作することができる (次のセクションも参照)。どちらのメディア記述も同じアドレスを使用しているが、適用可能なRTPプロファ イルの両方に関する情報を伝えるために、2つのm=行が必要であることに注意。

      v=0
      o=alice 3203093520 3203093520 IN IP4 host.example.com
      s=Multicast video with feedback
      t=3203130148 3203137348
      m=audio 49170 RTP/AVP 0
      c=IN IP4 224.2.1.183
      a=rtpmap:0 PCMU/8000
      m=video 51372 RTP/AVP 98 99
      c=IN IP4 224.2.1.184
      a=rtpmap:98 H263-1998/90000
      a=rtpmap:99 H261/90000
      m=video 51372 RTP/AVPF 98 99
      c=IN IP4 224.2.1.184
      a=rtpmap:98 H263-1998/90000
      a=rtpmap:99 H261/90000
      a=rtcp-fb:* nack
      a=rtcp-fb:98 nack rpsi

これらの2つのm=行は、両方とも実際には同じ内容を伝える代替であることを示す ために、何らかの適切なメカニズムでグループ化されるべきである(SHOULD)ことに注 意。これを実現するためのフレームワークの例は、[10]で定義されている。

この例では、RTCPフィードバックを有効にしたレシーバは、送信者により早く イベントを報告できる利点がある(グループ全体に利点がある可能性がある)。しかし、平均すると、すべてのRTP受信者は同じ量のフィードバックを提供する。AVPとAVPFエンティティの相互作用については、次のセクションで詳しく説明する。

5.AVP と AVPF エンティティの相互運用と共存
本文書で定義されているAVPFプロファイルは、[2]で定義されているAVPプロファイルを拡張したものである。どちらのプロファイルも同じ基本規則に従います(RTCPの上限帯域幅、送信者および受信者への帯域幅の割り当てを含む)。したがって、2つのプロファイルのいずれかを使用する送信者および受信者を、単一 セッションに混在させることができる(セクション4.5の例3参照)。

AVPとAVPFは、堅牢性の観点から、RTPエンティティが他の各プロファイルのエン ティティを意識する必要がないように定義されている: 互いの機能を妨げることはない。ただし、提示されるメディアの品質が低下する可能性がある。

複合セッションで使用する場合、送信側と受信側には次のような配慮が必要です。

o AVP エンティティ（送信者、受信者）

AVP送信者はAVPF受信者からRTCPフィードバックパケットを受信しますが、このパケットを無視します。AVPFエンティティによるRTCPメッセージの間隔が狭くなる（5秒ルールに違反するなど）ことがあります。両方のタイプのエンティティが全体的な帯域幅の制約を順守しているため、RTCP帯域幅の取り分は確保されま す。ただし、AVPエンティティは5秒ルールに拘束されますが、グループサイズとセッション帯域幅によっては、AVPFエンティティはAVPエンティティよりも頻繁にRTCPレポートを提供する場合があります。また、AVPFエンティティはより大きな複合RTCPパケットを送信するため、全体のレポートがわずかに減少する可能性があります（余分なRTCPパケットのため）。

T_rr_intervalをRTCPパケット間の下限値として使用し、T_rr_intervalが十分に大きく（[1]のセクション6.3.5に従い、T_rr_interval > M*Td）、AVPFエンティティからEarly RTCPパケットが送信されない場合、AVPエンティティは誤ってAVPFグループメンバーをタイムアウトさせてしまい、グループサイズが過小評価される場合があります。したがって、AVPエンティティがメディアセッションに参加する場合、T_rr_intervalは5秒以上であるべきではありません（SHOULD NOT）。

o AVPFエンティティ(送信者と受信者)

動的に計算されるT_rrが十分に小さい場合（例えば、1秒未満）、AVPFエンティティは、誤ってAVPグループメンバーをタイムアウトさせ、その結果、グループサイズを過小評価する可能性がある。したがって、AVPエンティティがメディアセッションに関与する可能性がある場合、T_rr_intervalが使用されるべきであり、5秒に設定されるべきである(SHOULD)。

結論として、AVPエンティティがメディアセッションに関与する可能性があり、T_rr_intervalが使用される場合、T_rr_intervalは5秒に設定されるべきである(SHOULD)。

o AVPF送信者

AVPF送信者は、AVPF受信者からのみフィードバック情報を受け取ることになります。AVPF送信者は、AVPF受信者からのフィードバック情報しか受け取らないため、フィードバックに依存した目標メディア品質では、AVP受信者に最適な品質が得られない可能性があります。

o AVPF受信機

AVPF受信機は、メディアセッションのすべての送信エンティティがAVPFをサポートしている場合にのみ、Early RTCPフィードバックパケットを送信すべきです(SHOULD)。AVPF受信機は、以下のタイミング規則に従い、定期的にスケジュールされた複合RTCPパケットの一部としてフィードバック情報を送信してもよい(MAY)。

[1]と[2]は、混合モードで動作するメディアセッションにおいても同様 である。しかし、フィードバックを提供する受信者は、送信者がフィードバックに反応するこ とに全く頼ってはならない[MUST NOT]。

6.RTCP フィードバックメッセージのフォーマット
本節では、低遅延RTCPフィードバックメッセージの形式を定義する。これらのメッセージは、以下の3つのカテゴリに分類される。

- トランスポート層FBメッセージ - ペイロード専用FBメッセージ - アプリケーション層FBメッセージ

トランスポートレイヤのFBメッセージは、汎用的なフィードバック情報、すなわち、特定のコーデックや使用中のアプリケーションに依存しない情報を伝送することを目的としている。この情報は、トランスポート/RTPレイヤーで生成および処理され ることが期待される。現在、一般的な否定応答(NACK)メッセージだけが定義されている。

ペイロード専用 FB メッセージは、特定のペイロードタイプに固有の情報を伝送し、コーデック「層」 で生成され対処される。本文書は、すべてのペイロード専用FBメッセージと共に使用される共通ヘッダーを 定義する。特定のメッセージの定義は、RTPペイロード形式仕様または追加のフィードバック形式 文書に任されている。

アプリケーション層のFBメッセージは、受信者のアプリケーションから送信者のアプリケー ションにフィードバックを透過的に伝達する手段を提供する。このようなメッセージに含まれる情報は、トランスポート/RTPまたはコーデックレイヤーで対処されることは期待されていない。2つのアプリケーションインスタンス間で交換されるデータは、通常、アプリケー ションプロトコル仕様で定義され、したがって、アプリケーションで識別でき るため、追加の外部情報は不要である。したがって、この文書では、すべてのアプリケーション層FBメッセージとともに使用される共通ヘッダのみを定義する。プロトコルの観点からは、アプリケーション層FBメッセージはペイロード専用FBメッセージの特別なケースとして扱われる。

注：メディア送信側でいくつかのFBメッセージを適切に処理するためには、送信側がFBメッセージがどのペイロードタイプを参照しているかを知る必要がある場合があります。ほとんどの場合、この知識は、単一のペイロードタイプのみを使用するメディアストリームから得られる可能性が高い。しかし、複数のコーデックが同時に使用される場合（たとえば、オーディオとDTMF）、またはコーデックの変更が発生する場合、ペイロードタイプ情報はFBメッセージの一部として明示的に伝達される必要がある場合がある。これは、アプリケーション層のFBメッセージだけでなく、すべてのペイロード固有のメッセージに適用される。ペイロード・タイプ情報をどのように伝送するかを定義するのは、FBメッセージの仕様次第である。

この文書では、2つのトランスポート層と3つの（ビデオ）ペイロード固有のFBメッセージ、およびアプリケーション層のFBメッセージのための単一のコンテナを定義しています。追加のトランスポートレイヤーとペイロード固有のFBメッセージは、他の文書で定義してもよ く、IANAを通じて登録されなければならない[MUST](セクション9「IANA Considerations」参照)。

上記のRTCP FBメッセージタイプの一般的な構文とセマンティクスを、以下のサブセクションで説明する。

6.1.フィードバックメッセージの共通パケットフォーマット
すべてのFBメッセージは、図3に描かれている共通のパケットフォーマットを使用しなければならない(MUST)。

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |V=2|P|   FMT   |       PT      |          length               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  SSRC of packet sender                        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  SSRC of media source                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   :            Feedback Control Information (FCI)                 :
   :                                                               :

図3 フィードバックメッセージの共通パケットフォーマット

フィールドV、P、SSRC、およびlengthは、RTP仕様[2]で定義されており、それぞれの意 味は以下のとおりである。

バージョン(V)。2ビット このフィールドは、RTPバージョンを識別する。現在のバージョンは 2 である。

パディング（P）：1ビット パディングビットは，パケットの末尾に，制御情報には含まれないが，長さフィールドに含まれる追加のパディングオクテットを含むことを示す。

フィードバックメッセージのタイプ（FMT）。5 ビット このフィールドは FB メッセージのタイプを識別し、タイプ（トランスポート層、ペイロード固有、またはアプリケーション層のフィードバック）に関連して解釈される。3つのフィードバックタイプの値は、以下のそれぞれのセクションで定義されています。

ペイロードタイプ（PT）：8ビット RTCP FBメッセージであることを識別するためのRTCPパケットタイプである。IANAで2つの値が定義されている。

            Name   | Value | Brief Description
         ----------+-------+------------------------------------
            RTPFB  |  205  | Transport layer FB message
            PSFB   |  206  | Payload-specific FB message

Length: 16 bit このパケットの長さは、ヘッダーと任意のパディングを含む32ビットワードから 1を引いたものである。これは、RTCPの送信者と受信者のレポート[3]で使用される長さフィールドの定義と一致する。

パケット送信元のSSRC。32 bit このパケットの送信元の同期元識別子。

メディアソースの SSRC。32 ビット このフィードバック情報が関連するメディアソースの同期元識別子。

フィードバック制御情報(FCI): 可変長 以下の3つのセクションでは、トランスポート層、ペイロード固有、またはアプリケーション層の フィードバックごとに、どの追加情報をFBメッセージに含めてもよいかを定義してい る。さらなるFCIコンテンツは、さらなる文書で規定されてもよいことに注意すること。

各RTCPフィードバックパケットには、FCIフィールドに少なくとも1つのFBメッセージが含まれなけれ ばならない（MUST）。セクション6.2および6.3では、FCIタイプごとに、複数のFBメッセージを1つのFCIフィールドに圧縮してもよいかどうかを定義している。この場合、それらは同じタイプ、つまり同じFMTでなければならない（MUST）。複数のタイプのフィードバックメッセージ、つまり、複数のFMTを伝える必要がある場合、 複数のRTCP FBメッセージが生成されなければならず、同じ複合RTCPパケットに連結される べきである（SHOULD）。

6.2.トランスポート層フィードバックメッセージ
トランスポート層FBメッセージは、RTCPメッセージタイプとしてRTPFBという値で識別される。

本書では、単一の汎用トランスポート層FBメッセージを定義している。一般的なNACKである。これは、FMTパラメータによって以下のように識別される。

0：未割り当て 1：汎用 NACK 2-30：未割り当て 31：将来の識別子番号空間拡張のための予約

次のサブセクションでは、このタイプのFBメッセージのFCIフィールドのフォーマットを定義している。将来的には、さらに一般的なフィードバックメッセージを定義してもよい（MAY）。

6.2.1.一般的なNACK
汎用NACKメッセージは、PT=RTPFBおよびFMT=1によって識別される。

FCIフィールドは、少なくとも1つの汎用NACKを含まなければならず、2つ以上の汎用NACKを含んでもよい。

一般的なNACKは、1つまたは複数のRTPパケットの損失を示すために使用され る。失われたパケットは、パケット識別子とビットマスクで識別される。

基礎となるトランスポートプロトコルが送信者に同様のフィードバック情報を 提供できる場合(例えばDCCPのような場合)、一般的なNACKフィードバックを使用す べきではない[SHOULD NOT]。

FCI（Feedback Control Information）フィールドは、以下のシンタックスを有する（図 4）。

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |            PID                |             BLP               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
図4：一般的なNACKメッセージのシンタックス

パケットID（PID）。16ビット PIDフィールドは、失われたパケットを指定するために使用される。PIDフィールドは、失われたパケットのRTPシーケンス番号を参照する。

bitmask of following lost packets (BLP): 16ビット BLPは、PIDで示されるRTPパケットの直後にある16個のRTPパケットのいずれかの損失を報告することを可能にする。BLPの定義は、[6]に記載されているものと同じである。BLPの最下位ビットをビット1、最上位ビットをビット16とすると、受信者が RTPパケット番号(PID+i)(modulo 2^16)を受信せず、このパケットが失われたこと を示す場合、ビットマスクのビットiが1に設定され、それ以外はビットiが0に設定される。たとえば、PIDに対応するパケットとそれに続くパケットが失われた場合、 BLPの最下位ビットは1に設定される。しかし、BLPのビット2～15が0だからといって、送信側はパケットPID+2～PID+16が受信されたと推測することはできない。送信側が知っているのは、受信側が現時点で紛失と報告していないことだけである。

FBメッセージの長さは、FCIフィールドに含まれるGeneric NACKの数をnとして、2+nに設定されなければならない（MUST）。

一般的なNACKメッセージは、シーケンス番号を通して暗黙的にペイロードタイプを参照する。

6.3.ペイロード固有のフィードバックメッセージ
ペイロード専用FBメッセージは、RTCPメッセージタイプとしてPT=PSFBという値で識別される。

これまでに3つのペイロード専用FBメッセージとアプリケーション層FBメッセージが定義されている。これらは、FMTパラメータによって、以下のように識別される。

      0：未設定 1：ピクチャーロス表示（PLI） 2：スライスロス表示（SLI） 3：参照画像選択表示（RPSI） 4-14：未設定 15：アプリケーション層FB（AFB）メッセージ 16-30：未設定 31：将来のシーケンス番号空間拡張のために予約。        
以下のサブセクションでは、ペイロード専用FBメッセージのFCIフォーマットを定義し、セクション6.4ではアプリケーション層FBメッセージのFCIフォーマットを定義しています。

6.3.1.ピクチャーロス・インジケーション（PLI）
PLI FB メッセージは PT=PSFB、FMT=1 で識別される。

FCIフィールドに含まれるPLIは、正確に1つでなければならない（MUST）。

6.3.1.1.セマンティクス
ピクチャーロスインジケーションメッセージにより、デコーダはエンコーダに対し、1つ以上のピクチャーに属する未定義の量の符号化ビデオデータの損失を通知する。ピクチャ間予測に基づくビデオ符号化方式と組み合わせて使用する場合、PLIを受信したエンコーダは予測チェーンが壊れている可能性があることを認識するようになる。送信者は、再同期を達成するためにイントラピクチャを送信することによってPLIに反応してもよい（このメッセージを[6]で定義されるFIRメッセージに事実上類似させる）。しかし、送信者は、イントラフレームを送信する能力を制限してもよいセクション7で説明する輻輳制御を考慮しなければならない（MUST）。

RFC 2032 [6]などの他のRTPペイロード仕様では、特定のコーデックに対す るフィードバックメカニズムがすでに定義されている。両方のスキームに対応するアプリケーションは、フィードバックを送信するとき に、本仕様に定義されているフィードバックメカニズムを使用しなければなら ない[MUST]。後方互換性の理由から、このようなアプリケーションは、それぞれのRTPペ イロード形式で定義されているフィードバック方式が必要な場合、それを受 信して対応することもできるようにすべきである[SHOULD]。

6.3.1.2.メッセージの形式
PLIはパラメータを必要としない。したがって、長さフィールドは2でなければならず、フィードバック制御情報は一切あってはならない(MUST NOT)。

この FB メッセージのセマンティクスは、ペイロードのタイプに依存しない。

6.3.1.3.タイミングルール
タイミングはセクション 3 で概説したルールに従います。PLI と他のタイプのフィードバックの両方を使用するシステムでは、PLI は他の FB タイプほど遅延が重要ではないため、PLI の通常の RTCP RR タイミングルールに従うことが望ましい場合があります。

6.3.1.4.備考
PLIメッセージは通常、完全なイントラピクチャーの送信をトリガーします。イントラピクチャは、予測される（インター）ピクチャの数倍の大きさです。その大きさは、生成される時間に依存しません。ほとんどの環境、特に帯域幅が制限されたリンクを使用する場合、イントラピクチャーの使用は、典型的なフレーム持続時間のかなりの割合を占める許容遅延を意味します。例として送信フレームレートが10fpsで、イントラピクチャがインターピクチャの10倍と仮定すると、1秒間の遅延を受け入れなければなりません。このような環境では、FBメッセージの送信に特に短い遅延は必要ない。したがって、[2]のRTCPタイミングルールで許容される次の可能なタイムスロットをTmin=0で待つことは、システム性能に悪影響を及ぼさない。

6.3.2.スライスロス表示（SLI）
SLI FB メッセージは、PT=PSFB と FMT=2 で識別される。

FCI フィールドには少なくとも 1 つの SLI を含めなければならず、2 つ以上の SLI を含 めてもよい。

6.3.2.1.セマンティクス
スライスロスインジケーションを使用すると、デコーダは、スキャン順で1つまたは複数の連続したマクロブロックの損失または破損を検出したことをエンコーダに通知することができます（下記参照）。この FB メッセージは、Annex Q が有効な H.263 など、マクロブロックのサイズが一様でなく、動的に変更可能なビデオコーデックに使用してはならない(MUST NOT)。

6.3.2.2.フォーマット
スライス損失表示は、図6に示すように、追加のFCIフィールドを1つ使用します。FBメッセージの長さは2+nに設定されなければならず、nはFCIフィールドに含まれるSLIの数である。

    0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
図6：Slice Loss Indication（SLI）のシンタックス

先頭：13ビット 最初に失われたマクロブロックのマクロブロック（MB）アドレス。MB の番号付けは、ピクチャの左上隅のマクロブロックをマクロブロック番号 1 とし、各マクロブロックの番号はラスタースキャン順に左から右、そして上から下へと増加します（ピクチャに合計 N 個のマクロブロックがある場合、右下のマクロブロックはマクロブロック番号 N と見なされます）。

Number: 13 bits 失われたマクロブロックの数で、上述したようにスキャン順になっている。

PictureID: 6 bits マクロブロックの損失が発生したピクチャを参照するために使用されるコーデック固有の識別子の最下位6ビット。多くのビデオコーデックでは、PictureID は Temporal Reference と同じである。

この FB メッセージの適用範囲は一部のビデオコーデックに限定されるため、明示的なペイロードタイプの情報は提供されない。

6.3.2.3.タイミングルール
スライス損失インジケーションを使用するアルゴリズムは、インジケーションがタイムリーに送信されない場合、効率が大幅に低下する。動き補償は、破損していると報告されていない破損したピクセルを伝搬する。したがって、セクション 3 で説明したアルゴリズムを使用することが強く推奨される。

6.3.2.4.備考
スライスという用語は、MPEG-1の意味で定義され、使用されている--スキャン順の連続した数のマクロブロックである。最近のビデオ符号化規格では、スライスという用語の理解が異なることがある。例えば、H.263(1998)では、「矩形スライス」と呼ばれる概念が存在する。1つの矩形スライスが失われると、失われた／損傷したMBの領域を正確に特定するために、複数のSLIを送信する必要が生じることがある。

FCIの最初のフィールドは、ピクチャの最初のマクロブロックを1として定義し、 疑われるような0としては定義しない。これは、この仕様をITU-T Rec.H.245 [24].ピクチャの最大マクロブロック数（2**13または8192）は、ほとんどのITU-TおよびISO/IECビデオコーデックの最大画像サイズに対応する。将来のビデオコーデックがより大きな画像サイズ及び／又はより小さなマクロブロックサイズを提供する場合には、追加のFBメッセージが定義されなければならない。Temporal Referenceフィールドの最下位6ビットは、損失が発生したピクチャを示すのに十分であるとみなされる。

SLI への対応はこの仕様の一部ではない。SLIに反応する典型的な方法の1つは、影響を受ける空間領域に対してイントラリフレッシュを使用することである。

動き補償の影響を受ける領域を追跡し、FBのタイミングに関係なく、それらの領域すべてにイントラマクロブロックを伝送するアルゴリズムが報告されている（H.263（2000）付録I［17］及び［15］を参照）。これらのアルゴリズムが使用される場合、そうでない場合よりもFBのタイミングはそれほど重要ではないが、これらのアルゴリズムは画像の大部分を補正し、したがって、遅延したFBの場合にはより多くのデータ量を伝送しなければならないことを観察しなければならない。

6.3.3.参照画像選択表示(RPSI)
RPSI FB メッセージは、PT=PSFB と FMT=3 で識別される。

FCIフィールドに含まれるRPSIは正確に1つでなければならない（MUST）。

6.3.3.1.セマンティクス
MPEG-4ビジュアルバージョン2 [16]やH.263バージョン2 [17]などの最新のビデオコーディング規格では、予測符号化のために最新のものよりも古い参照ピクチャを使用することができます。一般的に、参照ピクチャの先入れ先出しのキューが維持される。エンコーダがエンコーダとデコーダの同期性の喪失を知った場合、known-as-correct参照ピクチャを使用することができる。この参照ピクチャは通常より時間的に離れているため、結果として予測符号化されたピクチャはより多くのビットを使用することになる。

MPEG-4とH.263の両方は、破損画像の時間的IDや破損領域のサイズなどの情報を含むRPSIメッセージの「ペイロード」用のバイナリ形式を定義している。このビット列は通常、小さく（数十ビット）、可変長で、自己完結している、つまり、参照画像の選択を行うために必要なすべての情報を含んでいます。

MPEG-4とH.263は、ポジティブフィードバック情報を持つRPSIの使用も許可しています。すなわち、エラーなしでデコードされたピクチャ（またはスライス）が報告される。マルチパーティセッションでは、いかなる形式のポジティブフィードバックも使用してはならないことに注意すること(RTCP間隔で個々の参照ピクチャに関するポジティブフィードバックを報告することは、いずれにしてもあまり有用であるとは思われない)。

6.3.3.2.フォーマット
RPSIメッセージのFCIは、図7に示すようなフォーマットである。

    0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-..                | パディング (0) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-        
図 7：参照画像選択表示（RPSI）の構文

PB: 8 ビット RPSI メッセージの長さを 32 ビットの倍数にするために必要な未使用ビットの数です。

0：1ビットは送信時に0に設定し、受信時には無視しなければならない（MUST）。

ペイロードタイプ。7ビット ネイティブRPSIビット文字列が解釈されなければならないコンテキストにおけるRTPペイロードタ イプを示す。

ネイティブ RPSI ビット列：可変長 ビデオコーデックがネイティブに定義する RPSI 情報。

パディング。#PBビット RPSIメッセージの内容を次の32ビット境界まで埋めるために0に設定されるビットの数。パディングビットの数は、PBフィールドで示されなければならない（MUST）。

6.3.3.3.タイミングルール
RPSIは、SLIを使用するアルゴリズムよりもさらに遅延が重要です。これは、RPSI メッセージが古いほど、エンコーダがエンコーダとデコーダの同期性を再確立するために費やさなければならないビットが多くなるためです。特定のビットレート/フレームレート/ロスレートのシナリオにおけるRPSIのオーバーヘッドに関するいくつかの情報については、[15]を参照してください。

したがって、RPSIメッセージは通常、セクション3のアルゴリズムを採用し、できるだけ早く送信されるべきです。

6.4.アプリケーション層のフィードバックメッセージ
アプリケーション層FBメッセージは、ペイロード専用メッセージの特別なケースであり、PT=PSFBとFMT=15で識別される。アプリケーション層FBメッセージの構造自体がスタッキングを許可していない限り、FCIフィールドに含まれるアプリケーション層FBメッセージは正確に1つでなければならない（MUST）（例：固定サイズまたは明示的な長さのインジケータによって）。

これらのメッセージは、アプリケーションで定義されたデータを受信者のアプリケーションから送信者のアプリケーションに直接転送するために使用されます。転送されるデータは、FBメッセージによって識別されない。従って、アプリケーションはメッセージのペイロードを識別できなければならない（MUST）。

通常、アプリケーションは、MPEG-4 [16]のNEWPREDメッセージ（RFC 3016 [23]に従ってRTPパケットで伝送）、またはH.263/Annex N、U [17] のFBメッセージ（RFC 2429 [14]に従ってパケット化）など、独自のメッセージセットを定義しています。これらのメッセージは、RTCPメッセージからの追加情報を必要としません。したがって、アプリケーションメッセージは以下のようにFCIフィールドに配置されるだけで、長さフィールドはそれに応じて設定されます。

アプリケーション・メッセージ（FCI）：可変長 このフィールドには、受信機からソースに転送されるべきオリジナルのアプリケーション・メッセージが含まれています。フォーマットはアプリケーションに依存する。このフィールドの長さは可変である。アプリケーションデータが32ビットアラインメントでない場合、32ビットアラインメントを達成するために、パディングビットとバイトを追加しなければならない（MUST）。パディングの識別はアプリケーション層次第であり、本仕様では定義しない。

アプリケーションレイヤーFBメッセージ仕様は、メッセージが特定のコーデック (RTPペイロードタイプで識別)のコンテキストで特に解釈される必要があるかどうかを定義しなけれ ばならない[MUST]。適切な処理のためにペイロードタイプへの参照が必要な場合、アプリケーションレイヤーFBメッセージ仕様は、アプリケーションレイヤーFBメッセージ自体の一部としてペイロードタイプ情報を伝達する方法を定義しなければならない[MUST]。

7.早期フィードバックと輻輳制御
前のセクションでは、FB メッセージと、これらのメッセージを送信するためのタイ ミング・ルールを定義しました。受信したフィードバックに対応する方法は、フィードバック・メカニズムを使用するアプリケー ションに依存するため、このドキュメントの範囲外である。

しかし、すべてのアプリケーションにおいて、ベストエフォート型のネットワーク環境で動作する場合、[1]と[2]で定義されているように、メディアストリームの（TCPフレンドリー）輻輳制御に対する共通の要件が存在します。

RTCPフィードバック自体は、他のトランスポートレイヤーフィードバックメカニズム（通常、RTTのオーダーで動作する）よりもはるかに遅いタイムスケールで動作すると考えられるため、輻輳制御目的には不十分であることに注意する必要があります。したがって、適切な輻輳制御を実行するためには、追加のメカニズムが必要です。

RTP/AVPFセッションがベストエフォート環境で伝送される場合、RTP送信 者およびメディアセッションの能力の範囲内でメディアストリームのデータレートを決 定するために、競合するTCPコネクションと合理的に公平に利用できる帯域幅 を共有する輻輳制御アルゴリズム、たとえば、TFRC [7]を使用しなければならな い[MUST]。

8.セキュリティに関する考慮事項
提案されたペイロードフォーマットで情報を伝送するRTPパケットは、RTP仕様 [1]およびRTP/AVPプロファイル仕様[2]で説明されているセキュリティの考慮事項 に従うものとする。このプロファイルは、追加のセキュリティサービスを指定しない。

このプロファイルはRTCPのタイミング動作を変更し、RTCPの最小間隔である5秒 をなくし、受信者がより早いフィードバックを提供できるようにする。関連するRTPセッションのグループメンバー（多数のエンティティのふりを している可能性がある）は、大量のRTCPパケットを送信することでRTCPの動作を妨 げ、通常のRTCP報告や早期FBメッセージに使用できるRTCP帯域幅を縮小する可能性があ る。(このような影響を引き起こすために、エンティティがマルチキャストグループの メンバーである必要はないことに注意すること)。同様に、悪意のあるメンバーは非常に大きなRTCPメッセージを送信し、 avg_rtcp_size変数を増加させ、効果的に使用できるRTCP帯域幅を減少させる可能 性がある。

未知のRTCPフィードバックパケットを受信した場合、フィードバック情報が抑止される可能性がある。これは、悪意のあるグループメンバーが、受信者にも送信者にも認識されない（フィードバックを抑制する）ランダムな内容のペイロード固有のRTCPフィードバックパケットを送信するだけで、早期フィードバックを抑制するリスクをもたらす。

また、悪意のあるグループメンバーは、フィードバック情報において恣意的に高い損失率を報告し、送信者にデータ送信をスロットルさせ、冗長情報の量を増やしたり、パケット損失を装った他の対処（例えば、送信フレーム数を減らす、オーディオ／ビデオの品質を下げるなど）をさせたりすることができます。その結果、再生されるメディアストリームの品質が劣化する可能性がある。

最後に、悪意のあるグループメンバーは、多数のグループメンバーとして行動し、それによって人為的にEarly feedbackの帯域幅の大きなシェアを獲得し、他のグループメンバーの反応性を低下させることができます - おそらく、即時またはEarly feedbackモードで動作しなくなり、このプロファイルの全体の目的が損なわれることさえあります。

奇妙な報告動作を観察する場合、送信者および受信者は、保守的に動作すべき である[SHOULD]。1つまたは少数の受信者から過剰な障害報告があった場合、送信者は、メディ アストリームの送信動作を適応させるときに、このフィードバックを考慮しないこ とを決定してもよい[MAY]。いずれの場合でも、送信者および受信者は、最大RTCP帯域幅を順守すべき であるが、少なくとも定期的なRTCPパケットを送信できることを確認す るべきである[SHOULD]。送信者は、おかしな報告動作に遭遇した場合、送信帯域幅を調整する方法を注意深く 検討すべきである[SHOULD]。疑わしいフィードバックを無視する場合でも、 送信帯域幅を増加させてはならない[MUST NOT]。

すべてのRTCPメッセージを認証することで、偽のRTCPパケット(レギュラーおよび アーリー)を使用する攻撃を回避することができる。これは、AVPFプロファイルと、[22]に定義されている Secure RTPプロファイルを使用することで実現できる。前提条件として、これら2 つのプロファイルの適切な組み合わせ（「SAVPF」）が指定されている[21]。グループ認証(ソース認証とは対照的)を採用する場合、正しいキーイング材料を 保持する悪意のあるまたは機能しないグループメンバーが、前述の攻撃を実行する 可能性があることに注意すること。

9.IANA の考慮事項
ここに含まれるすべての登録には、以下の連絡先が使用されるものとします。

     連絡先      Joerg Ott mailto:jo@acm.org tel:+358-9-451-2460        
最小限の制御を伴うオーディオビジュアル会議のためのプロファイルの拡張としてのフィードバックプロファイルは、セッション記述プロトコル（特にタイプ "proto"）に登録されています。"RTP/AVPF "に登録されています。

SDPプロトコル（「proto」）。

名称RTP/AVPFのロングフォーム。拡張RTPプロファイル（RTCPベースのフィードバック付き） 名前の種類：proto 属性の種類：media level only 目的：media level only:メディアレベルのみ 目的RFC 4585 参照。RFC 4585

SDP属性(「att-field」)。

属性名：rtcp-fb 長文。RTCP フィードバックパラメータ 名前の型：att-field 属性の型：メディアレベルのみ。メディアレベルのみ charsetの対象となる。No Purpose:RFC 4585 参照。RFC 4585の値。この文書と以下の登録を参照

rtcp-fb」属性のために新しいレジストリが設定され、最初に次の登録が作成されました。本書で定義される "ack"、"nack"、"trr-int"、"app "である。

属性 "rtcp-fb "の初期値登録

Value name: ack Long name: Positive acknowledgement 参照。RFC 4585。

Value name: nack Long name: Negative Acknowledgement Reference:RFC 4585。

Value name: trr-int Long name: Minimal Receiver Report Interval Reference:RFC 4585。

Value name: app Long name: Application-defined parameter Reference:RFC 4585。

先着順でさらにエントリーを登録することができる。各新規登録は，パラメータ名と，可能な追加引数の構文を示す必要がある。各新規登録について、登録されたパラメータのセマンティクス、そのパラメータの構文とセマンティクス、および対応するフィードバックパケット形式(必要な場合)を指定する、永続的で安定した、一般にアクセス可能な文書が存在することが必須である。3]の一般的な登録手順が適用される。

ack "と "nack "の両方で使用するために、以下の値を初期登録する共同サブレジストリが設定されています。

属性値 "ack"、"nack "の初期値登録。

Value name: sli Long name: Slice Loss Indication Usable with: nack Reference:RFC 4585。

Value name: pli Long name: Picture Loss Indication Usable with: nack Reference:RFC 4585。

値の名前：rpsi 長い名前Reference Picture Selection Indication Usable with: ack, nack 参照。RFC 4585に準拠。

Value name: app Long name: Application layer feedback Usable with: ack, nack Reference:RFC 4585。

先着順でさらにエントリーを登録することができる。各登録は、パラメータ名、可能な追加引数の構文、およびそのパラメータが 「ack」または「nack」フィードバックに適用可能かどうか、またはその両方、 あるいは別の「rtcp-fb」属性パラメータに適用可能かどうかを示す必要があ る。各新規登録について、登録されたパラメータのセマンティクス、そのパラメータの シンタックスとセマンティクス、および対応するフィードバックパケットフォー マット(必要な場合)を規定する、永続的で安定し、一般にアクセスできる文書 が存在することが必須である。3]の一般的な登録手順が適用される。

2つのRTCP制御パケットタイプ：トランスポートレイヤーFBメッセージのクラス （「RTPFB」）およびペイロード固有FBメッセージのクラス（「PSFB」）に対する もの。セクション6に従って、RTPFB=205およびPSFB=206がRTCPレジストリに追加され た。

RTP RTCP Control Packet types (PT)の略。

名前RTPFB 長い名前: Generic RTP Feedback 値: 205 参照。RFC 4585。

名前PSFB Long name: Payload-specific Value: 206 Reference:RFC 4585。

AVPFは追加のRTCPペイロードタイプを定義しているため、対応する「reserved」 RTPペイロードタイプ空間(72～76、[2]で定義)は、それに応じて拡張されてい る。

RTPFBペイロードタイプとPSFBペイロードタイプの両方について、FMT値用の新しいサブレジストリが設定され、最初に以下の登録が作成された。

RTPFB の範囲内で、以下の 2 つのフォーマット（FMT）値が初期登録される。

名前Generic NACK 長い名前：Generic negative acknowledgement 値：1 参照。RFC 4585。

名称Extension ロングネーム。将来の拡張のために予約されている値。31 参照RFC 4585。

PSFB の範囲内で、以下の 5 つのフォーマット（FMT）値が初期登録されています。

名称PLI Long name: Picture Loss Indication Value: 1 参照。RFC 4585。

名称SLI Long name: Slice Loss Indication Value: 2 Reference:RFC 4585。

名称RPSI 長い名前です。Reference Picture Selection Indication 値。3 参照。RFC 4585。

名前AFB Long name: Application Layer Feedback Value: 15 Reference:RFC 4585。

名称Extension ロングネーム。将来の拡張のために予約されている。値。31 参照。RFC 4585。

RFC 2434 [9]で定義されている「要指定」規則に従って、さらにエントリーを登録する ことができる。各登録では、FMT値、FCIフィールドに入る特定のFBメッセージがあるかどうか、1つのFCIフィールドに複数のFBメッセージをスタックしてよいかどうかを示す必要がある。新規登録ごとに、登録されたパラメータのセマンティクスと、関連するFBメッセージの構文とセマンティクス（ある場合）を指定する、永続的で安定した、一般にアクセス可能な文書が存在することが必須である。3]の一般的な登録手順が適用される。

10.謝辞
本書はIETFのAudio-Visual Transport (AVT) Working Groupの成果物である。Steve CasnerとColin Perkinsのコメントと提案、そして多くの質問に答えてくれたことに感謝したい。また，Magnus Westerlundのレビューと貴重な提案，Shigeru FukunagaのFBメッセージフォーマットとセマンティクスに関する貢献に特に感謝したい．

We would also like to thank Andreas Buesching and people at Panasonic for their simulations and the first independent implementations of the feedback profile.

11. References
11.1. Normative References
[1] Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson, "RTP: A Transport Protocol for Real-Time Applications", STD 64, RFC 3550, July 2003.

[2] Schulzrinne, H. and S. Casner, "RTP Profile for Audio and Video Conferences with Minimal Control", STD 65, RFC 3551, July 2003.

[3] Handley, M., Jacobson, V., and C. Perkins, "SDP:セッション記述プロトコル", RFC 4566, 2006年7月.

[4] Casner, S., "Session Description Protocol (SDP) Bandwidth Modifiers for RTP Control Protocol (RTCP) Bandwidth", RFC 3556, July 2003.

[5] Bradner, S., "Key words for use in RFC to Indicate Requirement Levels", BCP 14, RFC 2119, March 1997.

[6] Turletti, T. and C. Huitema, "RTP Payload Format for H.261 Video Streams", RFC 2032, October 1996.

[7] Handley, M., Floyd, S., Padhye, J., and J. Widmer, "TCP Friendly Rate Control (TFRC):プロトコル仕様", RFC 3448, January 2003.

[8] Rosenberg, J. and H. Schulzrinne, "An Offer/Answer Model with Session Description Protocol (SDP)", RFC 3264, June 2002.

[9] Narten, T. and H. Alvestrand, "Guidelines for Writing an IANA Considerations Section in RFC", BCP 26, RFC 2434, October 1998.

11.2.参考文献
[10] Camarillo, G., Eriksson, G., Holler, J., and H. Schulzrinne, "Grouping of Media Lines in Session Description Protocol (SDP)"、RFC 3388、2002年12月。

[11] Perkins, C. and O. Hodson, "Options for Repair of Streaming Media", RFC 2354, June 1998.

[12] Rosenberg, J. and H. Schulzrinne, "An RTP Payload Format for Generic Forward Error Correction", RFC 2733, December 1999.

[13] Perkins, C., Kouvelas, I., Hodson, O., Hardman, V., Handley, M., Bolot, J., Vega-Garcia, A., および S. Fosse-Parisis, "RTP Payload for Redundant Audio Data", RFC 2198, 1997年9月.

[14] Bormann, C., Cline, L., Deisher, G., Gardos, T., Maciocco, C., Newell, D., Ott, J., Sullivan, G., Wenger, S., and C. Zhu, "RTP Payload Format for the 1998 Version of ITU-T Rec.H.263 Video (H.263+)", RFC 2429, 1998年10月.

[15] B. Girod, N. Faerber, "Feedback-based error control for mobile video transmission", Proceedings IEEE, Vol.87, No.10, pp.1707 - 1723, October, 1999.

[16] ISO/IEC 14496-2:2001/Amd.1:2002, "Information technology - Coding of audio-visual objects - Part2:Visual", 2001.

[17] ITU-T Recommendation H.263, "Video Coding for Low Bit Rate Communication", November 2000.

[18] Schulzrinne, H. and S. Petrack, "RTP Payload for DTMF Digits, Telephony Tones and Telephony Signals", RFC 2833, May 2000.

[19] Kohler, E., Handley, M., and S. Floyd, "Datagram Congestion Control Protocol (DCCP)", RFC 4340, March 2006.

[20] Handley, M., Floyd, S., Padhye, J., and J. Widmer, "TCP Friendly Rate Control (TFRC):プロトコル仕様", RFC 3448, January 2003.

[21] Ott, J. and E. Carrara, "Extended Secure RTP Profile for RTCP-based Feedback (RTP/SAVPF)", Work in Progress, December 2005.

[22] Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K. Norrman, "The Secure Real-time Transport Protocol (SRTP)", RFC 3711, March 2004 （「セキュアリアルタイムトランスポートプロトコル（SRTP）」）。

[また，このような場合にも，「RTP Payload Format for MPEG-4 Audio/Visual Streams」， RFC 3016，November 2000 を適用する．

[24] ITU-T Recommendation H.245, "Control protocol for multimedia communication", May 2006.

著者住所

Joerg Ott ヘルシンキ工科大学 (TKK) ネットワーキング研究所 PO Box 3000 FIN-02015 TKK Finland

電子メール：jo@acm.org

Stephan Wenger Nokia Research Center P.O. Box 100 33721 Tampere Finland

電子メール：stewe@stewe.org

佐藤 則幸 沖電気工業(株)335-8510 埼玉県蕨市中央1-16-8

   電話番号+81 48 431 5932 Fax: +81 48 431 9115 EMail: sato652@oki.com        
Carsten Burmeister パナソニックR&Dセンター・ドイツGmbH

電子メール：carsten.burmeister@eu.panasonic.com

Jose Rey パナソニックR&Dセンター・ドイツGmbH Monzastr.4c D-63225 Langen, Germany

電子メール：jose.rey@eu.panasonic.com

著作権表示

Copyright (C) The Internet Society (2006).

本書は、BCP78に含まれる権利、ライセンスおよび制限に従うものとし、そこに規定されたものを除き、すべての権利は著者が保持するものとします。

この文書とここに含まれる情報は「現状有姿」で提供され、寄稿者、寄稿者が代表または後援する組織（存在する場合）、インターネット協会、インターネット技術タスクフォースは、すべての保証を放棄する。本書の情報の使用がいかなる権利も侵害しないという保証、または商品性もしくは特定目的への適合性に関する黙示の保証を含むがこれに限定されない、明示または黙示のあらゆる保証を否認する。

知的財産権

IETFは、この文書に記述された技術の実装または使用に関連すると主張され るかもしれない知的財産権または他の権利の有効性または範囲、あるいはそのような 権利に基づくライセンスが利用可能または不可能な範囲に関して、いかなる立場 も持たない。また、このような権利を識別するために独自の努力を行ったことを 表明するものでもない。RFC文書の権利に関する手続きについての情報は、BCP 78およびBCP 79に記載されています。

IETF事務局に対して行われたIPR開示のコピー、および利用可能になるライ センスの保証、またはこの仕様の実装者やユーザーによるそのような所有権の 使用のための一般ライセンスや許可を得ようとした結果は、IETFオンラインIPR リポジトリ( http://www.ietf.org/ipr )から入手することができる。

IETFは、この標準を実装するのに必要な技術をカバーする可能性のある著作権、特許、特許 申請、その他の所有権に注意を向けるよう、関係者に呼びかけている。宛先はIETF（ietf-ipr@ietf.org）までお願いします。

謝辞

RFCエディター機能の資金は、IETF管理支援活動（IASA）から提供されています。